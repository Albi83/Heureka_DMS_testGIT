"scrInvoices As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    OnVisible: |
        =//Set(orderItemNumber,"12345");
        /*If(!IsBlank(InvoiceSHPItemID),
            Set(customFormMode,FormMode.Edit),
            Set(customFormMode,FormMode.New)
        );*/
        If(customFormMode = FormMode.Edit || customFormMode = FormMode.View,
            Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
            If(generateInvoiceFromOrder = false,
                Set(InvoiceSHPItem,Blank())
            )
        );
        Set(generateInvoiceFromOrder,false);
        
        If(customFormMode = FormMode.Edit && (!(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail) || !IsBlank(InvoiceSHPItem.'Action Required')),
            Set(customFormMode,FormMode.View)
        );
        
        // Default hodnoty datumÅ¯
        Set(InvoiceSHPItem, 
            Patch(InvoiceSHPItem, 
                {DMSInvDateReceived: If(customFormMode = FormMode.New,Today(),InvoiceSHPItem.DMSInvDateReceived)},
                {DMSInvPostingDate: If(customFormMode = FormMode.New,Today(),InvoiceSHPItem.'Issue date')},
                {DMSInvDueDate: If(customFormMode = FormMode.New,Today(),InvoiceSHPItem.'Due Date')}
            )
        );
        
        UpdateContext({popUpInvoiceItemVisibility: false});
        UpdateContext({popUpDelegateToVisibility: false});
        UpdateContext({popUpCommentVisibility: false});
        UpdateContext({popUpLogItemDetailVisibility: false});
        UpdateContext({popUpLogItemDetailVisibility: false});
        UpdateContext({popUpReopenVisibility: false});
        UpdateContext({txtDelagateToDescription_validation: true});
        
        UpdateContext({cbDelegateTo_validation: true});
        UpdateContext({cbOrderNumber_validation: true});
        UpdateContext({cbInvDocType_validation: true});
        UpdateContext({txtDateReceived_validation: true});
        UpdateContext({txtlblInvVendorDocumentNumber_validation: true});
        UpdateContext({txtPostingDate_validation: true});
        UpdateContext({txtInvDueDate_validation: true});
        UpdateContext({cbInvCurrency_validation: true});
        UpdateContext({txtInvDocumentExchangeRate_validation: true});
        UpdateContext({glrInvoiceAttachments_validation: true});
        UpdateContext({glrInvItems_validation: true});
        UpdateContext({cbReturnTo_validation: true});
        UpdateContext({txtReturnToDescription_validation: true});
        UpdateContext({txtInvVendorVS_validation: true});

    CanvasInvoiceDetails As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height - buttonsOrders.Height - headerOrders.Height - 15
        Width: =Parent.Width
        Y: =buttonsOrders.Y + buttonsOrders.Height + 15
        ZIndex: =1

        dcInvoiceDetails As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1496
            Width: =1366
            X: =0
            Y: =0
            ZIndex: =1

            rightColumn_1 As groupContainer:
                Fill: =Transparent
                Height: =801
                Width: =633
                X: =733
                ZIndex: =1

                lbIOrderLastInvoice As label:
                    Color: =Red
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lbIOrderLastInvoice" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =309
                    X: =12
                    ZIndex: =5

                cbInvoiceLastInvoice As checkbox:
                    CheckboxBackgroundFill: =White
                    CheckboxBorderColor: =patternColor1.Fill
                    CheckmarkFill: =patternColor1.Fill
                    Default: =InvoiceSHPItem.DMSInvLastInvoice
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && (InvoiceSHPItem.'Actual Phase' = "10" || InvoiceSHPItem.'Actual Phase' = "30")) || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderThickness: =0
                    Height: =40
                    OnSelect: =
                    Text: =""
                    Width: =40
                    X: =552
                    ZIndex: =6

                ApprovalDetails_1 As groupContainer:
                    Fill: =patternColor5.Fill
                    Height: =741
                    Width: =606
                    Y: =50
                    ZIndex: =7

                    ProcessHistory_3 As groupContainer:
                        BorderColor: =patternColor1.Fill
                        BorderThickness: =1
                        Fill: =Transparent
                        Height: =361
                        Width: =583
                        X: =10
                        Y: =313
                        ZIndex: =1

                        "glrProcessHistoryItems_3 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                            Height: =270
                            Items: =Sort(Filter(DMSInvoiceProcessLog, DMSInvLogItemId = Text(InvoiceSHPItem.ID)),Created, Descending)
                            Layout: =Layout.Vertical
                            TemplatePadding: =0
                            TemplateSize: =45
                            Width: =573
                            X: =10
                            Y: =85
                            ZIndex: =1

                            Separator1_8 As rectangle:
                                Fill: =patternColor1.Fill
                                Height: =1
                                OnSelect: =Select(Parent)
                                Width: =Parent.TemplateWidth
                                Y: =Parent.TemplateHeight - 1
                                ZIndex: =1

                            lblOrdLogEventDescriptionValue_3 As label:
                                Color: =labelSettings.Color
                                Font: =labelSettings.Font
                                Height: =38
                                Size: =10
                                Text: =Left(ThisItem.DMSInvLogEventDescription, 34) & If(Len(ThisItem.DMSInvLogEventDescription) > 34, "...")
                                Tooltip: =labelSettings.Tooltip
                                VerticalAlign: =VerticalAlign.Top
                                Width: =148
                                X: =376
                                Y: =4
                                ZIndex: =2

                            lblOrdLogEventTitleValue_3 As label:
                                Color: =labelSettings.Color
                                Font: =labelSettings.Font
                                Height: =38
                                Size: =10
                                Text: |-
                                    =//LookUp(LogActivities,AppKey=Value(ThisItem.DMSLogEventTitle) && Language=SelectedLanguage,String)
                                    ThisItem.DMSInvLogEventTitle
                                Tooltip: =labelSettings.Tooltip
                                Width: =278
                                X: =98
                                Y: =4
                                ZIndex: =3

                            lblOrdLogDateValue_3 As label:
                                Align: =Align.Right
                                Color: =labelSettings.Color
                                Font: =labelSettings.Font
                                Height: =38
                                Size: =10
                                Text: |-
                                    =Text(ThisItem.DMSInvLogDate, "[$-en-US]dd. mm. yyyy") & "
                                    " & Text(ThisItem.DMSInvLogDate, "[$-en-US]hh:mm")
                                Tooltip: =labelSettings.Tooltip
                                Width: =86
                                Y: =4
                                ZIndex: =5

                            Icon1_1 As icon.Add:
                                Color: =patternColor4.Fill
                                Height: =26
                                Icon: =Icon.ChevronRight
                                OnSelect: |-
                                    =Select(Parent);
                                    UpdateContext({popUpLogItemDetailVisibility: true});
                                Width: =30
                                X: =524
                                Y: =10
                                ZIndex: =6

                        lblOrdLogEventDescription_3 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventDescription" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            X: =386
                            Y: =50
                            ZIndex: =6

                        lblOrdLogEventTitle_3 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventTitle" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            Width: =134
                            X: =105
                            Y: =50
                            ZIndex: =7

                        lblOrdLogDate_3 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblOrdLogDate" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            Width: =95
                            X: =10
                            Y: =50
                            ZIndex: =10

                        lblProcessLog_3 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            FontWeight: =FontWeight.Semibold
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblProcessLog" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            Width: =190
                            X: =10
                            Y: =9
                            ZIndex: =11

                    txtDatumStavu_1 As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: =InvoiceSHPItem.Modified
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: =DisplayMode.Disabled
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =382
                        X: =211
                        Y: =txtVlastnik_1.Y + 100
                        ZIndex: =2

                    lblPhaseDate_1 As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblPhaseDate" && Language=SelectedLanguage,String)
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =lblOwner_1.X
                        Y: =lblOwner_1.Y + 100
                        ZIndex: =3

                    txtStav_1 As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: =LookUp(StatesInvoice,AppKey= Value(InvoiceSHPItem.'Actual Phase') && Language = SelectedLanguage, String)
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: =DisplayMode.Disabled
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =382
                        X: =211
                        Y: =txtVlastnik_1.Y + 50
                        ZIndex: =4

                    lblPhase_1 As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblPhase" && Language=SelectedLanguage,String)
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =lblOwner_1.X
                        Y: =lblOwner_1.Y + 50
                        ZIndex: =5

                    txtVlastnik_1 As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: |-
                            =//First(InvoiceSHPItem.DMSInvProcessActualOwner).DisplayName
                            InvoiceSHPItem.DMSInvProcessActualOwnerName
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: =DisplayMode.Disabled
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =382
                        X: =211
                        Y: =lblOwner_1.Y
                        ZIndex: =6

                    lblOwner_1 As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblOwner" && Language=SelectedLanguage,String)
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =10
                        Y: =10
                        ZIndex: =7

                    txtOrderOrdLogEventDescription_1 As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: =""
                        DisplayMode: |-
                            =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                DisplayMode.View
                            )
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        Height: =140
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        Mode: =TextMode.MultiLine
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =
                        Width: =382
                        X: =211
                        Y: =txtVlastnik_1.Y + 150
                        ZIndex: =8

                    lblOrderOrdLogEventDescription_1 As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventDescription" && Language=SelectedLanguage,String)
                        Tooltip: =
                        Width: =190
                        X: =10
                        Y: =lblOwner_1.Y + 150
                        ZIndex: =9

            leftColumn_1 As groupContainer:
                Fill: =Transparent
                Height: =801
                Width: =733
                X: =0*0
                ZIndex: =2

                txtOrderlblInvDescriptionDetailed As text:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =1
                    Default: =If(IsBlank(InvoiceSHPItem.Description),First(cbOrderNumber.SelectedItems).Description,InvoiceSHPItem.Description)
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && (InvoiceSHPItem.'Actual Phase' = "10" || InvoiceSHPItem.'Actual Phase' = "30")) || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    Height: =140
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    Mode: =TextMode.MultiLine
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 13 * 50
                    ZIndex: =3

                lblInvDescriptionDetailed As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvDescriptionDetailed" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 13 * 50
                    ZIndex: =4

                cblblInvLegalEntity As combobox:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =If(!IsBlank(cbOrderNumber.SelectedItems) && !IsEmpty(cbOrderNumber.SelectedItems),
                            LookUp(DMSLegalEntity,'Legal Entity Code' = First(cbOrderNumber.SelectedItems).'Legal Entity Code')
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSLegalEntityName"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    IsSearchable: =false
                    Items: =DMSLegalEntity
                    SearchFields: =["DMSLegalEntityName"]
                    SearchItems: =[]
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 3 * 50
                    ZIndex: =5

                lblInvLegalEntity As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvLegalEntity" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 3 * 50
                    ZIndex: =6

                cbInvDepartment As combobox:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =If(!IsBlank(cbOrderNumber.SelectedItems) && !IsEmpty(cbOrderNumber.SelectedItems),
                            LookUp(DMSDepartment,'Cost Center Code' = First(cbOrderNumber.SelectedItems).'Cost Center Code' && 'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSDepartmentName"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsInvoice,AppKey="findItems" && Language=SelectedLanguage,String)
                    IsSearchable: =false
                    Items: =Filter(DMSDepartment,'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                    SearchFields: =["DMSDepartmentName"]
                    SearchItems: =[]
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 2 * 50
                    ZIndex: =7

                lblInvDepartment As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblOrdDepartment" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 2 * 50
                    ZIndex: =8

                cbInvBudgetOwner As combobox:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |
                        =If(!IsBlank(cbOrderNumber.SelectedItems) && !IsEmpty(cbOrderNumber.SelectedItems),
                            //First(cbOrderNumber.SelectedItems).DMSOrdBudgetOwner
                            First(Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = First(cbOrderNumber.SelectedItems).'Budget Owner E-mail'))
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DisplayName","Mail"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    FontWeight: =FontWeight.Lighter
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsInvoice,AppKey="findItems" && Language=SelectedLanguage,String)
                    IsSearchable: =false
                    Items: |-
                        =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
                    PressedColor: =White
                    SearchFields: =["DisplayName"]
                    SearchItems: =[]
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 1 * 50
                    ZIndex: =9

                lblInvBudgetOwner As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvBudgetOwner" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 1 * 50
                    ZIndex: =10

                cbOrdVendor_1 As combobox:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =If(!IsBlank(cbOrderNumber.SelectedItems) && !IsEmpty(cbOrderNumber.SelectedItems),
                            LookUp(DMSVendor,'ERP Code' = First(cbOrderNumber.SelectedItems).'Vendor Code' && 'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSVendorName"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    IsSearchable: =false
                    Items: =DMSVendor
                    SearchFields: =["DMSVendorName"]
                    SearchItems: =[]
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 4 * 50
                    ZIndex: =12

                lblOrdVendor_1 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblOrdVendor" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 4 * 50
                    ZIndex: =13

                InvDateReceived As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="InvDateReceived" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 6 * 50
                    ZIndex: =16

                lblOrderNumber_1 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblOrderNumber" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =40
                    ZIndex: =18

                txtlblInvVendorDocumentNumber As text:
                    BorderColor: =If(txtlblInvVendorDocumentNumber_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: =InvoiceSHPItem.'Invoice number'
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 7 * 50
                    ZIndex: =21

                lblInvVendorDocumentNumber As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvVendorDocumentNumber" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =210
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 7 * 50
                    ZIndex: =22

                cbInvCurrency As combobox:
                    BorderColor: =If(cbInvCurrency_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: =LookUp(DMSCurrency,Currency = InvoiceSHPItem.DMSInvCurrencyCode && 'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSCurrencyCode"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsInvoice,AppKey="findItems" && Language=SelectedLanguage,String)
                    IsSearchable: =false
                    Items: =Filter(DMSCurrency,'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                    OnSelect: |-
                        =Set(InvoiceSHPItem, Patch(InvoiceSHPItem, {DMSInvDocumentExchangeRate: Blank()}))
                    SearchFields: =["DMSCurrencyCode"]
                    SearchItems: =[]
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 11 * 50
                    ZIndex: =23

                lblInvCurrency As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvCurrency" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 11 * 50
                    ZIndex: =24

                txtInvDocumentExchangeRate As text:
                    BorderColor: =If(txtInvDocumentExchangeRate_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: |+
                        =/*If(customFormMode = FormMode.New,
                            If(First(cbInvCurrency.SelectedItems).DMSCurrencyCode = First(cblblInvLegalEntity.SelectedItems).DMSLegalEntityCurrencyCode,
                                1
                            ),    
                            InvoiceSHPItem.DMSInvDocumentExchangeRate
                        )*/
                        If(
                            IsBlank(InvoiceSHPItem.'Document Exchange Rate'),
                            LookUp(
                                DMSCurrency,
                                'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && Currency = First(cbInvCurrency.SelectedItems).Currency
                            ).'Exchange Rate',
                            InvoiceSHPItem.'Document Exchange Rate'
                        )
                        
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    Format: =TextFormat.Number
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 12 * 50
                    ZIndex: =25

                lblInvDocumentExchangeRate As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvDocumentExchangeRate" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 12 * 50
                    ZIndex: =26

                cbOrderNumber As combobox:
                    BorderColor: =If(cbOrderNumber_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =LookUp(DMSOrder, ID = InvoiceSHPItem.'Order ID')
                        //If(generateInvoiceFromOrder=true, LookUp(DMSOrder, 'Order Number' = InvoiceSHPItem.'Order Number'),LookUp(DMSOrder, ID = InvoiceSHPItem.'Order ID'))
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSOrderNumber"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: |-
                        =//CAS0000157270 - chybÄjÃ­cÃ­ ORD v CB
                        Filter(Sort(DMSOrder,ID,Descending),StartsWith('Order Number',Self.SearchText) && ('Actual Phase' = "100" && DMSOrderAmountRemainingCalcByFlow > 1))
                        
                        /*Filter(Sort(DMSOrder,ID,Descending),'Actual Phase' = "100" && DMSOrderAmountRemainingCalcByFlow > 0)*/
                    OnSelect: |-
                        =//Patch(InvoiceSHPItem, { DMSInvActionDescription: First(Self.SelectedItems).DMSOrderDescription}) 
                        Set(InvoiceSHPItem, 
                            Patch(
                                InvoiceSHPItem,
                                {DMSInvNote: Blank()},
                                {DMSInvOrderID:First(cbOrderNumber.SelectedItems).ID}
                            )
                        )
                    SearchFields: =["DMSOrderNumber"]
                    SearchItems: |-
                        =Search(//CAS0000157270 - chybÄjÃ­cÃ­ ORD v CB
                        Filter(Sort(DMSOrder,ID,Descending),StartsWith('Order Number',Self.SearchText) && ('Actual Phase' = "100" && DMSOrderAmountRemainingCalcByFlow > 1))
                        
                        /*Filter(Sort(DMSOrder,ID,Descending),'Actual Phase' = "100" && DMSOrderAmountRemainingCalcByFlow > 0)*/,cbOrderNumber.SearchText,"DMSOrderNumber")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    ZIndex: =28

                cbInvDocType As combobox:
                    BorderColor: =If(cbInvDocType_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =If(customFormMode = FormMode.New,
                          LookUp(DMSDocumentType,'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'),
                          LookUp(DMSDocumentType,'Document Type Code' = InvoiceSHPItem.DMSInvDocTypeCode && 'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["Title"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: =Filter(DMSDocumentType,'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code')
                    SearchFields: =["Title"]
                    SearchItems: =Search(Filter(DMSDocumentType,'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'),cbInvDocType.SearchText,"Title")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 5 * 50
                    ZIndex: =29

                lblInvDocType As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvDocType" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 5 * 50
                    ZIndex: =30

                lblInvPostingDate As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblPostingDate" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 9 * 50
                    ZIndex: =31

                lblInvDueDate As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvDueDate" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 10 * 50
                    ZIndex: =33

                txtInvVendorVS As text:
                    BorderColor: =If(txtInvVendorVS_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: =InvoiceSHPItem.DMSInvVendorVS
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =472
                    X: =250
                    Y: =cbOrderNumber.Y + 8 * 50
                    ZIndex: =35

                lblInvVendorVS As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvVendorVS" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =210
                    X: =lblOrderNumber_1.X
                    Y: =lblOrderNumber_1.Y + 8 * 50
                    ZIndex: =36

                dpDateReceived_background As datepicker:
                    BorderColor: =If(txtDateReceived_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: =
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =RGBA(237, 237, 237, 1)
                    IconFill: =Transparent
                    InputTextPlaceholder: =
                    Tooltip: =
                    Width: =472
                    X: =249
                    Y: =300
                    ZIndex: =37

                "dpDateReceived As 'Date picker'":
                    AcceptsFocus: =false
                    ContentLanguage: =""
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Font: =Font.'Open Sans'
                    FontSize: =14
                    FontWeight: ="normal"
                    Height: =39
                    IconSize: =16
                    InitialPickerDate: =
                    OnChange: |-
                        =Set(InvoiceSHPItem, 
                            Patch(InvoiceSHPItem, 
                                {DMSInvDateReceived: dpDateReceived.Value},
                                {DMSInvPostingDate: dbPostingDate.Value},
                                {DMSInvDueDate: dpInvDueDate.Value}
                            )
                        );
                    PaddingBottom: =0
                    PaddingTop: =0
                    PCFTeamsTheme: =TeamsTheme.Default
                    ShowGoToToday: =false
                    TextColor: =
                    Value: =InvoiceSHPItem.DMSInvDateReceived
                    Visible: =true
                    Width: =471
                    X: =250
                    Y: =301
                    ZIndex: =38

                dpPostingDate_background As datepicker:
                    BorderColor: =If(txtPostingDate_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: =
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =RGBA(237, 237, 237, 1)
                    IconFill: =Transparent
                    InputTextPlaceholder: =
                    Tooltip: =
                    Width: =472
                    X: =250
                    Y: =450
                    ZIndex: =39

                "dbPostingDate As 'Date picker'":
                    AcceptsFocus: =false
                    DisplayMode: |
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Font: =Font.'Open Sans'
                    FontSize: =14
                    FontWeight: ="normal"
                    Height: =39
                    IconSize: =16
                    InitialPickerDate: =
                    OnChange: |-
                        =Set(InvoiceSHPItem, 
                            Patch(InvoiceSHPItem, 
                                {DMSInvDateReceived: dpDateReceived.Value},
                                {DMSInvPostingDate: dbPostingDate.Value},
                                {DMSInvDueDate: dpInvDueDate.Value}
                            )
                        );
                    PaddingBottom: =0
                    PaddingTop: =0
                    PCFTeamsTheme: =TeamsTheme.Default
                    ShowGoToToday: =false
                    Value: =InvoiceSHPItem.'Issue date'
                    Visible: =true
                    Width: =471
                    X: =251
                    Y: =451
                    ZIndex: =40

                dpInvDueDate_background As datepicker:
                    BorderColor: =If(txtInvDueDate_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: =
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =RGBA(237, 237, 237, 1)
                    IconFill: =Transparent
                    InputTextPlaceholder: =
                    Tooltip: =
                    Width: =472
                    X: =251
                    Y: =500
                    ZIndex: =41

                "dpInvDueDate As 'Date picker'":
                    AcceptsFocus: =false
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Font: =Font.'Open Sans'
                    FontSize: =14
                    FontWeight: ="normal"
                    Height: =39
                    IconSize: =16
                    InitialPickerDate: =
                    OnChange: |-
                        =Set(InvoiceSHPItem, 
                            Patch(InvoiceSHPItem, 
                                {DMSInvDateReceived: dpDateReceived.Value},
                                {DMSInvPostingDate: dbPostingDate.Value},
                                {DMSInvDueDate: dpInvDueDate.Value}
                            )
                        );
                    PaddingBottom: =0
                    PaddingTop: =0
                    PCFTeamsTheme: =TeamsTheme.Default
                    ShowGoToToday: =false
                    Value: =InvoiceSHPItem.'Due Date'
                    Visible: =true
                    Width: =471
                    X: =252
                    Y: =501
                    ZIndex: =42

            InvoiceItems As groupContainer:
                BorderColor: =If(glrInvItems_validation,patternColor1.Fill,patternColor6.Fill)
                BorderThickness: =1
                Fill: =Transparent
                Height: =383
                Width: =1325
                X: =13
                Y: =801
                ZIndex: =3

                lblInvItemTotals As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblTotal" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =25
                    Y: =320
                    ZIndex: =1

                lblInvItemLocalCurrencyAmountHeader As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvItemLocalCurrencyAmountHeader" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =135
                    X: =1065
                    Y: =35
                    ZIndex: =2

                lblInvItemDocumentCurrencyAmountHeader As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="InvItemDocumentCurrencyAmount" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =178
                    X: =869
                    Y: =35
                    ZIndex: =3

                lblInvItemDescriptionHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblDescription" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =604
                    Y: =35
                    ZIndex: =4

                lblInvItemBudgetItemHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblBudgetItem" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =95
                    X: =457
                    Y: =35
                    ZIndex: =5

                lblInvItemBudgetCategoryHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblBudgetCategory" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =91
                    X: =287
                    Y: =35
                    ZIndex: =6

                "glrInvItems As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                    Height: =229
                    Items: =Filter(DMSInvoiceItem, DMSInvItemInvoiceID= InvoiceSHPItem.ID)
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =45
                    Width: =1279
                    X: =25
                    Y: =90
                    ZIndex: =7

                    Separator1_5 As rectangle:
                        Fill: =patternColor1.Fill
                        Height: =1
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =5

                    lblInvItemProfitCenter As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemProfitCenterTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =115
                        Y: =2
                        ZIndex: =7

                    lblInvItemBudgetCategory As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemBudgetCategoryTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =261
                        Y: =2
                        ZIndex: =8

                    lblInvItemDescription As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemDescription
                        Tooltip: =labelSettings.Tooltip
                        Width: =301
                        X: =586
                        Y: =2
                        ZIndex: =9

                    lblInvItemDocumentCurrencyAmount As label:
                        Align: =Align.Right
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: |-
                            =//Text(ThisItem.DMSInvItemDocumentCurrencyAmount,"[$-en-US]#,#")
                            Text(ThisItem.DMSInvItemDocumentCurrencyAmount,"[$-en-US]#,##0.00")
                        Tooltip: =labelSettings.Tooltip
                        Width: =131
                        X: =887
                        Y: =2
                        ZIndex: =10

                    lblInvItemLocalCurrencyAmount As label:
                        Align: =Align.Right
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: |-
                            =Text(ThisItem.DMSInvItemLocalCurrencyAmount,"[$-en-US]#,##0.00")
                        Tooltip: =labelSettings.Tooltip
                        Width: =115
                        X: =1045
                        Y: =2
                        ZIndex: =11

                    btnInvItemEditItem As icon.Edit:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail) || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Edit
                        OnSelect: |-
                            =UpdateContext({popUpInvoiceItemVisibility: true});
                            UpdateContext({popUpInvoiceItemFormMode: FormMode.Edit});
                            UpdateContext({popUpInvoiceItemInvoiceNumber: ThisItem.ID});
                            UpdateContext({popUpInvoiceItem: LookUp(DMSInvoiceItem, ID = ThisItem.ID)});
                        PaddingTop: =-1
                        Width: =25
                        X: =1207
                        Y: =9
                        ZIndex: =13

                    btnInvItemDeleteItem As icon.Cancel:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail) || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Cancel
                        OnSelect: |-
                            =Refresh(DMSInvoiceProcessLog);
                            Remove(DMSInvoiceItem,ThisItem);
                        Width: =25
                        X: =1238
                        Y: =9
                        ZIndex: =14

                    lblInvItemBudgetItem As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemBudgetItemTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =166
                        X: =432
                        Y: =2
                        ZIndex: =15

                    lblInvItemDeliverablesDue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.Title
                        Tooltip: =labelSettings.Tooltip
                        Width: =115
                        Y: =2
                        ZIndex: =16

                    btnInvItemEditItem_1 As icon.Edit:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =/*If((customFormMode = FormMode.Edit && InvoiceSHPItem.DMSInvProcessActualPhase = "10" && SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail) || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )*/
                            DisplayMode.Edit
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Search
                        OnSelect: |-
                            =UpdateContext({popUpInvoiceItemVisibility: true});
                            UpdateContext({popUpInvoiceItemFormMode: FormMode.View});
                            UpdateContext({popUpInvoiceItemInvoiceNumber: ThisItem.ID});
                            UpdateContext({popUpInvoiceItem: LookUp(DMSInvoiceItem, ID = ThisItem.ID)});
                        PaddingTop: =-1
                        Width: =25
                        X: =1171
                        Y: =9
                        ZIndex: =17

                lblInvItemTitle As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvItemTitle" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =12
                    ZIndex: =8

                lblInvItemProfitCenterHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblProfitCentrum" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =90
                    X: =137
                    Y: =35
                    ZIndex: =9

                btnInvItemNewItem As icon.Edit:
                    Color: =patternColor1.Fill
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail) || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.View
                            )
                        )
                    FocusedBorderThickness: =0
                    Height: =25
                    Icon: =Icon.Add
                    OnSelect: |
                        =UpdateContext({popUpInvoiceItemVisibility: true});
                        UpdateContext({popUpInvoiceItemFormMode: FormMode.New});
                        UpdateContext({popUpInvoiceItem: Blank()});
                           
                    PaddingTop: =-1
                    Visible: =false
                    Width: =25
                    X: =202
                    Y: =7
                    ZIndex: =10

                lblInvItemsDocTotal As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =//Text(Sum(glrInvItems.AllItems, Value(lblInvItemDocumentCurrencyAmount.Text)),"[$-en-US]#,#")
                        Text(Sum(glrInvItems.AllItems, Value(DMSInvItemDocumentCurrencyAmount)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =858
                    Y: =319
                    ZIndex: =11

                lblInvItemsLocalTotal As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =//Text(Sum(glrInvItems.AllItems, Value(lblInvItemLocalCurrencyAmount.Text)),"[$-en-US]#,#")
                        Text(Sum(glrInvItems.AllItems, Value(DMSInvItemLocalCurrencyAmount)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =163
                    X: =1018
                    Y: =320
                    ZIndex: =12

                lblInvItemDeliverablesDueHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdItemDeliverablesDueHeader" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =125
                    X: =12
                    Y: =35
                    ZIndex: =13

                btnGenerateItems As button:
                    BorderColor: =patternColor3.DisabledFill
                    BorderThickness: =0.5
                    Color: =RGBA(0, 0, 0, 1)
                    DisplayMode: |-
                        =If((SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail &&  customFormMode = FormMode.Edit) && (!IsEmpty(cbOrderNumber.SelectedItems) && !IsBlank(cbOrderNumber.SelectedItems) && !IsBlank(txtInvDocumentExchangeRate.Text)), 
                        DisplayMode.Edit,
                        DisplayMode.Disabled
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =0.5
                    Height: =28
                    HoverBorderColor: =patternColor4.Fill
                    HoverColor: =
                    HoverFill: =
                    OnSelect: |-
                        =UpdateContext({tempOrdID: First(cbOrderNumber.SelectedItems).ID});
                        //ForAll(Filter(DMSOrderItem, (DMSOrdItemOrderID = tempOrdID) && (DMSOrdItemAmountActual > 0) /*&& (DMSOrdItemAmountActual > DMSOrdItemInvAmount_Approved)*/),
                        ForAll(
                            Filter(
                                AddColumns(Filter(DMSOrderItem,(DMSOrdItemOrderID = tempOrdID)),"TempRozdil",DMSOrdItemAmountActual - DMSOrdItemInvAmount_Approved),
                                (DMSOrdItemAmountActual > 0) && (TempRozdil > 0)
                            ),
                            Patch(
                                DMSInvoiceItem,
                                Defaults(DMSInvoiceItem),
                                {Title: Text(DMSOrdItemDeliverablesDue,"[$-en-US]yyyy/mm")},
                                {DMSInvItemDescription: DMSOrdItemDescription},
                                {DMSInvItemDepartmentCode: DMSOrdItemDepartmentCode},
                                {DMSInvItemLegalEntityCode: DMSOrdItemLegalEntityCode},
                                {DMSInvItemDocumentCurrencyAmount: TempRozdil / Value(txtInvDocumentExchangeRate.Text)},
                                {DMSInvItemLocalCurrencyAmount: TempRozdil},
                                {DMSInvItemInvoiceID: InvoiceSHPItem.ID},
                                {DMSInvItemOrderNumber: First(cbOrderNumber.SelectedItems).'Order Number'},
                                {DMSInvItemBudgetCategoryCode: DMSOrdItemBudgetCategoryCode},
                                {DMSInvItemBudgetCategoryTitle: DMSOrdItemBudgetCategoryTitle},
                                {DMSInvItemBudgetItemCode: DMSOrdItemBudgetItemCode},
                                {DMSInvItemBudgetItemTitle: DMSOrdItemBudgetItemTitle},
                                {DMSInvItemProfitCenterCode: DMSOrdItemProfitCenterCode},
                                {DMSInvItemProfitCenterTitle: DMSOrdItemProfitCenterTitle},
                                {DMSInvItemOrderID:DMSOrdItemOrderID},
                                {DMSInvItemPostingDate:dbPostingDate.Value},
                                {DMSInvItemInvoiceNumber:InvoiceSHPItem.Title},
                                {DMSInvItemOrderItemID:ID}
                            );
                        );
                        Patch(
                            DMSInvoice,
                            LookUp(DMSInvoice,ID = InvoiceSHPItemID),
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)}
                        );
                        Refresh(DMSInvoiceItem);
                    PressedBorderColor: =patternColor4.Fill
                    PressedColor: =
                    PressedFill: =ColorFade(patternColor3.Fill, 90%)
                    Size: =13
                    Text: =LookUp(StringsInvoice,AppKey="btnGenerateItems" && Language=SelectedLanguage,String)
                    Visible: =(customFormMode = FormMode.Edit && (InvoiceSHPItem.'Actual Phase' = "10"))
                    Width: =173
                    X: =174
                    Y: =7
                    ZIndex: =14

                lblNonActive_2 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(0, 0, 0, 0.4)
                    Height: =Parent.Height
                    Size: =30
                    Text: =LookUp(StringsInvoice,AppKey="lblNonActive" && Language=SelectedLanguage,String)
                    Visible: =customFormMode = FormMode.New
                    Width: =Parent.Width
                    ZIndex: =15

            InvoiceAttachments As groupContainer:
                BorderColor: =If(glrInvoiceAttachments_validation,patternColor1.Fill,patternColor6.Fill)
                BorderThickness: =1
                Fill: =Transparent
                Height: =283
                Width: =1325
                X: =13
                Y: =1198
                ZIndex: =4

                lblAttachment_1 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblAttachment" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =6
                    Y: =45
                    ZIndex: =1

                "glrInvoiceAttachments As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                    Height: =185
                    Items: =LookUp(DMSInvoice,ID = InvoiceSHPItem.ID).Attachments
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =45
                    Width: =1294
                    X: =6
                    Y: =85
                    ZIndex: =2

                    Separator1_7 As rectangle:
                        Fill: =patternColor1.Fill
                        Height: =1
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =5

                    lblAttachmentName_1 As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Height: =34
                        Size: =labelSettings.Size
                        Text: =ThisItem.DisplayName
                        Tooltip: =labelSettings.Tooltip
                        Width: =1127
                        X: =6
                        Y: =8
                        ZIndex: =6

                    icoDelete_3 As icon.Cancel:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =If((customFormMode = FormMode.Edit && InvoiceSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail) || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                DisplayMode.Disabled
                            )
                        FocusedBorderThickness: =0
                        Height: =31
                        Icon: =Icon.Cancel
                        OnSelect: |-
                            =UpdateContext({popUpNewAttachmentVisibility: true});
                        Width: =25
                        X: =1239
                        Y: =8
                        ZIndex: =14

                    icoDownload_1 As icon.Download:
                        Color: =patternColor1.Fill
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Download
                        OnSelect: |-
                            =//Download(ThisItem.AbsoluteUri)
                            Launch(ThisItem.AbsoluteUri)
                            /*
                            Launch(Left(ThisItem.AbsoluteUri; With({_aString: ThisItem.AbsoluteUri;
                                  _lookingFor: "/"};
                                If(EndsWith(_aString; _lookingFor); 
                                    Len(_aString);
                                    Find(_lookingFor & Last(Split(_aString; _lookingFor)).Result; _aString)
                                )
                            ) ) & EncodeUrl(Last(Split(ThisItem.AbsoluteUri; "/" )).Result))
                            */
                        Width: =25
                        X: =1195
                        Y: =11
                        ZIndex: =15

                lblInvoiceAttachments As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvoiceAttachments" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =6
                    Y: =5
                    ZIndex: =3

                btnNewAttachment_1 As icon.Edit:
                    Color: =patternColor1.Fill
                    DisplayMode: =If(SHPMeClaim.Email = InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New, DisplayMode.Edit,DisplayMode.Disabled)
                    FocusedBorderThickness: =0
                    Height: =25
                    Icon: =Icon.Add
                    OnSelect: |-
                        =UpdateContext({popUpNewAttachmentVisibility: true});
                    PaddingTop: =-1
                    Width: =25
                    X: =207
                    Y: =12
                    ZIndex: =4

                lblNonActive_4 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(0, 0, 0, 0.4)
                    Height: =Parent.Height
                    Size: =30
                    Text: =LookUp(StringsInvoice,AppKey="lblNonActive" && Language=SelectedLanguage,String)
                    Visible: =customFormMode = FormMode.New
                    Width: =1325
                    ZIndex: =5

    buttonsInvoices As groupContainer:
        Fill: =Transparent
        Height: |-
            =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                58,
                0
            )
        Width: =Parent.Width
        X: =0*0
        Y: =74
        ZIndex: =2

        btnOrdSave_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                    Set(cbInvBudgetOwnerValue,BlankPeople),
                    Set(cbInvBudgetOwnerValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                            Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."}
                            )
                    )
                );
                
                If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                    Set(cbOrderRequestorValue,BlankPeople),
                    Set(cbOrderRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                            Department:"",
                            DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                            Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                            JobTitle:".",
                            Picture:"."}
                            )
                    )
                );
                
                Refresh(DMSInvoice);
                Set(NewInvoiceSHPItem,
                    Patch(
                        DMSInvoice,
                        If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                        {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                        //{DMSInvBudgetExchangeRate:Value(txtInvDocumentExchangeRate.Text)}, //v nastavenÃ­ legal entity
                        {'Budget Owner':cbInvBudgetOwnerValue},
                        {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                        {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                        {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                        {DMSInvDateReceived:dpDateReceived.Value},
                        {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                        {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                        {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                        {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                        {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                        {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                        {'Due Date':dpInvDueDate.Value},
                        {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                        {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                        {DMSInvLegalEntityType:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Type'},
                        {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                        {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                        {Description:txtOrderlblInvDescriptionDetailed.Text},
                        {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                        {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                        //{DMSInvOrderRevise:}, ÅeÅ¡Ã­ flow
                        {'Issue date':dbPostingDate.Value},
                        {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                        {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                        {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                        {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                        //{DMSInvProcessEyesCount:}, ÅeÅ¡Ã­ flow
                        //{DMSInvProcessNextOwner:}, nepouÅ¾ito
                        //{DMSInvProcessNextOwnerEMail:}, nepouÅ¾ito
                        //{DMSInvProcessNextOwnerName:}, nepouÅ¾ito
                        //{DMSInvProcessNextPhase:}, nepouÅ¾ito
                        {DMSInvProcessNote:txtOrderOrdLogEventDescription_1.Text},
                        //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow
                        //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow
                        //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow
                        //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow
                        {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                        {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                        {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                        {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                        {DMSInvOrderRequestor:cbOrderRequestorValue},
                        {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                        {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                        {DMSInvVendorVS:txtInvVendorVS.Text}
                    );        
                );
                
                If(customFormMode = FormMode.New,
                    Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                    Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                    Set(customFormMode, FormMode.Edit);
                );
                
                //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                Reset(txtOrderOrdLogEventDescription_1);
                Refresh(DMSInvoiceProcessLog);
                Notify(LookUp(StringsProcess,AppKey="NotificationSaved" && Language=SelectedLanguage,String),NotificationType.Success);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsInvoice,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
            Width: =120
            X: =40
            Y: =18
            ZIndex: =1

        btnOrdRequestComments_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(InvoiceSHPItem.'Actual Phase' = "20",
                	// STOP
                	Patch(
                		DMSInvoice,
                		LookUp(DMSInvoice,ID = InvoiceSHPItemID),
                		{DMSInvActionDate:Now()},
                		{DMSInvActionDescription:txtOrderOrdLogEventDescription_1.Text},
                		{'Action Required':"END COMMENT"},
                		{DMSInvActionRequiredBy:Table(SHPMeClaim)},
                		{DMSInvActionRequiredByEMail:SHPMeClaim.Email}
                	);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationReturned" && Language=SelectedLanguage,String) & " " & InvoiceSHPItem.DMSInvProcessPreviousOwnerName,NotificationType.Success);
                    ,
                	UpdateContext({popUpCommentVisibility: true});
                )
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: |-
                =If(InvoiceSHPItem.'Actual Phase' = "20",
                    LookUp(StringsInvoice,AppKey="btnOrdStopComments" && Language=SelectedLanguage,String),
                    LookUp(StringsInvoice,AppKey="btnOrdRequestComments" && Language=SelectedLanguage,String)
                )
            Visible: =CountRows(InvoiceSHPItem.'Actual Owner') < 2
            Width: =206
            X: =177
            Y: =18
            ZIndex: =2

        btnOrdStartApproval_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsEmpty(cbOrderNumber.SelectedItems) || IsBlank(cbOrderNumber.SelectedItems),
                   UpdateContext({cbOrderNumber_validation: false}),
                   UpdateContext({cbOrderNumber_validation: true})
                );
                If(IsEmpty(cbInvDocType.SelectedItems) || IsBlank(cbInvDocType.SelectedItems),
                   UpdateContext({cbInvDocType_validation: false}),
                   UpdateContext({cbInvDocType_validation: true})
                );
                If(IsBlank(dpDateReceived.Value),
                   UpdateContext({txtDateReceived_validation: false}),
                   UpdateContext({txtDateReceived_validation: true})
                );
                If(IsBlank(txtlblInvVendorDocumentNumber.Text),
                   UpdateContext({txtlblInvVendorDocumentNumber_validation: false}),
                   UpdateContext({txtlblInvVendorDocumentNumber_validation: true})
                );
                If(IsBlank(dbPostingDate.Value),
                   UpdateContext({txtPostingDate_validation: false}),
                   UpdateContext({txtPostingDate_validation: true})
                );
                If(IsBlank(dpInvDueDate.Value),
                   UpdateContext({txtInvDueDate_validation: false}),
                   UpdateContext({txtInvDueDate_validation: true})
                );
                If(IsEmpty(cbInvCurrency.SelectedItems) || IsBlank(cbInvCurrency.SelectedItems),
                   UpdateContext({cbInvCurrency_validation: false}),
                   UpdateContext({cbInvCurrency_validation: true})
                );
                If(IsBlank(txtInvDocumentExchangeRate.Text),
                   UpdateContext({txtInvDocumentExchangeRate_validation: false}),
                   UpdateContext({txtInvDocumentExchangeRate_validation: true})
                );
                If(CountRows(glrInvoiceAttachments.AllItems) < 1,
                   UpdateContext({glrInvoiceAttachments_validation: false}),
                   UpdateContext({glrInvoiceAttachments_validation: true})
                );
                If(CountRows(glrInvItems.AllItems) < 1,
                   UpdateContext({glrInvItems_validation: false}),
                   UpdateContext({glrInvItems_validation: true})
                );
                /*If(IsBlank(txtInvVendorVS.Text),
                   UpdateContext({txtInvVendorVS_validation: false}),
                   UpdateContext({txtInvVendorVS_validation: true})
                );*/
                
                If(
                    cbOrderNumber_validation &&
                    cbInvDocType_validation &&
                    txtDateReceived_validation &&
                    txtlblInvVendorDocumentNumber_validation &&
                    txtPostingDate_validation &&
                    txtInvDueDate_validation &&
                    cbInvCurrency_validation &&
                    txtInvDocumentExchangeRate_validation &&
                    glrInvoiceAttachments_validation &&
                    glrInvItems_validation,
                    Refresh(DMSInvoice);
                    If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                        Set(cbInvBudgetOwnerValue,BlankPeople),
                        Set(cbInvBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                                Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."}
                                )
                        )
                    );
                
                    If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                        Set(cbOrdRequestorValue,BlankPeople),
                        Set(cbOrdRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                            Department:"",
                            DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                            Email:First(cbOrdRequestor.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Set(cbOrdBudgetOwnerValue,BlankPeople),
                        Set(cbOrdBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Department:"",
                            DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                            Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                    Set(cbWatchersValue,BlankPeople);
                    If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                        Set(cbWatchersValue,BlankPeople),
                        
                        Set(cbWatchersValue,
                            ForAll(cbWatchers.SelectedItems, {
                                '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                Department: "",
                                DisplayName: ThisRecord.DisplayName,
                                Email: ThisRecord.Mail,
                                JobTitle: "",
                                Picture: ""
                                }
                            )
                        )
                
                    );
                    If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                        Set(cbOrderRequestorValue,BlankPeople),
                        Set(cbOrderRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                                Department:"",
                                DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                                Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                                JobTitle:".",
                                Picture:"."}
                                )
                        )
                    );
                
                    Set(NewInvoiceSHPItem,
                        Patch(
                            DMSInvoice,
                            If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                            //{DMSInvBudgetExchangeRate:Value(txtInvDocumentExchangeRate.Text)}, //v nastavenÃ­ legal entity
                            {'Budget Owner':cbInvBudgetOwnerValue},
                            {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                            {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                            {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                            {DMSInvDateReceived:dpDateReceived.Value},
                            {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                            {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                            {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                            {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                            {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Due Date':dpInvDueDate.Value},
                            {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                            {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSInvLegalEntityType:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Type'},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                            {Description:txtOrderlblInvDescriptionDetailed.Text},
                            {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                            {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                            //{DMSInvOrderRevise:}, ÅeÅ¡Ã­ flow
                            {'Issue date':dbPostingDate.Value},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                            {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                            {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                            //{DMSInvProcessEyesCount:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessNextOwner:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerEMail:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerName:}, nepouÅ¾ito
                            //{DMSInvProcessNextPhase:}, nepouÅ¾ito
                            {DMSInvProcessNote:txtOrderOrdLogEventDescription_1.Text},
                            //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow
                            {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                            {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                            {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                            {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                            {DMSInvOrderRequestor:cbOrderRequestorValue},
                            {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                            {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                            {DMSInvVendorVS:txtInvVendorVS.Text}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,
                        Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                        Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                    );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription_1);
                    Refresh(DMSInvoiceProcessLog);
                    
                    // APPROVE
                	Patch(
                		DMSInvoice,
                		LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID),
                		{DMSInvActionDate:Now()},
                		{DMSInvActionDescription:txtOrderOrdLogEventDescription.Text},
                		{'Action Required':"START APPROVE"},
                		{DMSInvActionRequiredBy:Table(SHPMeClaim)},
                		{DMSInvActionRequiredByEMail:SHPMeClaim.Email},
                        {'Approved by':Collect(NewInvoiceSHPItem.'Approved by',SHPMeClaim)}
                	);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationApprovalStarted" && Language=SelectedLanguage,String),NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsInvoice,AppKey="btnOrdStartApproval" && Language=SelectedLanguage,String)
            Visible: =(customFormMode = FormMode.Edit && (InvoiceSHPItem.'Actual Phase' = "10")) || customFormMode = FormMode.New
            Width: =199
            X: =400
            Y: =18
            ZIndex: =3

        btnOrdDelegate_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpDelegateToVisibility: true});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsInvoice,AppKey="btnOrdDelegate" && Language=SelectedLanguage,String)
            Visible: =CountRows(InvoiceSHPItem.'Actual Owner') < 2
            X: =803
            Y: =18
            ZIndex: =5

        btnOrdApprove_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsEmpty(cbOrderNumber.SelectedItems) || IsBlank(cbOrderNumber.SelectedItems),
                   UpdateContext({cbOrderNumber_validation: false}),
                   UpdateContext({cbOrderNumber_validation: true})
                );
                If(IsEmpty(cbInvDocType.SelectedItems) || IsBlank(cbInvDocType.SelectedItems),
                   UpdateContext({cbInvDocType_validation: false}),
                   UpdateContext({cbInvDocType_validation: true})
                );
                If(IsBlank(dpDateReceived.Value),
                   UpdateContext({txtDateReceived_validation: false}),
                   UpdateContext({txtDateReceived_validation: true})
                );
                If(IsBlank(txtlblInvVendorDocumentNumber.Text),
                   UpdateContext({txtlblInvVendorDocumentNumber_validation: false}),
                   UpdateContext({txtlblInvVendorDocumentNumber_validation: true})
                );
                If(IsBlank(dbPostingDate.Value),
                   UpdateContext({txtPostingDate_validation: false}),
                   UpdateContext({txtPostingDate_validation: true})
                );
                If(IsBlank(dpInvDueDate.Value),
                   UpdateContext({txtInvDueDate_validation: false}),
                   UpdateContext({txtInvDueDate_validation: true})
                );
                If(IsEmpty(cbInvCurrency.SelectedItems) || IsBlank(cbInvCurrency.SelectedItems),
                   UpdateContext({cbInvCurrency_validation: false}),
                   UpdateContext({cbInvCurrency_validation: true})
                );
                If(IsBlank(txtInvDocumentExchangeRate.Text),
                   UpdateContext({txtInvDocumentExchangeRate_validation: false}),
                   UpdateContext({txtInvDocumentExchangeRate_validation: true})
                );
                If(CountRows(glrInvoiceAttachments.AllItems) < 1,
                   UpdateContext({glrInvoiceAttachments_validation: false}),
                   UpdateContext({glrInvoiceAttachments_validation: true})
                );
                If(CountRows(glrInvItems.AllItems) < 1,
                   UpdateContext({glrInvItems_validation: false}),
                   UpdateContext({glrInvItems_validation: true})
                );
                
                If(
                    cbOrderNumber_validation &&
                    cbInvDocType_validation &&
                    txtDateReceived_validation &&
                    txtlblInvVendorDocumentNumber_validation &&
                    txtPostingDate_validation &&
                    txtInvDueDate_validation &&
                    cbInvCurrency_validation &&
                    txtInvDocumentExchangeRate_validation &&
                    glrInvoiceAttachments_validation &&
                    glrInvItems_validation,
                    Refresh(DMSInvoice);
                    If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                        Set(cbInvBudgetOwnerValue,BlankPeople),
                        Set(cbInvBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                                Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."}
                                )
                            )
                    );
                    If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                        Set(cbOrderRequestorValue,BlankPeople),
                        Set(cbOrderRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                                Department:"",
                                DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                                Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                                JobTitle:".",
                                Picture:"."}
                                )
                        )
                    );
                
                    Set(NewInvoiceSHPItem,
                        Patch(
                            DMSInvoice,
                            If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                            //{DMSInvBudgetExchangeRate:Value(txtInvDocumentExchangeRate.Text)}, //v nastavenÃ­ legal entity
                            {'Budget Owner':cbInvBudgetOwnerValue},
                            {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                            {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                            {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                            {DMSInvDateReceived:dpDateReceived.Value},
                            {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                            {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                            {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                            {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                            {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Due Date':dpInvDueDate.Value},
                            {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                            {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSInvLegalEntityType:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Type'},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                            {Description:txtOrderlblInvDescriptionDetailed.Text},
                            {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                            {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                            //{DMSInvOrderRevise:}, ÅeÅ¡Ã­ flow
                            {'Issue date':dbPostingDate.Value},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                            {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                            {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                            //{DMSInvProcessEyesCount:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessNextOwner:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerEMail:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerName:}, nepouÅ¾ito
                            //{DMSInvProcessNextPhase:}, nepouÅ¾ito
                            {DMSInvProcessNote:txtOrderOrdLogEventDescription_1.Text},
                            //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow
                            {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                            {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                            {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                            {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                            {DMSInvOrderRequestor:cbOrderRequestorValue},
                            {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                            {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                            {DMSInvVendorVS:txtInvVendorVS.Text}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,
                        Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                        Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                    );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription_1);
                    Refresh(DMSInvoiceProcessLog);
                    
                    // APPROVE
                	Patch(
                		DMSInvoice,
                		LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID),
                		{DMSInvActionDate:Now()},
                		{DMSInvActionDescription:txtOrderOrdLogEventDescription.Text},
                		{'Action Required':"START APPROVE"},
                		{DMSInvActionRequiredBy:Table(SHPMeClaim)},
                		{DMSInvActionRequiredByEMail:SHPMeClaim.Email},
                        {'Approved by':Collect(NewInvoiceSHPItem.'Approved by',SHPMeClaim)}
                	);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationApproved" && Language=SelectedLanguage,String),NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsInvoice,AppKey="btnOrdApprove" && Language=SelectedLanguage,String)
            Visible: |-
                =customFormMode = FormMode.Edit && (
                    InvoiceSHPItem.'Actual Phase' = "30" ||
                    InvoiceSHPItem.'Actual Phase' = "40" ||
                    InvoiceSHPItem.'Actual Phase' = "45" ||
                    InvoiceSHPItem.'Actual Phase' = "50" ||
                    InvoiceSHPItem.'Actual Phase' = "60" ||
                    InvoiceSHPItem.'Actual Phase' = "70"
                )
            X: =983
            Y: =18
            ZIndex: =6

        btnOrdReject_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsEmpty(cbOrderNumber.SelectedItems) || IsBlank(cbOrderNumber.SelectedItems),
                   UpdateContext({cbOrderNumber_validation: false}),
                   UpdateContext({cbOrderNumber_validation: true})
                );
                If(IsEmpty(cbInvDocType.SelectedItems) || IsBlank(cbInvDocType.SelectedItems),
                   UpdateContext({cbInvDocType_validation: false}),
                   UpdateContext({cbInvDocType_validation: true})
                );
                If(IsBlank(dpDateReceived.Value),
                   UpdateContext({txtDateReceived_validation: false}),
                   UpdateContext({txtDateReceived_validation: true})
                );
                If(IsBlank(txtlblInvVendorDocumentNumber.Text),
                   UpdateContext({txtlblInvVendorDocumentNumber_validation: false}),
                   UpdateContext({txtlblInvVendorDocumentNumber_validation: true})
                );
                If(IsBlank(dbPostingDate.Value),
                   UpdateContext({txtPostingDate_validation: false}),
                   UpdateContext({txtPostingDate_validation: true})
                );
                If(IsBlank(dpInvDueDate.Value),
                   UpdateContext({txtInvDueDate_validation: false}),
                   UpdateContext({txtInvDueDate_validation: true})
                );
                If(IsEmpty(cbInvCurrency.SelectedItems) || IsBlank(cbInvCurrency.SelectedItems),
                   UpdateContext({cbInvCurrency_validation: false}),
                   UpdateContext({cbInvCurrency_validation: true})
                );
                If(IsBlank(txtInvDocumentExchangeRate.Text),
                   UpdateContext({txtInvDocumentExchangeRate_validation: false}),
                   UpdateContext({txtInvDocumentExchangeRate_validation: true})
                );
                If(CountRows(glrInvoiceAttachments.AllItems) < 1,
                   UpdateContext({glrInvoiceAttachments_validation: false}),
                   UpdateContext({glrInvoiceAttachments_validation: true})
                );
                If(CountRows(glrInvItems.AllItems) < 1,
                   UpdateContext({glrInvItems_validation: false}),
                   UpdateContext({glrInvItems_validation: true})
                );
                
                If(
                    cbOrderNumber_validation &&
                    cbInvDocType_validation &&
                    txtDateReceived_validation &&
                    txtlblInvVendorDocumentNumber_validation &&
                    txtPostingDate_validation &&
                    txtInvDueDate_validation &&
                    cbInvCurrency_validation &&
                    txtInvDocumentExchangeRate_validation &&
                    glrInvoiceAttachments_validation &&
                    glrInvItems_validation,
                
                    If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                    Set(cbInvBudgetOwnerValue,BlankPeople),
                    Set(cbInvBudgetOwnerValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                            Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."}
                            )
                        )
                    );
                
                    If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                        Set(cbOrderRequestorValue,BlankPeople),
                        Set(cbOrderRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                                Department:"",
                                DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                                Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                                JobTitle:".",
                                Picture:"."}
                                )
                        )
                    );
                
                    Set(NewInvoiceSHPItem,
                        Patch(
                            DMSInvoice,
                            If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                            //{DMSInvBudgetExchangeRate:Value(txtInvDocumentExchangeRate.Text)}, //v nastavenÃ­ legal entity
                            {'Budget Owner':cbInvBudgetOwnerValue},
                            {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                            {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                            {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                            {DMSInvDateReceived:dpDateReceived.Value},
                            {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                            {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                            {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                            {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                            {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Due Date':dpInvDueDate.Value},
                            {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                            {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSInvLegalEntityType:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Type'},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                            {Description:txtOrderlblInvDescriptionDetailed.Text},
                            {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                            {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                            //{DMSInvOrderRevise:}, ÅeÅ¡Ã­ flow
                            {'Issue date':dbPostingDate.Value},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                            {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                            {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                            //{DMSInvProcessEyesCount:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessNextOwner:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerEMail:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerName:}, nepouÅ¾ito
                            //{DMSInvProcessNextPhase:}, nepouÅ¾ito
                            {DMSInvProcessNote:txtOrderOrdLogEventDescription_1.Text},
                            //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow
                            {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                            {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                            {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                            {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                            {DMSInvOrderRequestor:cbOrderRequestorValue},
                            {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                            {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                            {DMSInvVendorVS:txtInvVendorVS.Text}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,
                        Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                        Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                    );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription_1);
                    Refresh(DMSInvoiceProcessLog);
                    
                    // APPROVE
                	Patch(
                		DMSInvoice,
                		LookUp(DMSInvoice,ID = InvoiceSHPItemID),
                		{DMSInvActionDate:Now()},
                		{DMSInvActionDescription:txtOrderOrdLogEventDescription.Text},
                		{'Action Required':"START DECLINE"},
                		{DMSInvActionRequiredBy:Table(SHPMeClaim)},
                		{DMSInvActionRequiredByEMail:SHPMeClaim.Email}
                	);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationDecline" && Language=SelectedLanguage,String),NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsInvoice,AppKey="btnOrdReject" && Language=SelectedLanguage,String)
            Visible: |-
                =customFormMode = FormMode.Edit && (
                    InvoiceSHPItem.'Actual Phase' = "30" ||
                    InvoiceSHPItem.'Actual Phase' = "40" ||
                    InvoiceSHPItem.'Actual Phase' = "45" ||
                    InvoiceSHPItem.'Actual Phase' = "50" ||
                    InvoiceSHPItem.'Actual Phase' = "60" ||
                    InvoiceSHPItem.'Actual Phase' = "70"
                )
            X: =1159
            Y: =18
            ZIndex: =7

        btnReopenPopUp_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in InvoiceSHPItem.DMSInvProcessActualOwnerEmail || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpReopenVisibility: true});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnReopenPopUp" && Language=SelectedLanguage,String)
            Visible: =(customFormMode = FormMode.Edit && (InvoiceSHPItem.'Actual Phase' = "99"))
            Width: =247
            X: =983
            Y: =18
            ZIndex: =8

    popUpItemInvoice As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpInvoiceItemVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =3

        popUpItemBody_1 As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =627
            Visible: =popUpInvoiceItemVisibility
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

            txtInvoiceItemLocalAmount As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =Value(txtInvoiceItemDocAmount.Text) * Value(txtInvDocumentExchangeRate.Text)
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Format: =TextFormat.Number
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =214
                Y: =lblOrderItemAmount_1.Y
                ZIndex: =1

            lblOrderItemAmount_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsInvoice,AppKey="lblInvItemLocalCurrencyAmountHeader" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =110
                ZIndex: =2

            txtInvoiceItemDescription As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =popUpInvoiceItem.DMSInvItemDescription
                DisplayMode: |-
                    =If(popUpInvoiceItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =170
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =txtInvoiceItemLocalAmount.X
                Y: =lblOrderItemDescription_1.Y
                ZIndex: =3

            lblOrderItemDescription_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsInvoice,AppKey="lblOrderItemDescription" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_1.X
                Y: =lblOrderItemAmount_1.Y + 200
                ZIndex: =4

            lblOrderItemProfitCenter_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsInvoice,AppKey="lblOrderItemProfitCenter" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_1.X
                Y: =lblOrderItemAmount_1.Y + 50
                ZIndex: =6

            lblOrderItemBudgetCategory_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsInvoice,AppKey="lblOrderItemBudgetCategory" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_1.X
                Y: =lblOrderItemAmount_1.Y +100
                ZIndex: =8

            lblOrderItemBudgetItem_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsInvoice,AppKey="lblOrderItemBudgetItem" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_1.X
                Y: =lblOrderItemAmount_1.Y + 150
                ZIndex: =10

            lblOrdItemDeliverablesDueForm_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsInvoice,AppKey="InvItemDocumentCurrencyAmount" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =60
                ZIndex: =11

            cbInvoiceItemBudgetCategory As combobox:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =If(popUpInvoiceItemFormMode = FormMode.Edit || popUpInvoiceItemFormMode = FormMode.View,
                        RenameColumns(Filter(DMSBudget,'Budget Category Code'=popUpInvoiceItem.DMSInvItemBudgetCategoryCode).'Budget Category Code',"DMSBudgetCategoryCode","Result")
                    )
                DisplayFields: =["Result"]
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsInvoice,AppKey="findItems" && Language=SelectedLanguage,String)
                IsSearchable: =false
                Items: |-
                    =/*Distinct(
                        Filter(
                            DMSBudget,
                            DMSBudgetLegalEntityCode = First(cbEntitaStrediska.SelectedItems).DMSLegalEntityCode && 
                            DMSBudgetDepartmentCode = First(cbStredisko.SelectedItems).DMSDepartmentCode
                        ) 
                        ,DMSBudgetCategoryCode
                    )*/
                    Distinct(
                        If(IsBlankOrError(cbInvoiceItemProfitCenter.SelectedItems),        
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code'
                            ),
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code' &&
                                'Profit Center Code' = First(cbInvoiceItemProfitCenter.SelectedItems).Result
                            )
                        )
                       ,'Budget Category Code'
                    )
                SearchFields: =["Result"]
                SearchItems: =[]
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =210
                ZIndex: =14

            cbInvoiceItemBudgetItem As combobox:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =If(popUpInvoiceItemFormMode = FormMode.Edit || popUpInvoiceItemFormMode = FormMode.View,
                        RenameColumns(Filter(DMSBudget,'Budget Item Code'=popUpInvoiceItem.DMSInvItemBudgetItemCode).'Budget Item Code',"DMSBudgetItemCode","Result")
                    )
                DisplayFields: =["Result"]
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsInvoice,AppKey="findItems" && Language=SelectedLanguage,String)
                IsSearchable: =false
                Items: |-
                    =/*Distinct(
                        Filter(
                            DMSBudget,
                            DMSBudgetLegalEntityCode = First(cbEntitaStrediska.SelectedItems).DMSLegalEntityCode && 
                            DMSBudgetDepartmentCode = First(cbStredisko.SelectedItems).DMSDepartmentCode
                        ) 
                        ,DMSBudgetItemCode
                    )*/
                    
                    
                    Distinct(
                        If(IsBlankOrError(cbInvoiceItemProfitCenter.SelectedItems),
                            If(IsBlankOrError(cbInvoiceItemBudgetCategory.SelectedItems),
                                Filter(
                                    DMSBudget,
                                    'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                                    'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code'
                                ),
                                Filter(
                                    DMSBudget,
                                    'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                                    'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code' &&
                                    'Budget Category Code' = First(cbInvoiceItemBudgetCategory.SelectedItems).Result
                                )    
                            ),
                            If(IsBlankOrError(cbInvoiceItemBudgetCategory.SelectedItems),
                                Filter(
                                    DMSBudget,
                                    'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                                    'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code' &&
                                    'Profit Center Code' = First(cbInvoiceItemProfitCenter.SelectedItems).Result
                                ),
                                Filter(
                                    DMSBudget,
                                    'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                                    'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code' &&
                                    'Profit Center Code' = First(cbInvoiceItemProfitCenter.SelectedItems).Result &&
                                    'Budget Category Code' = First(cbInvoiceItemBudgetCategory.SelectedItems).Result
                                )    
                            )
                        )
                        ,'Budget Item Code'
                    )
                SearchFields: =["Result"]
                SearchItems: =[]
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =260
                ZIndex: =15

            cbInvoiceItemProfitCenter As combobox:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =If(popUpInvoiceItemFormMode = FormMode.Edit || popUpInvoiceItemFormMode = FormMode.View,
                        RenameColumns(Filter(DMSBudget,'Profit Center Code'=popUpInvoiceItem.DMSInvItemProfitCenterCode).'Profit Center Code',"DMSBudgetProfitCenterCode","Result")
                    )
                DisplayFields: =["Result"]
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsInvoice,AppKey="findItems" && Language=SelectedLanguage,String)
                IsSearchable: =false
                Items: |-
                    =Distinct(
                        Filter(
                            DMSBudget,
                            'Legal Entity Code' = First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code' && 
                            'Department Code' = First(cbInvDepartment.SelectedItems).'Cost Center Code'
                        )
                        ,'Profit Center Code'
                    )
                SearchFields: =["Result"]
                SearchItems: =[]
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =160
                ZIndex: =16

            txtInvoiceItemDocAmount As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =popUpInvoiceItem.DMSInvItemDocumentCurrencyAmount
                DisplayMode: |-
                    =If(popUpInvoiceItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Format: =TextFormat.Number
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =214
                Y: =60
                ZIndex: =17

        popUpItemButtons_1 As groupContainer:
            Fill: =Transparent
            Height: =62
            Visible: =popUpInvoiceItemVisibility
            Width: =573
            X: =404
            Y: =593
            ZIndex: =3

            btnSaveItem2_1 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |
                    =If(popUpInvoiceItemFormMode = FormMode.New,
                        Set(InvoiceItemID,
                            Patch(
                                DMSInvoiceItem,
                                Defaults(DMSInvoiceItem),
                                //{Title: InvoiceSHPItem.ID},
                                {DMSInvItemDescription: txtInvoiceItemDescription.Text},
                                {DMSInvItemDepartmentCode: First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                                {DMSInvItemLegalEntityCode: First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                                {DMSInvItemDocumentCurrencyAmount: Value(txtInvoiceItemDocAmount.Text)},
                                {DMSInvItemLocalCurrencyAmount: Value(txtInvoiceItemLocalAmount.Text)},
                                {DMSInvItemInvoiceID: InvoiceSHPItem.ID},
                                {DMSInvItemOrderNumber: InvoiceSHPItem.'Order ID'},
                                {DMSInvItemBudgetCategoryCode: First(cbInvoiceItemBudgetCategory.SelectedItems).Result},
                                {DMSInvItemBudgetCategoryTitle: LookUp(DMSBudget,'Budget Category Code' = First(cbInvoiceItemBudgetCategory.SelectedItems).Result).'Budget Category Title'},
                                {DMSInvItemBudgetItemCode: First(cbInvoiceItemBudgetItem.SelectedItems).Result},
                                {DMSInvItemBudgetItemTitle: LookUp(DMSBudget,'Budget Category Code' = First(cbInvoiceItemBudgetItem.SelectedItems).Result).'Budget Category Title'},
                                {DMSInvItemProfitCenterCode: First(cbInvoiceItemProfitCenter.SelectedItems).Result},
                                {DMSInvItemProfitCenterTitle: LookUp(DMSBudget,'Budget Category Code' = First(cbInvoiceItemProfitCenter.SelectedItems).Result).'Budget Category Title'}
                            )
                        );,
                        Set(InvoiceItemID,
                            Patch(
                                DMSInvoiceItem,
                                LookUp(DMSInvoiceItem,ID = popUpInvoiceItemInvoiceNumber),
                                //{Title: InvoiceSHPItem.ID},
                                {DMSInvItemDescription: txtInvoiceItemDescription.Text},
                                {DMSInvItemDepartmentCode: First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                                {DMSInvItemLegalEntityCode: First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                                {DMSInvItemDocumentCurrencyAmount: Value(txtInvoiceItemDocAmount.Text)},
                                {DMSInvItemLocalCurrencyAmount: Value(txtInvoiceItemLocalAmount.Text)},
                                {DMSInvItemInvoiceID: InvoiceSHPItem.ID},
                                {DMSInvItemOrderNumber: InvoiceSHPItem.'Order ID'},
                                {DMSInvItemBudgetCategoryCode: First(cbInvoiceItemBudgetCategory.SelectedItems).Result},
                                {DMSInvItemBudgetCategoryTitle: LookUp(DMSBudget,'Budget Category Code' = First(cbInvoiceItemBudgetCategory.SelectedItems).Result).'Budget Category Title'},
                                {DMSInvItemBudgetItemCode: First(cbInvoiceItemBudgetItem.SelectedItems).Result},
                                {DMSInvItemBudgetItemTitle: LookUp(DMSBudget,'Budget Category Code' = First(cbInvoiceItemBudgetItem.SelectedItems).Result).'Budget Category Title'},
                                {DMSInvItemProfitCenterCode: First(cbInvoiceItemProfitCenter.SelectedItems).Result},
                                {DMSInvItemProfitCenterTitle: LookUp(DMSBudget,'Budget Category Code' = First(cbInvoiceItemProfitCenter.SelectedItems).Result).'Budget Category Title'}
                            )
                        );
                    );
                    UpdateContext({popUpInvoiceItemVisibility: false});
                    UpdateContext({popUpInvoiceItemOrderNumber: Blank()});
                    Reset(txtInvoiceItemDocAmount);
                    Reset(txtInvoiceItemLocalAmount);
                    Reset(cbInvoiceItemProfitCenter);
                    Reset(cbInvoiceItemBudgetCategory);
                    Reset(cbInvoiceItemBudgetItem);
                    Reset(txtInvoiceItemDescription);
                    Refresh(DMSInvoiceItem);
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsInvoice,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
                Visible: =!(popUpInvoiceItemFormMode = FormMode.View)
                X: =112
                Y: =8
                ZIndex: =3

            btnClose2_1 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpInvoiceItemVisibility: false});
                    UpdateContext({popUpInvoiceItemOrderNumber: Blank()});
                    Reset(txtInvoiceItemDocAmount);
                    Reset(txtInvoiceItemLocalAmount);
                    Reset(cbInvoiceItemProfitCenter);
                    Reset(cbInvoiceItemBudgetCategory);
                    Reset(cbInvoiceItemBudgetItem);
                    Reset(txtInvoiceItemDescription);
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsInvoice,AppKey="btnClose" && Language=SelectedLanguage,String)
                X: =290
                Y: =8
                ZIndex: =4

        popUpItemHeader_1 As groupContainer:
            Fill: =White
            Height: =49
            Visible: =popUpInvoiceItemVisibility
            Width: =573
            X: =404
            Y: =28
            ZIndex: =4

            popUpHeader_3 As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Width: =573
                ZIndex: =1

            popUpLabelOrderItem_3 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsInvoice,AppKey="lblNewOrderItem" && Language=SelectedLanguage,String)
                Width: =573
                Y: =1
                ZIndex: =2

    popUpNewAttachment_1 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpNewAttachmentVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =4

        popUpAttachmentBody_1 As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =492
            Width: =573
            X: =404
            Y: =89
            ZIndex: =1

            frmOrderAttachments_1 As form:
                AcceptsFocus: =false
                DataSource: =DMSInvoice
                Height: =381
                Item: =LookUp(DMSInvoice, ID = InvoiceSHPItem.ID)
                NumberOfColumns: =1
                Width: =573
                Y: =48
                ZIndex: =12

                dcAttachments_1 As typedDataCard.attachmentsEditCard:
                    BorderColor: =patternColor1.Fill
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="{Attachments}"
                    Default: =ThisItem.Attachments
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: ="Attachments"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =50
                    Required: =false
                    Update: =DataCardValue46_1.Attachments
                    Width: =573
                    X: =0
                    Y: =0
                    ZIndex: =13

                    DataCardKey46_1 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Height: =34
                        Text: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                        ZIndex: =1

                    DataCardValue46_1 As attachments:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        DisplayMode: =Parent.DisplayMode
                        IsInDataCard: =true
                        ItemFill: =patternColor1.Fill
                        ItemPressedFill: =patternColor4.Fill
                        Items: =Parent.Default
                        NoAttachmentsText: ="There is no attachment."
                        PaddingBottom: =5
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedFill: =patternColor4.Fill
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey46_1.Y + DataCardKey46_1.Height + 5
                        ZIndex: =2

                    ErrorMessage46_1 As label:
                        AutoHeight: =true
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardValue46_1.Y + DataCardValue46_1.Height
                        ZIndex: =3

                    StarVisible46_1 As label:
                        Align: =Align.Center
                        Color: =RGBA(0, 0, 0, 1)
                        Height: =DataCardKey46_1.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey46_1.Y
                        ZIndex: =4

        popUpAttachmentButtons_1 As groupContainer:
            Fill: =Transparent
            Height: =62
            Width: =573
            X: =404
            Y: =519
            ZIndex: =3

            btnSaveItem_1 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |
                    =If(SubmitForm(frmOrderAttachments_1),
                        Select(btnOrdSave_1);
                        UpdateContext({popUpNewAttachmentVisibility: false});
                        //DMS_WriteLog.Run(Now(),2,InvoiceSHPItem.DMSInvProcessActualPhase,"",User().Email,InvoiceSHPItem.ID);
                        //Refresh(DMSInvoiceProcessLog);
                        ResetForm(frmOrderAttachments_1);
                    )
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsInvoice,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
                X: =112
                Y: =8
                ZIndex: =3

            btnClose_3 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpNewAttachmentVisibility: false});
                    ResetForm(frmOrderAttachments_1);
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsInvoice,AppKey="btnClose" && Language=SelectedLanguage,String)
                X: =290
                Y: =8
                ZIndex: =4

        popUpAttachmentHeader_1 As groupContainer:
            Fill: =White
            Height: =49
            Width: =573
            X: =404
            Y: =89
            ZIndex: =4

            popUpHeader_5 As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Width: =573
                ZIndex: =1

            popUpLabelOrderItem_5 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsInvoice,AppKey="lblNewOrderItem" && Language=SelectedLanguage,String)
                Width: =573
                Y: =1
                ZIndex: =2

    popUpDelegateTo_1 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpDelegateToVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =5

        popUpFooter_3 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_6 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelOrderItem_6 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="btnOrdDelegate" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnDelegate_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsBlank(txtDelagateToDescription_1.Text),
                   UpdateContext({txtDelagateToDescription_validation: false}),
                   UpdateContext({txtDelagateToDescription_validation: true})
                );
                If(IsEmpty(cbDelegateTo_1.SelectedItems) || IsBlank(cbDelegateTo_1.SelectedItems),
                   UpdateContext({cbDelegateTo_validation: false}),
                   UpdateContext({cbDelegateTo_validation: true})
                );
                
                
                If(
                    txtDelagateToDescription_validation && cbDelegateTo_validation,
                    
                    If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                        Set(cbInvBudgetOwnerValue,BlankPeople),
                        Set(cbInvBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                            Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."}
                            )
                        )
                    );
                
                    If(IsBlank(cbDelegateTo_1.SelectedItems) || IsEmpty(cbDelegateTo_1.SelectedItems),
                		Set(cbDelegateToValue,BlankPeople),
                		Set(cbDelegateToValue,
                			Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                			Claims:"i:0#.f|membership|" & Lower(First(cbDelegateTo_1.SelectedItems).Mail),
                			Department:"",
                			DisplayName:First(cbDelegateTo_1.SelectedItems).DisplayName,
                			Email:First(cbDelegateTo_1.SelectedItems).Mail,
                			JobTitle:".",
                			Picture:"."})
                		)
                	);
                
                    If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                        Set(cbOrderRequestorValue,BlankPeople),
                        Set(cbOrderRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                                Department:"",
                                DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                                Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                                JobTitle:".",
                                Picture:"."}
                                )
                        )
                    );
                
                    Set(NewInvoiceSHPItem,
                        Patch(
                            DMSInvoice,
                            If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                            //{DMSInvBudgetExchangeRate:}, Co je tohle za hodnotu?
                            {'Budget Owner':cbInvBudgetOwnerValue},
                            {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                            {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                            {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                            {DMSInvDateReceived:dpDateReceived.Value},
                            {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                            {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                            {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                            {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                            {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Due Date':dpInvDueDate.Value},
                            {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                            {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                            {Description:txtOrderlblInvDescriptionDetailed.Text},
                            {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                            {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                            //{DMSInvOrderRevise:}, Co to je?
                            //{DMSInvPostingDate:}, Co to je?
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                            {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                            {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                            //{DMSInvProcessEyesCount:}, OÄi ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextOwner:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextOwnerEMail:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextOwnerName:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextPhase:}, ÅeÅ¡Ã­ flow?
                            {DMSInvProcessNote:txtOrderOrdLogEventDescription_1.Text},
                            //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow?
                            {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                            {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                            {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                            {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                            {DMSInvOrderRequestor:cbOrderRequestorValue},
                            {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                            {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                            {DMSInvVendorVS:txtInvVendorVS.Text}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,
                        Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                        Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                    );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription_1);
                    Refresh(DMSInvoiceProcessLog);
                
                    // DELEGATE
                    Patch(
                        DMSInvoice,
                        LookUp(DMSInvoice,ID = InvoiceSHPItemID),
                        {DMSInvActionDate:Now()},
                        {DMSInvActionDelegateTo:cbDelegateToValue},
                        {DMSInvActionDelegateToEMail:First(cbDelegateTo_1.SelectedItems).Mail},
                        {DMSInvActionDescription:txtDelagateToDescription_1.Text},
                        {'Action Required':"START DELEGATE"},
                        {DMSInvActionRequiredBy:Table(SHPMeClaim)},
                        {DMSInvActionRequiredByEMail:SHPMeClaim.Email}
                    );
                
                    UpdateContext({popUpDelegateToVisibility: false});
                    Reset(txtDelagateToDescription_1);
                    Reset(cbDelegateTo_1);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationDelegated" && Language=SelectedLanguage,String) & " " & First(cbDelegateToValue).DisplayName,NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnDelegate" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_5 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpDelegateToVisibility: false});
                Reset(txtDelagateToDescription_1);
                Reset(cbDelegateTo_1);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblDelegateTo_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDelegateTo" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =105
            ZIndex: =6

        lblDelagateToDescription_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =158
            ZIndex: =10

        txtDelagateToDescription_1 As text:
            BorderColor: =If(txtDelagateToDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =158
            ZIndex: =11

        cbDelegateTo_1 As combobox:
            BorderColor: =If(cbDelegateTo_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            ChevronBackground: =
            ChevronFill: =patternColor1.Fill
            ChevronHoverBackground: =patternColor4.Fill
            DefaultSelectedItems: =
            DisplayFields: =["DisplayName","Mail"]
            DisplayMode: |-
                =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                    DisplayMode.Edit,
                    DisplayMode.View
                )
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
            Items: |-
                =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
            PressedColor: =White
            SearchFields: =["DisplayName"]
            SearchItems: |-
                =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbDelegateTo_1.SearchText,"DisplayName")
            SelectionColor: =White
            SelectionFill: =patternColor4.Fill
            SelectMultiple: =false
            Tooltip: =
            X: =615
            Y: =105
            ZIndex: =12

    popUpComment_1 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpCommentVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =6

        popUpFooter_6 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_10 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelOrderItem_10 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="btnOrdComment" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnComment_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsBlank(txtCommnentDescription_1.Text),
                   UpdateContext({txtDelagateToDescription_validation: false}),
                   UpdateContext({txtDelagateToDescription_validation: true})
                );
                If(IsEmpty(cbCommenter_1.SelectedItems) || IsBlank(cbCommenter_1.SelectedItems),
                   UpdateContext({cbDelegateTo_validation: false}),
                   UpdateContext({cbDelegateTo_validation: true})
                );
                
                If(
                    txtDelagateToDescription_validation && cbDelegateTo_validation,
                
                	If(IsBlank(cbCommenter_1.SelectedItems) || IsEmpty(cbCommenter_1.SelectedItems),
                		Set(cbCommenterValue,BlankPeople),
                		Set(cbCommenterValue,
                			Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                			Claims:"i:0#.f|membership|" & Lower(First(cbCommenter_1.SelectedItems).Mail),
                			Department:"",
                			DisplayName:First(cbCommenter_1.SelectedItems).DisplayName,
                			Email:First(cbCommenter_1.SelectedItems).Mail,
                			JobTitle:".",
                			Picture:"."})
                		)
                	);
                
                    If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                        Set(cbInvBudgetOwnerValue,BlankPeople),
                        Set(cbInvBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                                Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."}
                            )
                        )
                    );
                
                    If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                        Set(cbOrderRequestorValue,BlankPeople),
                        Set(cbOrderRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                                Department:"",
                                DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                                Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                                JobTitle:".",
                                Picture:"."}
                                )
                        )
                    );
                
                    Set(NewInvoiceSHPItem,
                        Patch(
                            DMSInvoice,
                            If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                            //{DMSInvBudgetExchangeRate:Value(txtInvDocumentExchangeRate.Text)}, //v nastavenÃ­ legal entity
                            {'Budget Owner':cbInvBudgetOwnerValue},
                            {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                            {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                            {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                            {DMSInvDateReceived:dpDateReceived.Value},
                            {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                            {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                            {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                            {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                            {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Due Date':dpInvDueDate.Value},
                            {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                            {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                            {Description:txtOrderlblInvDescriptionDetailed.Text},
                            {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                            {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                            //{DMSInvOrderRevise:}, ÅeÅ¡Ã­ flow
                            {'Issue date':dbPostingDate.Value},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                            {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                            {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                            //{DMSInvProcessEyesCount:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessNextOwner:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerEMail:}, nepouÅ¾ito
                            //{DMSInvProcessNextOwnerName:}, nepouÅ¾ito
                            //{DMSInvProcessNextPhase:}, nepouÅ¾ito
                            {DMSInvProcessNote:txtOrderOrdLogEventDescription_1.Text},
                            //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow
                            //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow
                            {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                            {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                            {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                            {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                            {DMSInvOrderRequestor:cbOrderRequestorValue},
                            {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                            {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                            {DMSInvVendorVS:txtInvVendorVS.Text}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,
                        Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                        Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                    );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription_1);
                    Refresh(DMSInvoiceProcessLog);
                
                	// COMMENT
                	Patch(
                		DMSInvoice,
                		LookUp(DMSInvoice,ID = InvoiceSHPItemID),
                		{DMSInvActionDate:Now()},
                		{DMSInvActionDelegateTo:cbCommenterValue},
                		{DMSInvActionDelegateToEMail:First(cbCommenter_1.SelectedItems).Mail},
                		{DMSInvActionDescription:txtCommnentDescription_1.Text},
                		{'Action Required':"START COMMENT"},
                		{DMSInvActionRequiredBy:Table(SHPMeClaim)},
                		{DMSInvActionRequiredByEMail:SHPMeClaim.Email}
                	);
                
                	UpdateContext({popUpCommentVisibility: false});
                	Reset(txtCommnentDescription_1);
                	Reset(cbCommenter_1);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationCommentedTo" && Language=SelectedLanguage,String) & " " & First(cbCommenterValue).DisplayName,NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnComment" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_8 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpCommentVisibility: false});
                UpdateContext({txtDelagateToDescription_validation: true});
                UpdateContext({cbDelegateTo_validation: true});
                
                Reset(txtCommnentDescription_1);
                Reset(cbCommenter_1);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblCommenter_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblCommenter" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =105
            ZIndex: =6

        lblDelagateToDescription_4 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =158
            ZIndex: =10

        txtCommnentDescription_1 As text:
            BorderColor: =If(txtDelagateToDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =158
            ZIndex: =11

        cbCommenter_1 As combobox:
            BorderColor: =If(cbDelegateTo_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            ChevronBackground: =
            ChevronFill: =patternColor1.Fill
            ChevronHoverBackground: =patternColor4.Fill
            DefaultSelectedItems: =
            DisplayFields: =["DisplayName","Mail"]
            DisplayMode: |-
                =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                    DisplayMode.Edit,
                    DisplayMode.View
                )
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
            Items: |-
                =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
            PressedColor: =White
            SearchFields: =["DisplayName"]
            SearchItems: |-
                =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbCommenter_1.SearchText,"DisplayName")
            SelectionColor: =White
            SelectionFill: =patternColor4.Fill
            SelectMultiple: =false
            Tooltip: =
            X: =615
            Y: =105
            ZIndex: =12

    popUpLogItemDetail_1 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpLogItemDetailVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =7

        popUpItemBody_4 As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =502
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

            txtLogDetailPhase_1 As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =LookUp(StatesInvoice,AppKey = Value(glrProcessHistoryItems_3.Selected.DMSInvLogItemPhase) && Language = SelectedLanguage,String) & " (" & glrProcessHistoryItems_3.Selected.DMSInvLogItemPhase & ")"
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =393
                X: =164
                Y: =lblLogDetailPhase_1.Y
                ZIndex: =1

            lblLogDetailPhase_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailPhase" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =110
                ZIndex: =2

            txtLogDetailDescription_1 As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =glrProcessHistoryItems_3.Selected.DMSInvLogEventDescription
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =145
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =393
                X: =txtLogDetailPhase_1.X
                Y: =283
                ZIndex: =3

            lblLogDetailUser_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailUser" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblLogDetailPhase_1.X
                Y: =lblLogDetailPhase_1.Y + 50
                ZIndex: =5

            lblLogDetailTitle_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailTitle" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblLogDetailPhase_1.X
                Y: =lblLogDetailPhase_1.Y +100
                ZIndex: =6

            lblLogDetailDescription_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailDescription" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblLogDetailPhase_1.X
                Y: =283
                ZIndex: =7

            lblLogDetailLogDate_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailLogDate" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =60
                ZIndex: =8

            txtLogDetailLogDate_1 As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: |-
                    =Text(glrProcessHistoryItems_3.Selected.DMSInvLogDate,"[$-en-US]dd.mm.yyyy hh:mm:ss")
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =393
                X: =164
                Y: =60
                ZIndex: =18

            txtLogDetailUser_1 As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =glrProcessHistoryItems_3.Selected.DMSInvLogUserName
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =393
                X: =164
                Y: =160
                ZIndex: =19

            txtLogDetailTitle_1 As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =glrProcessHistoryItems_3.Selected.DMSInvLogEventTitle
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =59
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =393
                X: =164
                Y: =210
                ZIndex: =20

        popUpItemButtons_5 As groupContainer:
            Fill: =Transparent
            Height: =62
            Width: =573
            X: =404
            Y: =468
            ZIndex: =3

            btnClose2_4 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpLogItemDetailVisibility: false});
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
                X: =210
                Y: =10
                ZIndex: =4

        popUpItemHeader_4 As groupContainer:
            Fill: =White
            Height: =49
            Width: =573
            X: =404
            Y: =28
            ZIndex: =4

            popUpHeader_15 As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Width: =573
                ZIndex: =1

            lblPopUpLogDetailHeader_1 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsProcess,AppKey="LogDetailHeader" && Language=SelectedLanguage,String)
                Width: =573
                ZIndex: =2

    popUpReopen_1 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpReopenVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =8

        popUpFooter_10 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_18 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelReopen_1 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="popUpLabelReopen" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnReopen_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =/*If(IsBlank(txtReopenDescription_1.Text),
                   UpdateContext({txtReturnToDescription_validation: false}),
                   UpdateContext({txtReturnToDescription_validation: true})
                );*/
                
                If(IsEmpty(cbReturnTo_1.SelectedItems) || IsBlank(cbReturnTo_1.SelectedItems),
                   UpdateContext({cbReturnTo_validation: false}),
                   UpdateContext({cbReturnTo_validation: true})
                );
                
                If(
                    txtReturnToDescription_validation && cbReturnTo_validation,
                    
                    If(IsBlank(cbInvBudgetOwner.SelectedItems) || IsEmpty(cbInvBudgetOwner.SelectedItems),
                        Set(cbInvBudgetOwnerValue,BlankPeople),
                        Set(cbInvBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbInvBudgetOwner.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbInvBudgetOwner.SelectedItems).DisplayName,
                            Email:First(cbInvBudgetOwner.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."}
                            )
                        )
                    );
                
                    If(IsBlank(cbReturnTo_1.SelectedItems) || IsEmpty(cbReturnTo_1.SelectedItems),
                		Set(cbReturnToValue,BlankPeople),
                		Set(cbReturnToValue,
                			Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                			Claims:"i:0#.f|membership|" & Lower(First(cbReturnTo_1.SelectedItems).Mail),
                			Department:"",
                			DisplayName:First(cbReturnTo_1.SelectedItems).DisplayName,
                			Email:First(cbReturnTo_1.SelectedItems).Mail,
                			JobTitle:".",
                			Picture:"."})
                		)
                	);
                
                    If(IsBlank(cbOrderNumber.SelectedItems) || IsEmpty(cbOrderNumber.SelectedItems),
                    Set(cbOrderRequestorValue,BlankPeople),
                    Set(cbOrderRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(First(cbOrderNumber.SelectedItems).Requestor).Email),
                            Department:"",
                            DisplayName:First(First(cbOrderNumber.SelectedItems).Requestor).DisplayName,
                            Email:First(First(cbOrderNumber.SelectedItems).Requestor).Email,
                            JobTitle:".",
                            Picture:"."}
                            )
                        )
                    );
                
                    Set(NewInvoiceSHPItem,
                        Patch(
                            DMSInvoice,
                            If(customFormMode = FormMode.New,Defaults(DMSInvoice),LookUp(DMSInvoice,ID = InvoiceSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"INV" &  Text(First(Sort(DMSInvoice,ID,Descending)).ID + 1,"[$-en-US]000000"),InvoiceSHPItem.Title)},
                            //{DMSInvBudgetExchangeRate:}, Co je tohle za hodnotu?
                            {'Budget Owner':cbInvBudgetOwnerValue},
                            {DMSInvBudgetOwnerEMail:First(cbInvBudgetOwnerValue).Email},
                            {DMSInvBudgetOwnerName:First(cbInvBudgetOwnerValue).DisplayName},
                            {DMSInvCurrencyCode:First(cbInvCurrency.SelectedItems).Currency},
                            {DMSInvDateReceived:dpDateReceived.Value},
                            {DMSInvDepartmentCode:First(cbInvDepartment.SelectedItems).'Cost Center Code'},
                            {'Cost Center Code':First(cbInvDepartment.SelectedItems).Title},
                            {DMSInvDocTypeCode:First(cbInvDocType.SelectedItems).'Document Type Code'},
                            {DMSInvDocTypeName:First(cbInvDocType.SelectedItems).'Document Type'},
                            {'Document Currency Amount':Value(lblInvItemsDocTotal.Text)},
                            {'Document Exchange Rate':Value(txtInvDocumentExchangeRate.Text)},
                            {'Due Date':dpInvDueDate.Value},
                            {DMSInvLastInvoice:cbInvoiceLastInvoice.Value},
                            {DMSInvLegalEntityCode:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSInvLegalEntityName:First(cblblInvLegalEntity.SelectedItems).'Legal Entity Name'},
                            {'Local Currency Amount':Value(lblInvItemsLocalTotal.Text)},
                            {Description:txtOrderlblInvDescriptionDetailed.Text},
                            {'Order ID':First(cbOrderNumber.SelectedItems).ID},
                            {'Order Number':First(cbOrderNumber.SelectedItems).'Order Number'},
                            //{DMSInvOrderRevise:}, Co to je?
                            //{DMSInvPostingDate:}, Co to je?
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),InvoiceSHPItem.'Actual Owner')},
                            {DMSInvProcessActualOwnerEmail:If(customFormMode = FormMode.New,SHPMeClaim.Email,InvoiceSHPItem.DMSInvProcessActualOwnerEmail)},
                            {DMSInvProcessActualOwnerName:If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,InvoiceSHPItem.DMSInvProcessActualOwnerName)},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",InvoiceSHPItem.'Actual Phase')},
                            //{DMSInvProcessEyesCount:}, OÄi ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextOwner:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextOwnerEMail:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextOwnerName:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessNextPhase:}, ÅeÅ¡Ã­ flow?
                            {DMSInvProcessNote:txtReopenDescription_1.Text},
                            //{DMSInvProcessPreviousOwner:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessPreviousOwnerEMail:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessPreviousOwnerName:}, ÅeÅ¡Ã­ flow?
                            //{DMSInvProcessPreviousPhase:}, ÅeÅ¡Ã­ flow?
                            {DMSInvVendorCode:First(cbOrdVendor_1.SelectedItems).'ERP Code'},
                            {'Invoice number':txtlblInvVendorDocumentNumber.Text},
                            {DMSInvVendorID:First(cbOrdVendor_1.SelectedItems).'Registration ID'},
                            {Vendor:First(cbOrdVendor_1.SelectedItems).'Name (DMSVendorName)'},
                            {DMSInvOrderRequestor:cbOrderRequestorValue},
                            {DMSInvOrderRequestorEMail:First(cbOrderRequestorValue).Email},
                            {DMSInvOrderRequestorName:First(cbOrderRequestorValue).DisplayName},
                            {DMSInvVendorVS:txtInvVendorVS.Text}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,
                        Set(InvoiceSHPItem,LookUp(DMSInvoice,ID = NewInvoiceSHPItem.ID));
                        Set(InvoiceSHPItemID,NewInvoiceSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                    );
                
                    Reset(txtOrderOrdLogEventDescription_1);
                    Refresh(DMSInvoiceProcessLog);
                
                    // RETURNTO
                    Patch(
                        DMSInvoice,
                        LookUp(DMSInvoice,ID = InvoiceSHPItemID),
                        {DMSInvActionDate:Now()},
                        {DMSInvActionDelegateTo:cbReturnToValue},
                        {DMSInvActionDelegateToEMail:First(cbReturnTo_1.SelectedItems).Mail},
                        {DMSInvActionDescription:txtReopenDescription_1.Text},
                        {'Action Required':"START REOPEN"},
                        {DMSInvActionRequiredBy:Table(SHPMeClaim)},
                        {DMSInvActionRequiredByEMail:SHPMeClaim.Email}
                    );
                
                    UpdateContext({popUpReopenVisibility: false});
                    Reset(txtDelagateToDescription_1);
                    Reset(cbDelegateTo_1);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationReopened" && Language=SelectedLanguage,String),NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnReopen" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_11 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpReopenVisibility: false});
                UpdateContext({cbReturnTo_validation: true});
                UpdateContext({txtReturnToDescription_validation: true});
                
                Reset(txtReopenDescription_1);
                Reset(cbReturnTo_1);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblReturnTo_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblReturnTo" && Language=SelectedLanguage,String)
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =105
            ZIndex: =6

        lblReopenDescription_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblPoznamka" && Language=SelectedLanguage,String)
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =158
            ZIndex: =10

        txtReopenDescription_1 As text:
            BorderColor: =If(txtReturnToDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =158
            ZIndex: =11

        cbReturnTo_1 As combobox:
            BorderColor: =If(cbReturnTo_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            ChevronBackground: =
            ChevronFill: =patternColor1.Fill
            ChevronHoverBackground: =patternColor4.Fill
            DefaultSelectedItems: |-
                =Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = InvoiceSHPItem.DMSInvOrderRequestorEMail)
            DisplayFields: =["DisplayName","Mail"]
            DisplayMode: |-
                =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                    DisplayMode.Edit,
                    DisplayMode.View
                )
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
            Items: |-
                =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
            PressedColor: =White
            SearchFields: =["DisplayName"]
            SearchItems: |-
                =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbReturnTo_1.SearchText,"DisplayName")
            SelectionColor: =White
            SelectionFill: =patternColor4.Fill
            SelectMultiple: =false
            Tooltip: =
            X: =615
            Y: =105
            ZIndex: =12

    headerInvoices As groupContainer:
        Fill: =Transparent
        Height: =73
        Width: =Parent.Width
        X: =0*0
        ZIndex: =9

        lblInvTitle As label:
            Align: =Align.Center
            BorderColor: =RGBA(166, 166, 166, 1)
            Color: =patternColor1.Fill
            Height: =73
            Text: =LookUp(StringsInvoice,AppKey="scrInvoice" && Language=SelectedLanguage,String)
            Width: =1366
            ZIndex: =2

        InvHeurekaLogo As image:
            Height: =72
            Image: =heureka_group_logo
            Width: =240
            X: =30
            ZIndex: =3

        InvHeaderBorder As rectangle:
            BorderColor: =patternColor3.Fill
            BorderThickness: =0.5
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1
            Width: =Parent.Width
            Y: =72
            ZIndex: =4

        tmpBack_1 As icon.ChevronLeft:
            Color: =patternColor1.Fill
            Height: =40
            Icon: =Icon.ChevronLeft
            OnSelect: =Navigate(scrInvoicesTestMenu)
            Visible: =DebugMode
            Width: =40
            X: =1245
            Y: =17
            ZIndex: =5

        btnBackToMobile_1 As arrow.backArrow:
            Fill: =patternColor1.Fill
            Height: =35
            OnSelect: =Launch(txtWebAppURL)
            Visible: |-
                =!IsBlank(Acceleration.X)
                //true
            Width: =35
            X: =1245
            Y: =18
            ZIndex: =6

    scrDebugMode_2 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.8)
        Height: =768
        Visible: =dbgWindow
        Width: =678
        X: =688
        ZIndex: =10

        Label5_4 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(0, 0, 0, 0.6)
            FontWeight: =FontWeight.Semibold
            Height: =71
            Text: ="DEBUG MODE"
            Width: =678
            ZIndex: =1

        Label6_34 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="User email:"
            X: =16
            Y: =117
            ZIndex: =2

        Label6_35 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =User().Email
            Width: =439
            X: =222
            Y: =117
            ZIndex: =3

        Label6_40 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="ParamScreen:"
            X: =16
            Y: =233
            ZIndex: =4

        Label6_41 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =ParamScreen
            Width: =439
            X: =221
            Y: =233
            ZIndex: =5

        Label6_42 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="ParamFormMode:"
            Width: =162
            X: =16
            Y: =273
            ZIndex: =6

        Label6_43 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =ParamFormMode
            Width: =439
            X: =222
            Y: =273
            ZIndex: =7

        Label6_44 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="OrderSHPItemID:"
            Width: =176
            X: =16
            Y: =313
            ZIndex: =8

        Label6_45 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =InvoiceSHPItemID
            Width: =439
            X: =222
            Y: =313
            ZIndex: =9

        Label6_46 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="customFormMode:"
            Width: =176
            X: =16
            Y: =353
            ZIndex: =10

        Label6_47 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =customFormMode
            Width: =439
            X: =222
            Y: =353
            ZIndex: =11

        Label6_32 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="User name:"
            X: =16
            Y: =77
            ZIndex: =12

        Label6_33 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =User().FullName
            Width: =439
            X: =222
            Y: =77
            ZIndex: =13

        Label5_5 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(0, 0, 0, 0.6)
            FontWeight: =FontWeight.Semibold
            Height: =71
            Text: |-
                ="version: " & appVersion
            Width: =678
            Y: =697
            ZIndex: =14

        Label6_36 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="User claim:"
            X: =16
            Y: =152
            ZIndex: =15

        Label6_37 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =SHPMeClaim.Email
            Width: =439
            X: =222
            Y: =152
            ZIndex: =16

        Label6_38 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="Item owner:"
            X: =16
            Y: =192
            ZIndex: =17

        Label6_39 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =OrderSHPItem.'Actual Owner E-mail'
            Width: =439
            X: =222
            Y: =192
            ZIndex: =18

    icoDebugMode_2 As icon.Information:
        Color: =If(dbgWindow,RGBA(255, 255, 255, 1),patternColor1.Fill)
        Height: =33
        Icon: =Icon.Information
        OnSelect: =Set(dbgWindow, !dbgWindow);
        Width: =37
        X: =1303
        Y: =20
        ZIndex: =11

