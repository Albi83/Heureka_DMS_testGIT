"scrOrders As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    OnVisible: |-
        =//Set(orderItemNumber,"12345");
        /*If(!IsBlank(OrderSHPItemID),
            Set(customFormMode,FormMode.Edit),
            Set(customFormMode,FormMode.New)
        );*/
        If(customFormMode = FormMode.Edit || customFormMode = FormMode.View,
            Set(OrderSHPItem,LookUp(DMSOrder,ID = OrderSHPItemID)),
            If(generateOrderFromContract = false,
                Set(OrderSHPItem,Blank())
            )
        );
        
        Set(generateOrderFromContract,false);
        
        If(customFormMode = FormMode.Edit && (!(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail') || !IsBlank(OrderSHPItem.'Order Action Required')),
            Set(customFormMode,FormMode.View)
        );
        
        UpdateContext({DMS_SystemAction_35_CanvasApp_Response: Blank()});
        
        UpdateContext({popUpOrderItemVisibility: false});
        UpdateContext({popUpOrderItemRepeatedVisibility: false});
        UpdateContext({popUpNewVendorVisibility: false});
        UpdateContext({popUpDelegateToVisibility: false});
        UpdateContext({popUpCommentVisibility: false});
        UpdateContext({popUpLimitValidationVisibility: false});
        UpdateContext({popUpLogItemDetailVisibility: false});
        UpdateContext({popUpReopenVisibility: false});
        UpdateContext({popUpCloseOrderVisibility: false});
        UpdateContext({popUpBudgetValidationVisibility: false});
        UpdateContext({popUpBudgetValidationV2Visibility: false});
        UpdateContext({popUpBudgetValidationVisibility_StartApprove: false});
        UpdateContext({popUpBudgetValidationV2Visibility_StartApprove: false});
        
        //form validation
           UpdateContext({txtOrderNumber_validation: true});
           UpdateContext({cbOrdLegalEntity_validation: true});
           UpdateContext({cbOrdContractNumber_validation: true});
           UpdateContext({dpOrderDate_validation: true});
           UpdateContext({txtOrderDescription_validation: true});
           UpdateContext({cbOrdVendor_validation: true});
           UpdateContext({cbOrdRequestor_validation: true});
           UpdateContext({cbOrdDepartment_validation: true});
           UpdateContext({txtOrdBudgetOwner_validation: true});
           UpdateContext({cbOrderOrderer_validation: true});
           UpdateContext({txtOrderRecipient_validation: true});
           UpdateContext({txtlblOrderDescriptionDetailed_validation: true});
           UpdateContext({cbWatchers_validation: true});
           UpdateContext({txtOrderOrdLogEventDescription_validation: true});
           UpdateContext({OrderItems_validation: true});
           UpdateContext({txtDelagateToDescription_validation: true});
           UpdateContext({cbDelegateTo_validation: true});
        UpdateContext({txtNewVendorName_validation: true});
        UpdateContext({txtNewVendorIC_validation: true});
        UpdateContext({txtNewVendorDescription_validation: true});
        UpdateContext({cbReturnTo_validation: true});
        UpdateContext({txtReturnToDescription_validation: true});
        UpdateContext({txtCloseOrderDescription_validation: true});
        UpdateContext({popUpBudgetValidationIsRunning: false});

    CanvasOrderDetails As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height - buttonsOrders.Height - headerOrders.Height - 15
        Width: =Parent.Width
        Y: =buttonsOrders.Y + buttonsOrders.Height + 15
        ZIndex: =1

        dcOrderDetails As dataCard.blankCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1926
            Width: =1366
            X: =0
            Y: =0
            ZIndex: =1

            rightColumn As groupContainer:
                Fill: =Transparent
                Height: =759
                Width: =633
                X: =733
                ZIndex: =1

                lbInBudget As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblInBudget" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =171
                    Y: =701
                    ZIndex: =1

                cbInBudget As checkbox:
                    CheckboxBackgroundFill: =White
                    CheckboxBorderColor: =patternColor1.Fill
                    CheckmarkFill: =patternColor1.Fill
                    Default: =OrderSHPItem.'In Budget'
                    DisplayMode: |-
                        =/*If((customFormMode = FormMode.Edit && OrderSHPItem.DMSOrdProcessActualPhase = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )*/
                        DisplayMode.Disabled
                    FocusedBorderThickness: =0
                    Height: =40
                    OnSelect: =
                    Text: =""
                    Width: =40
                    X: =217
                    Y: =701
                    ZIndex: =2

                btnCheck As button:
                    BorderColor: =patternColor3.DisabledFill
                    BorderThickness: =0.5
                    Color: =RGBA(0, 0, 0, 1)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =0.5
                    HoverBorderColor: =patternColor4.Fill
                    HoverColor: =
                    HoverFill: =
                    OnSelect: |-
                        =/*
                        //Validation v1
                        UpdateContext({popUpBudgetValidationVisibility: true});
                        
                        //UpdateContext({DMS_SystemAction_35_CanvasApp_Response: DMS_SystemAction_35_CanvasApp.Run(txtApprovalCenterWeb.Text,txtListOrderName.Text,OrderSHPItem.ID)});
                        UpdateContext({popUpBudgetValidationIsRunning: true});
                        Patch(
                            DMSOrder,
                            LookUp(DMSOrder,ID = OrderSHPItemID),
                            {DMSOrderBudgetCheckTmp: false}
                        );
                        DMS_SystemAction_35_CanvasApp.Run(txtApprovalCenterWeb.Text,txtListOrderName.Text,OrderSHPItem.ID);
                        
                        Refresh(DMSOrderItem);
                        Set(OrderSHPItem,LookUp(DMSOrder,ID = OrderSHPItemID));
                        */
                        
                        //Validation v2
                        Refresh(DMSBudgetOrderEval);
                        Refresh(DMSOrderItem);
                        UpdateContext({popUpBudgetValidationV2Visibility: true});
                    PressedBorderColor: =patternColor4.Fill
                    PressedColor: =
                    PressedFill: =ColorFade(patternColor3.Fill, 90%)
                    Text: =LookUp(StringsOrder,AppKey="btnCheck" && Language=SelectedLanguage,String)
                    Visible: |-
                        =customFormMode = FormMode.Edit
                        //false
                    Width: =289
                    X: =302
                    Y: =701
                    ZIndex: =3

                ApprovalDetails As groupContainer:
                    Fill: =patternColor5.Fill
                    Height: =633
                    Width: =606
                    Y: =54
                    ZIndex: =4

                    txtDatumStavu As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: =OrderSHPItem.Modified
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: =DisplayMode.Disabled
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =382
                        X: =211
                        Y: =txtVlastnik.Y + 100
                        ZIndex: =4

                    lblPhaseDate As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblPhaseDate" && Language=SelectedLanguage,String)
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =lblOwner.X
                        Y: =lblOwner.Y + 100
                        ZIndex: =5

                    txtStav As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: =LookUp(StatesOrder,AppKey = Value(OrderSHPItem.'Actual Phase') && Language = SelectedLanguage,String)
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: =DisplayMode.Disabled
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =382
                        X: =211
                        Y: =txtVlastnik.Y + 50
                        ZIndex: =6

                    lblPhase As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblPhase" && Language=SelectedLanguage,String)
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =lblOwner.X
                        Y: =lblOwner.Y + 50
                        ZIndex: =7

                    txtVlastnik As text:
                        BorderColor: =patternColor3.Fill
                        BorderThickness: =1
                        Default: |-
                            =//First(OrderSHPItem.DMSOrdProcessActualOwner).DisplayName
                            OrderSHPItem.'Actual Owner Name'
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: =DisplayMode.Disabled
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Width: =382
                        X: =211
                        Y: =lblOwner.Y
                        ZIndex: =8

                    lblOwner As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblOwner" && Language=SelectedLanguage,String)
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =10
                        Y: =10
                        ZIndex: =9

                    txtOrderOrdLogEventDescription As text:
                        BorderColor: =If(txtOrderOrdLogEventDescription_validation,patternColor3.Fill,patternColor6.Fill)
                        BorderThickness: =1
                        Default: =""
                        DisabledColor: |-
                            =RGBA(0, 0, 0, 1)
                            //RGBA(166; 166; 166; 1)
                        DisplayMode: |-
                            =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                DisplayMode.View
                            )
                        FocusedBorderColor: =patternColor4.Fill
                        FocusedBorderThickness: =1
                        Height: =140
                        HoverBorderColor: =patternColor4.Fill
                        HoverFill: =ColorFade(patternColor3.Fill, 90%)
                        Mode: =TextMode.MultiLine
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Tooltip: =
                        Width: =382
                        X: =211
                        Y: =txtVlastnik.Y + 150
                        ZIndex: =10

                    lblOrderOrdLogEventDescription As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventDescription" && Language=SelectedLanguage,String)
                        Tooltip: =
                        Width: =190
                        X: =10
                        Y: =lblOwner.Y + 150
                        ZIndex: =11

                    ProcessHistory_4 As groupContainer:
                        BorderColor: =patternColor1.Fill
                        BorderThickness: =1
                        Fill: =Transparent
                        Height: =311
                        Width: =583
                        X: =10
                        Y: =312
                        ZIndex: =12

                        "glrProcessHistoryItems_4 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                            Height: =221
                            Items: =Sort(Filter(DMSOrderProcessLog, DMSOrdLogItemId = Text(OrderSHPItem.ID)),Created, Descending)
                            Layout: =Layout.Vertical
                            TemplatePadding: =0
                            TemplateSize: =45
                            Width: =573
                            X: =10
                            Y: =90
                            ZIndex: =1

                            Separator1_9 As rectangle:
                                Fill: =patternColor1.Fill
                                Height: =1
                                OnSelect: =Select(Parent)
                                Width: =Parent.TemplateWidth
                                Y: =Parent.TemplateHeight - 1
                                ZIndex: =1

                            lblOrdLogEventDescriptionValue_4 As label:
                                Color: =labelSettings.Color
                                Font: =labelSettings.Font
                                Height: =38
                                Size: =10
                                Text: =Left(ThisItem.DMSOrdLogEventDescription, 34) & If(Len(ThisItem.DMSOrdLogEventDescription) > 34, "...")
                                Tooltip: =labelSettings.Tooltip
                                VerticalAlign: =VerticalAlign.Top
                                Width: =142
                                X: =388
                                Y: =4
                                ZIndex: =2

                            lblOrdLogEventTitleValue_4 As label:
                                Color: =labelSettings.Color
                                Font: =labelSettings.Font
                                Height: =38
                                Size: =10
                                Text: =ThisItem.DMSOrdLogEventTitle
                                Tooltip: =labelSettings.Tooltip
                                Width: =290
                                X: =98
                                Y: =4
                                ZIndex: =3

                            lblOrdLogDateValue_4 As label:
                                Align: =Align.Right
                                Color: =labelSettings.Color
                                Font: =labelSettings.Font
                                Height: =38
                                Size: =10
                                Text: |-
                                    =Text(ThisItem.DMSOrdLogDate, "[$-en-US]dd. mm. yyyy") & "
                                    " & Text(ThisItem.DMSOrdLogDate, "[$-en-US]hh:mm")
                                Tooltip: =labelSettings.Tooltip
                                Width: =86
                                Y: =4
                                ZIndex: =5

                            Icon1 As icon.Add:
                                Color: =patternColor4.Fill
                                Height: =26
                                Icon: =Icon.ChevronRight
                                OnSelect: |-
                                    =Select(Parent);
                                    UpdateContext({popUpLogItemDetailVisibility: true});
                                Width: =30
                                X: =530
                                Y: =10
                                ZIndex: =6

                        lblOrdLogEventDescription_4 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventDescription" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            X: =395
                            Y: =50
                            ZIndex: =6

                        lblOrdLogEventTitle_4 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventTitle" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            Width: =134
                            X: =105
                            Y: =50
                            ZIndex: =7

                        lblOrdLogDate_4 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblOrdLogDate" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            Width: =95
                            X: =10
                            Y: =50
                            ZIndex: =10

                        lblProcessLog_4 As label:
                            Color: =labelSettings.Color
                            Font: =labelSettings.Font
                            FontWeight: =FontWeight.Semibold
                            Size: =labelSettings.Size
                            Text: =LookUp(StringsProcess,AppKey="lblProcessLog" && Language=SelectedLanguage,String)
                            Tooltip: =labelSettings.Tooltip
                            Width: =190
                            X: =10
                            Y: =9
                            ZIndex: =11

                icoWarning_1 As icon.Add:
                    Color: =patternColor6.Fill
                    Height: =40
                    Icon: =Icon.Warning
                    Tooltip: |-
                        =LookUp(StringsOrder,AppKey="tooltipOrderNotInBuget" && Language=SelectedLanguage,String) 
                        /*& " " & First(cbOrdLegalEntity.SelectedItems).DMSLegalEntityContractOrdValueLimit & "EUR"*/
                    Visible: =!OrderSHPItem.'In Budget'
                    Width: =40
                    X: =159
                    Y: =701
                    ZIndex: =5

                cbOrderOrderedNote As text:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =1
                    Default: =OrderSHPItem.DMSOrderOrderedNote
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "100" && !OrderSHPItem.Ordered),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =
                    Width: =336
                    X: =257
                    ZIndex: =6

                lbIOrderOrdered As label:
                    Color: =If(OrderSHPItem.'Actual Phase' = "100", Red,labelSettings.Color)
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lbIOrderOrdered" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =175
                    X: =10
                    ZIndex: =7

                cbOrderOrdered As checkbox:
                    CheckboxBackgroundFill: =White
                    CheckboxBorderColor: =patternColor1.Fill
                    CheckmarkFill: =patternColor1.Fill
                    Default: =OrderSHPItem.Ordered
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "100" && !OrderSHPItem.Ordered),
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    FocusedBorderThickness: =0
                    Height: =40
                    OnSelect: =
                    Text: =""
                    Width: =40
                    X: =208
                    ZIndex: =8

            leftColumn As groupContainer:
                Fill: =Transparent
                Height: =759
                Width: =733
                X: =0*0
                ZIndex: =2

                cbWatchers As combobox:
                    BorderColor: =If(cbWatchers_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =AddColumns(OrderSHPItem.Watchers,"Mail",Email)
                        /*Filter(
                            AddColumns(OrderSHPItem.Watchers,"Mail",Email),
                            !IsBlank(LookUp(Office365Users.SearchUserV2().value, Mail = Email).Mail)
                        )*/
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DisplayName","Mail"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10")|| customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            DisplayMode.Disabled
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: |-
                        =AddColumns(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),"Email",Mail)
                    SearchFields: =["DisplayName"]
                    SearchItems: |-
                        =Search(AddColumns(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),"Email",Mail),cbWatchers.SearchText,"DisplayName")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 14 * 50
                    ZIndex: =1

                lblWatchers As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblWatchers" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 14 * 50
                    ZIndex: =2

                txtlblOrderDescriptionDetailed As text:
                    BorderColor: =If(txtlblOrderDescriptionDetailed_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: =OrderSHPItem.Description
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    Height: =140
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    Mode: =TextMode.MultiLine
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 11 * 50
                    ZIndex: =3

                lblOrderDescriptionDetailed As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderDescriptionDetailed" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 11 * 50
                    ZIndex: =4

                cbOrdLegalEntity As combobox:
                    BorderColor: =If(cbOrdLegalEntity_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =If(customFormMode = FormMode.New,
                            LookUp(DMSLegalEntity, 'Legal Entity Code' = CurrentLegalEntity),
                            LookUp(DMSLegalEntity, 'Legal Entity Code' = OrderSHPItem.'Legal Entity Code')
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSLegalEntityName"]
                    DisplayMode: |-
                        =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            DisplayMode.Disabled
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    IsSearchable: =false
                    Items: =DMSLegalEntity
                    SearchFields: =["DMSLegalEntityName"]
                    SearchItems: =[]
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 1 * 50
                    ZIndex: =5

                lblOrdLegalEntity As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdLegalEntity" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 1 * 50
                    ZIndex: =6

                cbOrdDepartment As combobox:
                    BorderColor: =If(cbOrdDepartment_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: =LookUp(DMSDepartment, 'Cost Center Code' = OrderSHPItem.'Cost Center Code' && 'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSDepartmentName","DMSDepartmentBudgetOwnerName"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: =Filter(DMSDepartment,'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')
                    SearchFields: =["DMSDepartmentName"]
                    SearchItems: =Search(Filter(DMSDepartment,'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'),cbOrdDepartment.SearchText,"DMSDepartmentName")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 7 * 50
                    ZIndex: =7

                lblOrdDepartment As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdDepartment" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 7 * 50
                    ZIndex: =8

                cbOrdRequestor As combobox:
                    BorderColor: =If(cbOrdRequestor_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |
                        =If(customFormMode = FormMode.Edit || customFormMode = FormMode.View,
                            Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = First(OrderSHPItem.Requestor).Email),
                            Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = User().Email)
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DisplayName","Mail"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: |-
                        =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
                    PressedColor: =White
                    SearchFields: =["DisplayName"]
                    SearchItems: |-
                        =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbOrdRequestor.SearchText,"DisplayName")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 6 * 50
                    ZIndex: =9

                lblOrdRequestor As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdRequestor" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 6 * 50
                    ZIndex: =10

                btnNewVendor As button:
                    BorderColor: =patternColor3.DisabledFill
                    BorderThickness: =0.5
                    Color: =RGBA(0, 0, 0, 1)
                    DisplayMode: =If(SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New, DisplayMode.Edit,DisplayMode.Disabled)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =0.5
                    HoverBorderColor: =patternColor4.Fill
                    HoverColor: =
                    HoverFill: =
                    OnSelect: |-
                        =UpdateContext({popUpNewVendorVisibility: true});
                    PressedBorderColor: =patternColor4.Fill
                    PressedColor: =
                    PressedFill: =ColorFade(patternColor3.Fill, 90%)
                    Size: =11
                    Text: =LookUp(StringsOrder,AppKey="btnNewVendor" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Visible: =(customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New
                    Width: =170
                    X: =552
                    Y: =cbOrdVendor.Y
                    ZIndex: =11

                cbOrdVendor As combobox:
                    BorderColor: =If(cbOrdVendor_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =//LookUp(DMSVendor,DMSVendorERPCode = OrderSHPItem.DMSOrdVendorCode && DMSVendorLegalEntityCode = CurrentLegalEntity)
                        LookUp(DMSVendor,'ERP Code' = OrderSHPItem.'Vendor Code' && 'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSVendorName"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: |-
                        =Sort(Filter(DMSVendor,('Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code') && StartsWith('Name (DMSVendorName)',Self.SearchText)),'Name (DMSVendorName)',Ascending)
                        
                        /*Filter(DMSVendor;'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')*/
                    SearchFields: =["DMSVendorName"]
                    SearchItems: |-
                        =Search(Sort(Filter(DMSVendor,('Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code') && StartsWith('Name (DMSVendorName)',Self.SearchText)),'Name (DMSVendorName)',Ascending)
                        
                        /*Filter(DMSVendor;'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')*/,cbOrdVendor.SearchText,"DMSVendorName")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Tooltip: =
                    Width: =300
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 5 * 50
                    ZIndex: =12

                lblOrdVendor As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdVendor" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 5 * 50
                    ZIndex: =13

                txtOrderDescription As text:
                    BorderColor: =If(txtOrderDescription_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: =OrderSHPItem.Summary
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 4 * 50
                    ZIndex: =14

                lblOrderDescription As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderDescription" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 4 * 50
                    ZIndex: =15

                lblOrderDate As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderDate" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 3 * 50
                    ZIndex: =16

                txtOrderNumber As text:
                    BorderColor: =If(txtOrderNumber_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: |
                        =OrderSHPItem.'Order Number'
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            DisplayMode.Disabled
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =
                    Width: =484
                    X: =238
                    ZIndex: =17

                lblOrderNumber As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderNumber" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Width: =190
                    X: =40
                    ZIndex: =18

                cbOrdContractNumber As combobox:
                    BorderColor: =If(cbOrdContractNumber_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: =LookUp(DMSContract,Contract = OrderSHPItem.'Contract Number' && 'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DMSContractNumber"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: =Filter(DMSContract, 'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code')
                    SearchFields: =["DMSContractNumber"]
                    SearchItems: =Search(Filter(DMSContract, 'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'),cbOrdContractNumber.SearchText,"DMSContractNumber")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Tooltip: =
                    Width: |-
                        =If(((Value(lblTotal.Text) / First(cbOrdLegalEntity.SelectedItems).'Exchange Rate (EUR)') > First(cbOrdLegalEntity.SelectedItems).'Contract Order Value Limit') && (IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems)),
                            430,
                            484
                        )
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 2 * 50
                    ZIndex: =19

                lblOrdContractNumber As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdContractNumber" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 2 * 50
                    ZIndex: =20

                txtOrdBudgetOwner As text:
                    BorderColor: =If(txtOrdBudgetOwner_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: |-
                        =If(IsEmpty(First(cbOrdDepartment.SelectedItems).'Budget Owner Name') || IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner Name'),
                                OrderSHPItem.'Budget Owner Name',
                                First(cbOrdDepartment.SelectedItems).'Budget Owner Name'
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            DisplayMode.Disabled
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =First(cbOrdDepartment.SelectedItems).'Budget Owner Name'
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 8 * 50
                    ZIndex: =21

                lblOrdBudgetOwner As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdBudgetOwner" && Language=SelectedLanguage,String)
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 8 * 50
                    ZIndex: =22

                cbOrderOrderer As combobox:
                    BorderColor: =If(cbOrderOrderer_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    ChevronBackground: =
                    ChevronFill: =patternColor1.Fill
                    ChevronHoverBackground: =patternColor4.Fill
                    DefaultSelectedItems: |-
                        =If(customFormMode = FormMode.Edit || customFormMode = FormMode.View,
                            Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = First(OrderSHPItem.Orderer).Email),
                            Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = User().Email)
                        )
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayFields: =["DisplayName","Mail"]
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                    Items: |-
                        =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
                    SearchFields: =["DisplayName"]
                    SearchItems: |-
                        =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbOrderOrderer.SearchText,"DisplayName")
                    SelectionColor: =White
                    SelectionFill: =patternColor4.Fill
                    SelectMultiple: =false
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 9 * 50
                    ZIndex: =23

                lblOrderOrderer As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderOrderer" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 9 * 50
                    ZIndex: =24

                txtOrderRecipient As text:
                    BorderColor: =If(txtOrderRecipient_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: =OrderSHPItem.Recipient
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =
                    Width: =484
                    X: =txtOrderNumber.X
                    Y: =txtOrderNumber.Y + 10 * 50
                    ZIndex: =25

                lblOrderRecipient As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderRecipient" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =
                    Width: =190
                    X: =lblOrderNumber.X
                    Y: =lblOrderNumber.Y + 10 * 50
                    ZIndex: =26

                icoWarning As icon.Add:
                    Color: =patternColor6.Fill
                    Height: =40
                    Icon: =Icon.Warning
                    Tooltip: =LookUp(StringsOrder,AppKey="tooltipLimitValidation" && Language=SelectedLanguage,String) & First(cbOrdLegalEntity.SelectedItems).'Contract Order Value Limit' & "EUR"
                    Visible: =((Value(lblTotal.Text) / First(cbOrdLegalEntity.SelectedItems).'Exchange Rate (EUR)') > First(cbOrdLegalEntity.SelectedItems).'Contract Order Value Limit') && (IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems))
                    Width: =40
                    X: =682
                    Y: =100
                    ZIndex: =27

                dpOrderDate_background As datepicker:
                    BorderColor: =If(dpOrderDate_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: =
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: |-
                        =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                            DisplayMode.Disabled,
                            DisplayMode.Disabled
                        )
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =RGBA(237, 237, 237, 1)
                    IconFill: =Transparent
                    InputTextPlaceholder: =
                    Tooltip: =
                    Width: =484
                    X: =238
                    Y: =150
                    ZIndex: =28

                "dpOrderDate As 'Date picker'":
                    AcceptsFocus: =false
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10") || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.Disabled
                            )
                        )
                    Font: =Font.'Open Sans'
                    FontSize: =14
                    FontWeight: ="normal"
                    Height: =39
                    IconSize: =16
                    InitialPickerDate: =
                    PaddingBottom: =0
                    PaddingTop: =0
                    PCFTeamsTheme: =TeamsTheme.Default
                    ShowGoToToday: =false
                    TextColor: =RGBA(0, 0, 0, 1)
                    Value: |-
                        =If(customFormMode = FormMode.New,
                            Today(),
                            OrderSHPItem.'Order Date'
                        )
                    Visible: =true
                    Width: =483
                    X: =239
                    Y: =150
                    ZIndex: =29

                txtOrderDate As text:
                    BorderColor: =patternColor3.Fill
                    BorderThickness: =0
                    Default: =dpOrderDate.Value
                    DisabledColor: |-
                        =RGBA(0, 0, 0, 1)
                        //RGBA(166; 166; 166; 1)
                    DisplayMode: =DisplayMode.Disabled
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    Height: =35
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    PaddingLeft: =10
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =
                    Visible: =If(dpOrderDate.DisplayMode=Disabled,true,false)
                    Width: =170
                    X: =If(dpOrderDate.DisplayMode=Disabled,240,450)
                    Y: =152
                    ZIndex: =30

            OrderItems As groupContainer:
                BorderColor: =If(OrderItems_validation,patternColor1.Fill,patternColor6.Fill)
                BorderThickness: =1
                Fill: =Transparent
                Height: =383
                Width: =1312
                X: =13
                Y: =759
                ZIndex: =3

                lbllblOrdItemTotals As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblTotal" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =25
                    Y: =320
                    ZIndex: =1

                lblOrdItemRemainsHeader As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblRemains" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =120
                    X: =1050
                    Y: =40
                    ZIndex: =2

                lblOrdItemDrawnHeader As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblDrawn" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =146
                    X: =893
                    Y: =40
                    ZIndex: =3

                lblOrdItemAmountActualHeader As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvItemLocalCurrencyAmountHeader" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =144
                    X: =776
                    Y: =40
                    ZIndex: =4

                lblOrdItemDescriptionHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =654
                    Y: =40
                    ZIndex: =5

                lblOrdItemBudgetItemHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblBudgetItem" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =470
                    Y: =40
                    ZIndex: =6

                lblOrdItemBudgetCategoryHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblBudgetCategory" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =270
                    Y: =40
                    ZIndex: =7

                lblOrdItemDeliverablesDueHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdItemDeliverablesDueHeader" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =132
                    X: =12
                    Y: =40
                    ZIndex: =8

                "glrOrderItems As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                    Height: =229
                    Items: =Filter(DMSOrderItem, DMSOrdItemOrderID= OrderSHPItem.ID)
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =45
                    Width: =1291
                    X: =12
                    Y: =90
                    ZIndex: =9

                    Separator1 As rectangle:
                        Fill: =patternColor1.Fill
                        Height: =1
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =5

                    lblOrdItemDeliverablesDue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =Text(ThisItem.DMSOrdItemDeliverablesDue,"[$-en-US]yyyy/mm")
                        Tooltip: =labelSettings.Tooltip
                        Width: =93
                        X: =20
                        Y: =2
                        ZIndex: =6

                    lblOrdItemProfitCenter As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSOrdItemProfitCenterTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =128
                        Y: =2
                        ZIndex: =7

                    lblOrdItemBudgetCategory As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSOrdItemBudgetCategoryTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =258
                        Y: =2
                        ZIndex: =8

                    lblOrdItemDescription As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =Left(ThisItem.DMSOrdItemDescription, 13) & If(Len(ThisItem.DMSOrdItemDescription) > 13, "...")
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =644
                        Y: =2
                        ZIndex: =9

                    lblOrdItemAmountActual As label:
                        Align: =Align.Right
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: |-
                            =Text(ThisItem.DMSOrdItemAmountActual,"[$-en-US]#,##0.00")
                        Tooltip: =labelSettings.Tooltip
                        Width: =184
                        X: =697
                        Y: =2
                        ZIndex: =10

                    lblOrdItemDrawn As label:
                        Align: =Align.Right
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: |-
                            =Text(ThisItem.DMSOrdItemInvAmount_Approved,"[$-en-US]#,##0.00")
                        Tooltip: =labelSettings.Tooltip
                        Width: =129
                        X: =896
                        Y: =2
                        ZIndex: =11

                    lblOrdItemRemains As label:
                        Align: =Align.Right
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: |-
                            =Text(ThisItem.DMSOrdItemAmountActual - ThisItem.DMSOrdItemInvAmount_Approved,"[$-en-US]#,##0.00")
                        Tooltip: =labelSettings.Tooltip
                        Width: =121
                        X: =1037
                        Y: =2
                        ZIndex: =12

                    btnOrdItemDeleteItem As icon.Cancel:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail') || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                If(customFormMode = FormMode.Edit,
                                    DisplayMode.Disabled,
                                    DisplayMode.View
                                )
                            )
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Cancel
                        OnSelect: |-
                            =//DMS_WriteLog.Run(Now(),4,OrderSHPItem.DMSOrdProcessActualPhase,LookUp(StringsProcess,AppKey="logItemID" && Language=SelectedLanguage,String) & " " & ThisItem.ID,User().Email,OrderSHPItem.ID);
                            Refresh(DMSOrderProcessLog);
                            Remove(DMSOrderItem,ThisItem);
                        Visible: =customFormMode = FormMode.Edit || customFormMode = FormMode.New
                        Width: =25
                        X: =1239
                        Y: =8
                        ZIndex: =14

                    lblOrdItemBudgetItem As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSOrdItemBudgetItemTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =190
                        X: =448
                        Y: =2
                        ZIndex: =15

                    lblInBudgetWarning As label:
                        Color: =patternColor6.Fill
                        FontWeight: =FontWeight.Semibold
                        Size: =20
                        Text: ="!"
                        Tooltip: =LookUp(StringsOrder,AppKey="tooltipItemNotInBuget" && Language=SelectedLanguage,String) 
                        Visible: =!ThisItem.DMSOrdItemInBudget && !OrderSHPItem.'In Budget'
                        Width: =13
                        Y: =2
                        ZIndex: =17

                    btnOrdItemEditItem As icon.Edit:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail') || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                If(customFormMode = FormMode.Edit,
                                    DisplayMode.Disabled,
                                    DisplayMode.View
                                )
                            )
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Edit
                        OnSelect: |-
                            =UpdateContext({ItemPCNotChanged: true});
                            UpdateContext({ItemBCNotChanged: true});
                            UpdateContext({ItemBINotChanged: true});
                            
                            UpdateContext({popUpOrderItemVisibility: true});
                            UpdateContext({popUpOrderItemFormMode: FormMode.Edit});
                            UpdateContext({popUpOrderItemOrderNumber: ThisItem.ID});
                            UpdateContext({popUporderItem: LookUp(DMSOrderItem, ID = ThisItem.ID)});
                        PaddingTop: =-1
                        Visible: =customFormMode = FormMode.Edit || customFormMode = FormMode.New
                        Width: =25
                        X: =1204
                        Y: =8
                        ZIndex: =18

                    btnViewItemEditItem As icon.Edit:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =/*If((customFormMode = FormMode.Edit && OrderSHPItem.DMSOrdProcessActualPhase = "10" && SHPMeClaim.Email = OrderSHPItem.DMSOrdProcessActualOwnerEMail) || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                If(customFormMode = FormMode.Edit,
                                    DisplayMode.Disabled,
                                    DisplayMode.View
                                )
                            )*/
                            DisplayMode.Edit
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Search
                        OnSelect: |-
                            =UpdateContext({ItemPCNotChanged: true});
                            UpdateContext({ItemBCNotChanged: true});
                            UpdateContext({ItemBINotChanged: true});
                            
                            UpdateContext({popUpOrderItemVisibility: true});
                            UpdateContext({popUpOrderItemFormMode: FormMode.View});
                            UpdateContext({popUpOrderItemOrderNumber: ThisItem.ID});
                            UpdateContext({popUporderItem: LookUp(DMSOrderItem, ID = ThisItem.ID)});
                        PaddingTop: =-1
                        Visible: |-
                            =//customFormMode = FormMode.Edit || customFormMode = FormMode.New
                            true
                        Width: =25
                        X: =1168
                        Y: =8
                        ZIndex: =19

                lblOrdItemTitle As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrdItemTitle" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =12
                    ZIndex: =10

                lblOrdItemProfitCenterHeader As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =50
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblProfitCentrum" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =136
                    X: =144
                    Y: =40
                    ZIndex: =11

                btnOrdItemNewItem As icon.Edit:
                    Color: =patternColor1.Fill
                    DisplayMode: |-
                        =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail') || customFormMode = FormMode.New,
                            DisplayMode.Edit,
                            If(customFormMode = FormMode.Edit,
                                DisplayMode.Disabled,
                                DisplayMode.View
                            )
                        )
                    FocusedBorderThickness: =0
                    Height: =25
                    Icon: =Icon.Add
                    OnSelect: |
                        =UpdateContext({dpOrdItemDeliverablesDueForm_validation: true});
                        UpdateContext({txtOrderItemAmount_validation: true});
                        UpdateContext({cbOrderItemProfitCenter_validation: true});
                        UpdateContext({cbOrderItemBudgetCategory_validation: true});
                        UpdateContext({cbOrderItemBudgetItem_validation: true});
                        UpdateContext({txtOrderItemDescription_validation: true});
                        
                        UpdateContext({BudgetItemHelper_PC: Blank()});
                        UpdateContext({BudgetItemHelper_BC: Blank()});
                        UpdateContext({BudgetItemHelper_BI: Blank()});
                        
                        UpdateContext({ItemPCNotChanged: true});
                        UpdateContext({ItemBCNotChanged: true});
                        UpdateContext({ItemBINotChanged: true});
                        
                        UpdateContext({popUpOrderItemVisibility: true});
                        UpdateContext({popUpOrderItemFormMode: FormMode.New});
                        UpdateContext({popUporderItem: Blank()});
                           
                    PaddingTop: =-1
                    Visible: =false
                    Width: =25
                    X: =202
                    Y: =7
                    ZIndex: =12

                lblTotal As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(Sum(glrOrderItems.AllItems, Value(DMSOrdItemAmountActual)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =186
                    X: =708
                    Y: =320
                    ZIndex: =13

                lblOrdItemDrawnSum As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(Sum(glrOrderItems.AllItems, DMSOrdItemInvAmount_Approved),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =136
                    X: =903
                    Y: =320
                    ZIndex: =14

                lblOrdItemRemainsSum As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(Sum(glrOrderItems.AllItems, Value(DMSOrdItemAmountActual - DMSOrdItemInvAmount_Approved)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =108
                    X: =1064
                    Y: =320
                    ZIndex: =15

                btnOrdGenerateRows As button:
                    BorderColor: =patternColor3.DisabledFill
                    BorderThickness: =0.5
                    Color: =RGBA(0, 0, 0, 1)
                    DisplayMode: =If(SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =0.5
                    Height: =32
                    HoverBorderColor: =patternColor4.Fill
                    HoverColor: =
                    HoverFill: =
                    OnSelect: |
                        =UpdateContext({dpOrdItemGeneratedFrom_validation: true});
                        UpdateContext({dpOrdItemGeneratedTo_validation: true});
                        UpdateContext({dpOrdItemDeliverablesDueForm_validation: true});
                        UpdateContext({txtOrderItemAmount_validation: true});
                        UpdateContext({cbOrderItemProfitCenter_validation: true});
                        UpdateContext({cbOrderItemBudgetCategory_validation: true});
                        UpdateContext({cbOrderItemBudgetItem_validation: true});
                        UpdateContext({txtOrderItemDescription_validation: true});
                        UpdateContext({txtOrderItemGeneratedPeriod_validation: true});
                        
                        UpdateContext({BudgetItemHelper_PC: Blank()});
                        UpdateContext({BudgetItemHelper_BC: Blank()});
                        UpdateContext({BudgetItemHelper_BI: Blank()});
                        
                        UpdateContext({ItemPCNotChanged: true});
                        UpdateContext({ItemBCNotChanged: true});
                        UpdateContext({ItemBINotChanged: true});
                        
                        UpdateContext({popUpOrderItemRepeatedVisibility: true});
                        UpdateContext({popUpOrderItemFormMode: FormMode.New});
                        UpdateContext({popUporderItem: Blank()});
                           
                    PressedBorderColor: =patternColor4.Fill
                    PressedColor: =
                    PressedFill: =ColorFade(patternColor3.Fill, 90%)
                    Text: =LookUp(StringsOrder,AppKey="btnOrdGenerateRows" && Language=SelectedLanguage,String)
                    Visible: =(customFormMode = FormMode.Edit && (OrderSHPItem.'Actual Phase' = "10")) || customFormMode = FormMode.New
                    Width: =193
                    X: =403
                    Y: =7
                    ZIndex: =16

                btnOrdItemNewItem2 As button:
                    BorderColor: =patternColor3.DisabledFill
                    BorderThickness: =0.5
                    Color: =RGBA(0, 0, 0, 1)
                    DisplayMode: =If(SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =0.5
                    Height: =32
                    HoverBorderColor: =patternColor4.Fill
                    HoverColor: =
                    HoverFill: =
                    OnSelect: |-
                        =UpdateContext({dpOrdItemDeliverablesDueForm_validation: true});
                        UpdateContext({txtOrderItemAmount_validation: true});
                        UpdateContext({cbOrderItemProfitCenter_validation: true});
                        UpdateContext({cbOrderItemBudgetCategory_validation: true});
                        UpdateContext({cbOrderItemBudgetItem_validation: true});
                        UpdateContext({txtOrderItemDescription_validation: true});
                        
                        UpdateContext({BudgetItemHelper_PC: Blank()});
                        UpdateContext({BudgetItemHelper_BC: Blank()});
                        UpdateContext({BudgetItemHelper_BI: Blank()});
                        
                        UpdateContext({ItemPCNotChanged: false});
                        UpdateContext({ItemBCNotChanged: false});
                        UpdateContext({ItemBINotChanged: false});
                        
                        UpdateContext({popUpOrderItemVisibility: true});
                        UpdateContext({popUpOrderItemFormMode: FormMode.New});
                        UpdateContext({popUporderItem: Blank()});
                    PressedBorderColor: =patternColor4.Fill
                    PressedColor: =
                    PressedFill: =ColorFade(patternColor3.Fill, 90%)
                    Text: =LookUp(StringsOrder,AppKey="btnOrdNeItem" && Language=SelectedLanguage,String)
                    Visible: =(customFormMode = FormMode.Edit && (OrderSHPItem.'Actual Phase' = "10")) || customFormMode = FormMode.New
                    Width: =193
                    X: =202
                    Y: =7
                    ZIndex: =17

                lblNonActive As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(0, 0, 0, 0.4)
                    Height: =Parent.Height
                    Size: =30
                    Text: =LookUp(StringsOrder,AppKey="lblNonActive" && Language=SelectedLanguage,String)
                    Visible: =customFormMode = FormMode.New
                    Width: =Parent.Width
                    ZIndex: =18

            OrderInvoices As groupContainer:
                BorderColor: =patternColor1.Fill
                BorderThickness: =1
                Fill: =Transparent
                Height: =379
                Width: =1312
                X: =13
                Y: =1156
                ZIndex: =4

                lblTotalApprovedValue As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(Sum(Filter(glrOrderInvoices.AllItems,lblInvoicePhaseValue.Text = "100"), Value(lblbAmountValue.Text)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =904
                    Y: =270
                    ZIndex: =1

                lblTotal2 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblTotal" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =10
                    Y: =270
                    ZIndex: =2

                "glrOrderInvoices As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                    Height: =185
                    Items: =Filter(DMSInvoiceItem, DMSInvItemOrderID = OrderSHPItem.ID)
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =45
                    Width: =1290
                    X: =10
                    Y: =85
                    ZIndex: =3

                    Separator1_1 As rectangle:
                        Fill: =patternColor1.Fill
                        Height: =1
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =1

                    lblInvoicePhaseValue As label:
                        Align: =Align.Center
                        Color: =labelSettings.Color
                        Fill: |-
                            =If(
                                Self.Text = "100",
                                RGBA(95,210,85,0.5),
                                If(
                                    Self.Text = "99",
                                    RGBA(250,65,0,0.5),
                                    RGBA(0,0,0,0)
                                )
                            )
                        Font: =labelSettings.Font
                        Height: =29
                        Size: =labelSettings.Size
                        Text: =LookUp(DMSInvoice,ID = ThisItem.DMSInvItemInvoiceID,'Actual Phase')
                        Tooltip: =labelSettings.Tooltip
                        Width: =43
                        X: =1152
                        Y: =7
                        ZIndex: =2

                    lblbAmountValue As label:
                        Align: =Align.Right
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: |-
                            =Text(ThisItem.DMSInvItemLocalCurrencyAmount,"[$-en-US]#,##0.00")
                        Tooltip: =labelSettings.Tooltip
                        Width: =141
                        X: =943
                        Y: =2
                        ZIndex: =3

                    lblDescriptionValue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Height: =39
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemDescription
                        Tooltip: =labelSettings.Tooltip
                        Width: =255
                        X: =707
                        Y: =2
                        ZIndex: =4

                    lblBudgetItemValue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemBudgetItemTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =121
                        X: =586
                        Y: =2
                        ZIndex: =5

                    lblBudgetCategoryValue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemBudgetCategoryTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =140
                        X: =446
                        Y: =2
                        ZIndex: =6

                    lblProfitCentrum2Value As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemProfitCenterTitle
                        Tooltip: =labelSettings.Tooltip
                        Width: =153
                        X: =293
                        Y: =2
                        ZIndex: =7

                    lblInvoicePostingDateValue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemPostingDate
                        Tooltip: =labelSettings.Tooltip
                        Width: =116
                        X: =147
                        Y: =2
                        ZIndex: =8

                    lblInvoiceNumberValue As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        HoverColor: =patternColor4.Fill
                        OnSelect: |-
                            =Launch("https://apps.powerapps.com/play/" & txtAPPID.Text & "?tenantId=" & txtTenantID.Text & "&screen=2&formmode=0&itemid=" & ThisItem.DMSInvItemInvoiceID)
                        Size: =labelSettings.Size
                        Text: =ThisItem.DMSInvItemInvoiceNumber
                        Tooltip: =labelSettings.Tooltip
                        Underline: =true
                        Width: =190
                        Y: =2
                        ZIndex: =9

                lblInvoicePhase As label:
                    Align: =Align.Center
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblInvoicePhase" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =122
                    X: =1126
                    Y: =50
                    ZIndex: =4

                lblbAmount As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsInvoice,AppKey="lblInvItemLocalCurrencyAmountHeader" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =904
                    Y: =50
                    ZIndex: =5

                lblDescription As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =194
                    X: =720
                    Y: =50
                    ZIndex: =6

                lblBudgetItem As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblBudgetItem" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =597
                    Y: =50
                    ZIndex: =7

                lblBudgetCategory As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblBudgetCategory" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =152
                    X: =445
                    Y: =50
                    ZIndex: =8

                lblProfitCentrum2 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblProfitCentrum" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =299
                    Y: =50
                    ZIndex: =9

                lblInvoicePostingDate As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Height: =53
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblInvoicePostingDate" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =148
                    X: =151
                    Y: =49
                    ZIndex: =10

                lblInvoiceNumber As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblInvoiceNumber" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =10
                    Y: =50
                    ZIndex: =11

                lblOrderInvoices As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderInvoices" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =10
                    Y: =9
                    ZIndex: =12

                lblTotalApproved As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblTotalApproved" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =803
                    Y: =270
                    ZIndex: =13

                lblTotalDeclained As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblTotalDeclained" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =803
                    Y: =301
                    ZIndex: =14

                lblTotalOther As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblTotalOther" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =803
                    Y: =334
                    ZIndex: =15

                lblTotalDeclainedValue As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(Sum(Filter(glrOrderInvoices.AllItems,lblInvoicePhaseValue.Text = "99"), Value(lblbAmountValue.Text)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =904
                    Y: =301
                    ZIndex: =16

                lblTotalOtherValue As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(Sum(Filter(glrOrderInvoices.AllItems,!(lblInvoicePhaseValue.Text = "100") && !(lblInvoicePhaseValue.Text = "99")), Value(lblbAmountValue.Text)),"[$-en-US]#,##0.00")
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =904
                    Y: =334
                    ZIndex: =17

            OrderAttachments As groupContainer:
                BorderColor: =patternColor1.Fill
                BorderThickness: =1
                Fill: =Transparent
                Height: =293
                Width: =1312
                X: =13
                Y: =1550
                ZIndex: =5

                lblAttachment As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblAttachment" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =6
                    Y: =45
                    ZIndex: =1

                "glrOrderAttachments As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                    Height: =185
                    Items: =LookUp(DMSOrder,ID = OrderSHPItemID).Attachments
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =45
                    Width: =1294
                    X: =6
                    Y: =85
                    ZIndex: =2

                    Separator1_2 As rectangle:
                        Fill: =patternColor1.Fill
                        Height: =1
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - 1
                        ZIndex: =5

                    lblAttachmentName As label:
                        Color: =labelSettings.Color
                        Font: =labelSettings.Font
                        Height: =34
                        Size: =labelSettings.Size
                        Text: =ThisItem.DisplayName
                        Tooltip: =labelSettings.Tooltip
                        Width: =1134
                        X: =6
                        Y: =8
                        ZIndex: =6

                    icoDelete_2 As icon.Cancel:
                        Color: =patternColor1.Fill
                        DisplayMode: |-
                            =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail') || customFormMode = FormMode.New,
                                DisplayMode.Edit,
                                If(customFormMode = FormMode.Edit,
                                    DisplayMode.Disabled,
                                    DisplayMode.View
                                )
                            )
                        FocusedBorderThickness: =0
                        Height: =31
                        Icon: =Icon.Cancel
                        OnSelect: |-
                            =UpdateContext({popUpNewAttachmentVisibility: true});
                        Visible: =customFormMode = FormMode.Edit || customFormMode = FormMode.New
                        Width: =25
                        X: =1239
                        Y: =8
                        ZIndex: =14

                    icoDownload As icon.Download:
                        Color: =patternColor1.Fill
                        FocusedBorderThickness: =0
                        Height: =25
                        Icon: =Icon.Download
                        OnSelect: |-
                            =//Download(ThisItem.AbsoluteUri)
                            Launch(ThisItem.AbsoluteUri)
                        Width: =25
                        X: =1195
                        Y: =11
                        ZIndex: =15

                lblOrderAttachments As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    FontWeight: =FontWeight.Semibold
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderAttachments" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =6
                    Y: =5
                    ZIndex: =3

                btnNewAttachment As icon.Edit:
                    Color: =patternColor1.Fill
                    DisplayMode: =If(SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New, DisplayMode.Edit,DisplayMode.Disabled)
                    FocusedBorderThickness: =0
                    Height: =25
                    Icon: =Icon.Add
                    OnSelect: |-
                        =UpdateContext({popUpNewAttachmentVisibility: true});
                    PaddingTop: =-1
                    Visible: =customFormMode = FormMode.Edit || customFormMode = FormMode.New
                    Width: =25
                    X: =207
                    Y: =12
                    ZIndex: =4

                lblNonActive_1 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Fill: =RGBA(0, 0, 0, 0.4)
                    Height: =Parent.Height
                    Size: =30
                    Text: =LookUp(StringsOrder,AppKey="lblNonActive" && Language=SelectedLanguage,String)
                    Visible: =customFormMode = FormMode.New
                    Width: =Parent.Width
                    ZIndex: =5

    buttonsOrders As groupContainer:
        Fill: =Transparent
        Height: |-
            =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                58,
                If(OrderSHPItem.'Actual Phase' = "100" && OrderSHPItem.DMSOrderAmountRemainingCalcByFlow > 0,
                58,
                    0
                )
            )
        Width: =Parent.Width
        X: =0*0
        Y: =lblOrdTitle.Height
        ZIndex: =2

        btnAmountsHelper As button:
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                Patch(
                    DMSOrder,
                    LookUp(DMSOrder,ID = OrderSHPItem.ID),
                    {'Order Amount Actual':totalLocal},
                    {'Order Amount Original':totalLocal}
                );
            Text: ="Button"
            Visible: =false
            X: =60
            Y: =18
            ZIndex: =1

        btnOrdSave As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                    //Set(cbOrderOrdererValue,BlankPeople),
                    Set(cbOrderOrdererValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(User().Email),
                        Department:"",
                        DisplayName: First(Office365Users.SearchUser({searchTerm:User().Email})).DisplayName ,
                        Email: First(Office365Users.SearchUser({searchTerm:User().Email})).Mail,
                        JobTitle:".",
                        Picture:"."})
                    ),
                    Set(cbOrderOrdererValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                        Department:"",
                        DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                        Email:First(cbOrderOrderer.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                    //Set(cbOrdRequestorValue,BlankPeople),
                    Set(cbOrdRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(User().Email),
                        Department:"",
                        DisplayName: First(Office365Users.SearchUser({searchTerm:User().Email})).DisplayName ,
                        Email: First(Office365Users.SearchUser({searchTerm:User().Email})).Mail,
                        JobTitle:".",
                        Picture:"."})
                    ),
                    Set(cbOrdRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                        Department:"",
                        DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                        Email:First(cbOrdRequestor.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                    Set(cbOrdBudgetOwnerValue,BlankPeople),
                    Set(cbOrdBudgetOwnerValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Department:"",
                        DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                        Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                Set(cbWatchersValue,BlankPeople);
                If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                    Set(cbWatchersValue,BlankPeople),
                    
                    Set(cbWatchersValue,
                        ForAll(Filter(cbWatchers.SelectedItems, !IsBlank(Mail) && First(Office365Users.SearchUserV2({searchTerm: ThisRecord.Mail}).value).AccountEnabled), {
                            '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                            Department: "",
                            DisplayName: ThisRecord.DisplayName,
                            Email: ThisRecord.Mail,
                            JobTitle: "",
                            Picture: ""
                            }
                        )
                    )
                
                );
                Refresh(DMSOrder);
                
                If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                    UpdateContext({cbOrdDepartment_validation: false}),
                    UpdateContext({cbOrdDepartment_validation: true})
                );
                
                If(
                    cbOrdDepartment_validation,
                    Set(NewOrderSHPItem,
                        Patch(
                            DMSOrder,
                            If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                            {'Budget Owner':cbOrdBudgetOwnerValue},
                            {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                            {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                            {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                            {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                            {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                            {'Order Amount Actual':totalLocal},
                            {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                            {'Order Amount Original':totalLocal},
                            {'Order Date':dpOrderDate.Value},
                            {Description:txtlblOrderDescriptionDetailed.Text},
                            {'In Budget':cbInBudget.Value},
                            {'Order Number':txtOrderNumber.Text},
                            {Orderer:cbOrderOrdererValue},
                            {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                            {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                            {Recipient:txtOrderRecipient.Text},
                            {Requestor:cbOrdRequestorValue},
                            {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                            {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                            {Summary:txtOrderDescription.Text},
                            {Watchers:cbWatchersValue},
                            //{DMSOrdInvoicesAmount_Approved:},
                            //{DMSOrdInvoicesAmount_Declined:},
                            //{DMSOrdInvoicesAmount_InApproval:},
                            {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                            {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                            {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                            {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                            //{DMSOrdProcessEyesCount:},
                            //{DMSOrdProcessNextOwner:},
                            //{DMSOrdProcessNextOwnerEMail:},
                            //{DMSOrdProcessNextOwnerName:},
                            {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                            //{DMSOrdProcessPreviousOwner:},
                            //{DMSOrdProcessPreviousOwnerEMail:},
                            //{DMSOrdProcessPreviousOwnerName:},
                            //{DMSOrdProcessPreviousPhase:},
                            {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                            {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                            {'Budget Owner Equals Orderer':First(cbOrdBudgetOwnerValue).Email = First(cbOrdRequestorValue).Email},
                            {Ordered:cbOrderOrdered.Value},
                            {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                            {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,  
                        Patch(
                            DMSOrder,
                            LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                            {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                            {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                        );
                        Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                        Set(OrderSHPItemID,NewOrderSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                        Reset(txtOrderNumber);
                    );
                
                    Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                    
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Select(btnAmountsHelper);
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                    Notify(LookUp(StringsProcess,AppKey="NotificationSaved" && Language=SelectedLanguage,String),NotificationType.Success);,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
            Width: =120
            X: =40
            Y: =18
            ZIndex: =2

        btnOrdRequestComments As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(OrderSHPItem.'Actual Phase' = "20",
                	// STOP
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = OrderSHPItemID),
                		{'Order Action Date':Now()},
                		{'Order Action Description':txtOrderOrdLogEventDescription.Text},
                		{'Order Action Required':"END COMMENT"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email}
                	);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationReturned" && Language=SelectedLanguage,String) & " " & OrderSHPItem.'Previous Owner Name',NotificationType.Success);
                    ,
                	UpdateContext({popUpCommentVisibility: true});
                )
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: |-
                =If(OrderSHPItem.'Actual Phase' = "20",
                    LookUp(StringsInvoice,AppKey="btnOrdStopComments" && Language=SelectedLanguage,String),
                    LookUp(StringsInvoice,AppKey="btnOrdRequestComments" && Language=SelectedLanguage,String)
                )
            Visible: =CountRows(OrderSHPItem.'Actual Owner') < 2
            Width: =206
            X: =181
            Y: =18
            ZIndex: =3

        btnOrdStartApproval As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                If(IsBlank(txtOrderNumber.Text),
                        UpdateContext({txtOrderNumber_validation: false}),
                        UpdateContext({txtOrderNumber_validation: true})
                        );
                        If(IsEmpty(cbOrdLegalEntity.SelectedItems) || IsBlank(cbOrdLegalEntity.SelectedItems),
                        UpdateContext({cbOrdLegalEntity_validation: false}),
                        UpdateContext({cbOrdLegalEntity_validation: true})
                        );
                        /*If(IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems),
                        UpdateContext({cbOrdContractNumber_validation: false}),
                        UpdateContext({cbOrdContractNumber_validation: true})
                        );*/
                        If(IsBlank(dpOrderDate.Value),
                        UpdateContext({dpOrderDate_validation: false}),
                        UpdateContext({dpOrderDate_validation: true})
                        );
                        If(IsBlank(txtOrderDescription.Text),
                        UpdateContext({txtOrderDescription_validation: false}),
                        UpdateContext({txtOrderDescription_validation: true})
                        );
                        If(IsEmpty(cbOrdVendor.SelectedItems) || IsBlank(cbOrdVendor.SelectedItems),
                        UpdateContext({cbOrdVendor_validation: false}),
                        UpdateContext({cbOrdVendor_validation: true})
                        );
                        If(IsEmpty(cbOrdRequestor.SelectedItems) || IsBlank(cbOrdRequestor.SelectedItems),
                        UpdateContext({cbOrdRequestor_validation: false}),
                        UpdateContext({cbOrdRequestor_validation: true})
                        );
                        If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                        UpdateContext({cbOrdDepartment_validation: false}),
                        UpdateContext({cbOrdDepartment_validation: true})
                        );
                        If(IsBlank(txtOrdBudgetOwner.Text),
                        UpdateContext({txtOrdBudgetOwner_validation: false}),
                        UpdateContext({txtOrdBudgetOwner_validation: true})
                        );
                        If(IsEmpty(cbOrderOrderer.SelectedItems) || IsBlank(cbOrderOrderer.SelectedItems),
                        UpdateContext({cbOrderOrderer_validation: false}),
                        UpdateContext({cbOrderOrderer_validation: true})
                        );
                        If(IsBlank(txtOrderRecipient.Text),
                        UpdateContext({txtOrderRecipient_validation: false}),
                        UpdateContext({txtOrderRecipient_validation: true})
                        );
                        If(IsBlank(txtlblOrderDescriptionDetailed.Text),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: false}),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: true})
                        );
                        /*If(IsEmpty(cbWatchers.SelectedItems) || IsBlank(cbWatchers.SelectedItems),
                        UpdateContext({cbWatchers_validation: false}),
                        UpdateContext({cbWatchers_validation: true})
                        );*/
                        /*If(IsBlank(txtOrderOrdLogEventDescription.Text),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                        );*/
                
                        If(CountRows(glrOrderItems.AllItems) < 1,
                        UpdateContext({OrderItems_validation: false}),
                        UpdateContext({OrderItems_validation: true})
                        );
                
                        If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                            Set(cbOrderOrdererValue,BlankPeople),
                            Set(cbOrderOrdererValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                                Email:First(cbOrderOrderer.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                            Set(cbOrdRequestorValue,BlankPeople),
                            Set(cbOrdRequestorValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                                Department:"",
                                DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                                Email:First(cbOrdRequestor.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Set(cbOrdBudgetOwnerValue,BlankPeople),
                            Set(cbOrdBudgetOwnerValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                                Department:"",
                                DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                                Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                        Set(cbWatchersValue,BlankPeople);
                        If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                            Set(cbWatchersValue,BlankPeople),
                            
                            Set(cbWatchersValue,
                                ForAll(Filter(cbWatchers.SelectedItems, !IsBlank(Mail) && First(Office365Users.SearchUserV2({searchTerm: ThisRecord.Mail}).value).AccountEnabled), {
                                    '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                    Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                    Department: "",
                                    DisplayName: ThisRecord.DisplayName,
                                    Email: ThisRecord.Mail,
                                    JobTitle: "",
                                    Picture: ""
                                    }
                                )
                            )
                
                        );
                
                        If(
                            txtOrderNumber_validation &&
                            cbOrdLegalEntity_validation &&
                            cbOrdContractNumber_validation &&
                            dpOrderDate_validation &&
                            txtOrderDescription_validation &&
                            cbOrdVendor_validation &&
                            cbOrdRequestor_validation &&
                            cbOrdDepartment_validation &&
                            txtOrdBudgetOwner_validation &&
                            cbOrderOrderer_validation &&
                            txtOrderRecipient_validation &&
                            txtlblOrderDescriptionDetailed_validation &&
                            cbWatchers_validation &&
                            txtOrderOrdLogEventDescription_validation  &&
                            OrderItems_validation,         
                            /*If(((Value(lblTotal.Text) / First(cbOrdLegalEntity.SelectedItems).DMSLegalEntityExchangeRateEUR) > First(cbOrdLegalEntity.SelectedItems).DMSLegalEntityContractOrdValueLimit) && (IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems)),
                                UpdateContext({popUpLimitValidationVisibility: true});,
                                Select(btnYes);
                            );, */
                
                            //v1 validation
                            //UpdateContext({popUpBudgetValidationVisibility_StartApprove: true});
                
                            //v2 validation
                            Refresh(DMSBudgetOrderEval);
                            Refresh(DMSOrderItem);
                            UpdateContext({popUpBudgetValidationV2Visibility_StartApprove: true});
                
                            //UpdateContext({DMS_SystemAction_35_CanvasApp_Response: DMS_SystemAction_35_CanvasApp.Run(txtApprovalCenterWeb.Text,txtListOrderName.Text,OrderSHPItem.ID)});
                            
                            // ------------------ ODKOMENTOVAT V PRIPADE POTREBY OPET ZAPNUTI VLIDACE ------------------
                            /*UpdateContext({popUpBudgetValidationIsRunning: true});
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = OrderSHPItemID),
                                {DMSOrderBudgetCheckTmp: false}
                            );
                            DMS_SystemAction_35_CanvasApp.Run(txtApprovalCenterWeb.Text,txtListOrderName.Text,OrderSHPItem.ID);*/
                            // ------------------ ODKOMENTOVAT V PRIPADE POTREBY OPET ZAPNUTI VLIDACE ------------------
                
                            ,
                            Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                        );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdStartApproval" && Language=SelectedLanguage,String)
            Visible: =(customFormMode = FormMode.Edit && (OrderSHPItem.'Actual Phase' = "10")) || customFormMode = FormMode.New
            Width: =199
            X: =405
            Y: =18
            ZIndex: =4

        btnOrdDelegate As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpDelegateToVisibility: true});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdDelegate" && Language=SelectedLanguage,String)
            Visible: =CountRows(OrderSHPItem.'Actual Owner') < 2
            X: =838
            Y: =18
            ZIndex: =6

        btnOrdApprove As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtOrderNumber.Text),
                   UpdateContext({txtOrderNumber_validation: false}),
                   UpdateContext({txtOrderNumber_validation: true})
                );
                If(IsEmpty(cbOrdLegalEntity.SelectedItems) || IsBlank(cbOrdLegalEntity.SelectedItems),
                   UpdateContext({cbOrdLegalEntity_validation: false}),
                   UpdateContext({cbOrdLegalEntity_validation: true})
                );
                /*If(IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems),
                   UpdateContext({cbOrdContractNumber_validation: false}),
                   UpdateContext({cbOrdContractNumber_validation: true})
                );*/
                If(IsBlank(dpOrderDate.Value),
                   UpdateContext({dpOrderDate_validation: false}),
                   UpdateContext({dpOrderDate_validation: true})
                );
                If(IsBlank(txtOrderDescription.Text),
                   UpdateContext({txtOrderDescription_validation: false}),
                   UpdateContext({txtOrderDescription_validation: true})
                );
                If(IsEmpty(cbOrdVendor.SelectedItems) || IsBlank(cbOrdVendor.SelectedItems),
                   UpdateContext({cbOrdVendor_validation: false}),
                   UpdateContext({cbOrdVendor_validation: true})
                );
                If(IsEmpty(cbOrdRequestor.SelectedItems) || IsBlank(cbOrdRequestor.SelectedItems),
                   UpdateContext({cbOrdRequestor_validation: false}),
                   UpdateContext({cbOrdRequestor_validation: true})
                );
                If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                   UpdateContext({cbOrdDepartment_validation: false}),
                   UpdateContext({cbOrdDepartment_validation: true})
                );
                If(IsBlank(txtOrdBudgetOwner.Text),
                   UpdateContext({txtOrdBudgetOwner_validation: false}),
                   UpdateContext({txtOrdBudgetOwner_validation: true})
                );
                If(IsEmpty(cbOrderOrderer.SelectedItems) || IsBlank(cbOrderOrderer.SelectedItems),
                   UpdateContext({cbOrderOrderer_validation: false}),
                   UpdateContext({cbOrderOrderer_validation: true})
                );
                If(IsBlank(txtOrderRecipient.Text),
                   UpdateContext({txtOrderRecipient_validation: false}),
                   UpdateContext({txtOrderRecipient_validation: true})
                );
                If(IsBlank(txtlblOrderDescriptionDetailed.Text),
                   UpdateContext({txtlblOrderDescriptionDetailed_validation: false}),
                   UpdateContext({txtlblOrderDescriptionDetailed_validation: true})
                );
                /*If(IsEmpty(cbWatchers.SelectedItems) || IsBlank(cbWatchers.SelectedItems),
                   UpdateContext({cbWatchers_validation: false}),
                   UpdateContext({cbWatchers_validation: true})
                );*/
                /*If(IsBlank(txtOrderOrdLogEventDescription.Text),
                   UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                   UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                );*/
                
                If(CountRows(glrOrderItems.AllItems) < 1,
                   UpdateContext({OrderItems_validation: false}),
                   UpdateContext({OrderItems_validation: true})
                );
                
                If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                    Set(cbOrderOrdererValue,BlankPeople),
                    Set(cbOrderOrdererValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                        Department:"",
                        DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                        Email:First(cbOrderOrderer.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                    Set(cbOrdRequestorValue,BlankPeople),
                    Set(cbOrdRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                        Department:"",
                        DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                        Email:First(cbOrdRequestor.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                    Set(cbOrdBudgetOwnerValue,BlankPeople),
                    Set(cbOrdBudgetOwnerValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Department:"",
                        DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                        Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                Set(cbWatchersValue,BlankPeople);
                If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                    Set(cbWatchersValue,BlankPeople),
                    
                    Set(cbWatchersValue,
                        ForAll(Filter(cbWatchers.SelectedItems, !IsBlank(Mail) && First(Office365Users.SearchUserV2({searchTerm: ThisRecord.Mail}).value).AccountEnabled), {
                            '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                            Department: "",
                            DisplayName: ThisRecord.DisplayName,
                            Email: ThisRecord.Mail,
                            JobTitle: "",
                            Picture: ""
                            }
                        )
                    )
                
                );
                
                If(
                    txtOrderNumber_validation &&
                    cbOrdLegalEntity_validation &&
                    cbOrdContractNumber_validation &&
                    dpOrderDate_validation &&
                    txtOrderDescription_validation &&
                    cbOrdVendor_validation &&
                    cbOrdRequestor_validation &&
                    cbOrdDepartment_validation &&
                    txtOrdBudgetOwner_validation &&
                    cbOrderOrderer_validation &&
                    txtOrderRecipient_validation &&
                    txtlblOrderDescriptionDetailed_validation &&
                    cbWatchers_validation &&
                    txtOrderOrdLogEventDescription_validation,
                    Refresh(DMSOrder); 
                    Set(NewOrderSHPItem,
                        Patch(
                            DMSOrder,
                            If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                            {'Budget Owner':cbOrdBudgetOwnerValue},
                            {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                            {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                            {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                            {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                            {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                            {'Order Amount Actual':totalLocal},
                            {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                            {'Order Amount Original':totalLocal},
                            {'Order Date':dpOrderDate.Value},
                            {Description:txtlblOrderDescriptionDetailed.Text},
                            {'In Budget':cbInBudget.Value},
                            {'Order Number':txtOrderNumber.Text},
                            {Orderer:cbOrderOrdererValue},
                            {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                            {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                            {Recipient:txtOrderRecipient.Text},
                            {Requestor:cbOrdRequestorValue},
                            {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                            {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                            {Summary:txtOrderDescription.Text},
                            {Watchers:cbWatchersValue},
                            //{DMSOrdInvoicesAmount_Approved:},
                            //{DMSOrdInvoicesAmount_Declined:},
                            //{DMSOrdInvoicesAmount_InApproval:},
                            {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                            {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                            {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                            {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                            //{DMSOrdProcessEyesCount:},
                            //{DMSOrdProcessNextOwner:},
                            //{DMSOrdProcessNextOwnerEMail:},
                            //{DMSOrdProcessNextOwnerName:},
                            {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                            //{DMSOrdProcessPreviousOwner:},
                            //{DMSOrdProcessPreviousOwnerEMail:},
                            //{DMSOrdProcessPreviousOwnerName:},
                            //{DMSOrdProcessPreviousPhase:},
                            {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                            {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                            {Ordered:cbOrderOrdered.Value},
                            {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                            {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                        );        
                    );	
                	
                    If(customFormMode = FormMode.New,  
                        Patch(
                            DMSOrder,
                            LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                            {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                            {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                        );
                        Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                        Set(customFormMode, FormMode.Edit);
                        Reset(txtOrderNumber);
                    );
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                    
                    // APPROVE
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                		{'Order Action Date':Now()},
                		{'Order Action Description':txtOrderOrdLogEventDescription.Text},
                		{'Order Action Required':"START APPROVE"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email},
                        {'Approved By':Collect(NewOrderSHPItem.'Approved By',SHPMeClaim)}
                	);
                    Select(btnAmountsHelper);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationApproved" && Language=SelectedLanguage,String),NotificationType.Success);
                    Select(btnAmountsHelper);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdApprove" && Language=SelectedLanguage,String)
            Visible: |-
                =customFormMode = FormMode.Edit && (
                    OrderSHPItem.'Actual Phase' = "30" || 
                    OrderSHPItem.'Actual Phase' = "40" || 
                    OrderSHPItem.'Actual Phase' = "50" ||
                    OrderSHPItem.'Actual Phase' = "55" ||
                    OrderSHPItem.'Actual Phase' = "60" || 
                    OrderSHPItem.'Actual Phase' = "70" || 
                    OrderSHPItem.'Actual Phase' = "80"
                )
            X: =1016
            Y: =18
            ZIndex: =7

        btnOrdReject As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtOrderOrdLogEventDescription.Text),
                   UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                   UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                );
                If(IsBlank(txtOrderNumber.Text),
                   UpdateContext({txtOrderNumber_validation: false}),
                   UpdateContext({txtOrderNumber_validation: true})
                );
                If(IsEmpty(cbOrdLegalEntity.SelectedItems) || IsBlank(cbOrdLegalEntity.SelectedItems),
                   UpdateContext({cbOrdLegalEntity_validation: false}),
                   UpdateContext({cbOrdLegalEntity_validation: true})
                );
                /*If(IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems),
                   UpdateContext({cbOrdContractNumber_validation: false}),
                   UpdateContext({cbOrdContractNumber_validation: true})
                );*/
                If(IsBlank(dpOrderDate.Value),
                   UpdateContext({dpOrderDate_validation: false}),
                   UpdateContext({dpOrderDate_validation: true})
                );
                If(IsBlank(txtOrderDescription.Text),
                   UpdateContext({txtOrderDescription_validation: false}),
                   UpdateContext({txtOrderDescription_validation: true})
                );
                If(IsEmpty(cbOrdVendor.SelectedItems) || IsBlank(cbOrdVendor.SelectedItems),
                   UpdateContext({cbOrdVendor_validation: false}),
                   UpdateContext({cbOrdVendor_validation: true})
                );
                If(IsEmpty(cbOrdRequestor.SelectedItems) || IsBlank(cbOrdRequestor.SelectedItems),
                   UpdateContext({cbOrdRequestor_validation: false}),
                   UpdateContext({cbOrdRequestor_validation: true})
                );
                If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                   UpdateContext({cbOrdDepartment_validation: false}),
                   UpdateContext({cbOrdDepartment_validation: true})
                );
                If(IsBlank(txtOrdBudgetOwner.Text),
                   UpdateContext({txtOrdBudgetOwner_validation: false}),
                   UpdateContext({txtOrdBudgetOwner_validation: true})
                );
                If(IsEmpty(cbOrderOrderer.SelectedItems) || IsBlank(cbOrderOrderer.SelectedItems),
                   UpdateContext({cbOrderOrderer_validation: false}),
                   UpdateContext({cbOrderOrderer_validation: true})
                );
                If(IsBlank(txtOrderRecipient.Text),
                   UpdateContext({txtOrderRecipient_validation: false}),
                   UpdateContext({txtOrderRecipient_validation: true})
                );
                If(IsBlank(txtlblOrderDescriptionDetailed.Text),
                   UpdateContext({txtlblOrderDescriptionDetailed_validation: false}),
                   UpdateContext({txtlblOrderDescriptionDetailed_validation: true})
                );
                /*If(IsEmpty(cbWatchers.SelectedItems) || IsBlank(cbWatchers.SelectedItems),
                   UpdateContext({cbWatchers_validation: false}),
                   UpdateContext({cbWatchers_validation: true})
                );*/
                /*If(IsBlank(txtOrderOrdLogEventDescription.Text),
                   UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                   UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                );*/
                
                If(CountRows(glrOrderItems.AllItems) < 1,
                   UpdateContext({OrderItems_validation: false}),
                   UpdateContext({OrderItems_validation: true})
                );
                
                If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                    Set(cbOrderOrdererValue,BlankPeople),
                    Set(cbOrderOrdererValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                        Department:"",
                        DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                        Email:First(cbOrderOrderer.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                    Set(cbOrdRequestorValue,BlankPeople),
                    Set(cbOrdRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                        Department:"",
                        DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                        Email:First(cbOrdRequestor.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                    Set(cbOrdBudgetOwnerValue,BlankPeople),
                    Set(cbOrdBudgetOwnerValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Department:"",
                        DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                        Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                Set(cbWatchersValue,BlankPeople);
                If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                    Set(cbWatchersValue,BlankPeople),
                    
                    Set(cbWatchersValue,
                        ForAll(Filter(cbWatchers.SelectedItems, !IsBlank(Mail) && First(Office365Users.SearchUserV2({searchTerm: ThisRecord.Mail}).value).AccountEnabled), {
                            '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                            Department: "",
                            DisplayName: ThisRecord.DisplayName,
                            Email: ThisRecord.Mail,
                            JobTitle: "",
                            Picture: ""
                            }
                        )
                    )
                
                );
                
                If(
                    txtOrderNumber_validation &&
                    cbOrdLegalEntity_validation &&
                    cbOrdContractNumber_validation &&
                    dpOrderDate_validation &&
                    txtOrderDescription_validation &&
                    cbOrdVendor_validation &&
                    cbOrdRequestor_validation &&
                    cbOrdDepartment_validation &&
                    txtOrdBudgetOwner_validation &&
                    cbOrderOrderer_validation &&
                    txtOrderRecipient_validation &&
                    txtlblOrderDescriptionDetailed_validation &&
                    cbWatchers_validation &&
                    txtOrderOrdLogEventDescription_validation,
                    Refresh(DMSOrder);      
                    Set(NewOrderSHPItem,
                        Patch(
                            DMSOrder,
                            If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                            {'Budget Owner':cbOrdBudgetOwnerValue},
                            {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                            {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                            {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                            {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                            {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                            {'Order Amount Actual':totalLocal},
                            {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                            {'Order Amount Original':totalLocal},
                            {'Order Date':dpOrderDate.Value},
                            {Description:txtlblOrderDescriptionDetailed.Text},
                            {'In Budget':cbInBudget.Value},
                            {'Order Number':txtOrderNumber.Text},
                            {Orderer:cbOrderOrdererValue},
                            {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                            {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                            {Recipient:txtOrderRecipient.Text},
                            {Requestor:cbOrdRequestorValue},
                            {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                            {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                            {Summary:txtOrderDescription.Text},
                            {Watchers:cbWatchersValue},
                            //{DMSOrdInvoicesAmount_Approved:},
                            //{DMSOrdInvoicesAmount_Declined:},
                            //{DMSOrdInvoicesAmount_InApproval:},
                            {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                            {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                            {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                            {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                            //{DMSOrdProcessEyesCount:},
                            //{DMSOrdProcessNextOwner:},
                            //{DMSOrdProcessNextOwnerEMail:},
                            //{DMSOrdProcessNextOwnerName:},
                            {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                            //{DMSOrdProcessPreviousOwner:},
                            //{DMSOrdProcessPreviousOwnerEMail:},
                            //{DMSOrdProcessPreviousOwnerName:},
                            //{DMSOrdProcessPreviousPhase:},
                            {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                            {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                            {Ordered:cbOrderOrdered.Value},
                            {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                            {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                        );        
                    );	
                	
                    If(customFormMode = FormMode.New,  
                        Patch(
                            DMSOrder,
                            LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                            {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                            {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                        );
                        Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                        Set(customFormMode, FormMode.Edit);
                        Reset(txtOrderNumber);
                    );
                
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                    
                    // DECLINE
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                		{'Order Action Date':Now()},
                		{'Order Action Description':txtOrderOrdLogEventDescription.Text},
                		{'Order Action Required':"START DECLINE"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email}
                	);
                    Select(btnAmountsHelper);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationDecline" && Language=SelectedLanguage,String),NotificationType.Success);
                    Select(btnAmountsHelper);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdReject" && Language=SelectedLanguage,String)
            Visible: |-
                =customFormMode = FormMode.Edit && (
                    OrderSHPItem.'Actual Phase' = "30" || 
                    OrderSHPItem.'Actual Phase' = "40" || 
                    OrderSHPItem.'Actual Phase' = "50" ||
                    OrderSHPItem.'Actual Phase' = "55" ||
                    OrderSHPItem.'Actual Phase' = "60" || 
                    OrderSHPItem.'Actual Phase' = "70" || 
                    OrderSHPItem.'Actual Phase' = "80"
                )
            X: =1188
            Y: =18
            ZIndex: =8

        btnOrdGenerateOrder As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                    Set(cbOrderOrdererValue,BlankPeople),
                    Set(cbOrderOrdererValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                        Department:"",
                        DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                        Email:First(cbOrderOrderer.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                    Set(cbOrdRequestorValue,BlankPeople),
                    Set(cbOrdRequestorValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                        Department:"",
                        DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                        Email:First(cbOrdRequestor.SelectedItems).Mail,
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                
                If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                    Set(cbOrdBudgetOwnerValue,BlankPeople),
                    Set(cbOrdBudgetOwnerValue,
                        Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                        Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Department:"",
                        DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                        Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                        JobTitle:".",
                        Picture:"."})
                    )
                );
                Set(cbWatchersValue,BlankPeople);
                If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                    Set(cbWatchersValue,BlankPeople),
                    
                    Set(cbWatchersValue,
                        ForAll(Filter(cbWatchers.SelectedItems, !IsBlank(Mail) && First(Office365Users.SearchUserV2({searchTerm: ThisRecord.Mail}).value).AccountEnabled), {
                            '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                            Department: "",
                            DisplayName: ThisRecord.DisplayName,
                            Email: ThisRecord.Mail,
                            JobTitle: "",
                            Picture: ""
                            }
                        )
                    )
                
                );
                
                Set(NewOrderSHPItem,
                    Patch(
                        DMSOrder,
                        Defaults(DMSOrder),
                        {Title: "ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000")},
                        {'Budget Owner':cbOrdBudgetOwnerValue},
                        {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                        {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                        {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                        {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                        {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                        {'Order Amount Actual':0},
                        {'Order Amount Difference':0},
                        {'Order Amount Original':0},
                        //{DMSOrderDate:dpOrderDate.Value},
                        {'Order Date':Today()},
                        {Description:"COPY: " & txtlblOrderDescriptionDetailed.Text},
                        {'In Budget':cbInBudget.Value},
                        {'Order Number':txtOrderNumber.Text},
                        {Orderer:cbOrderOrdererValue},
                        {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                        {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                        {Recipient:txtOrderRecipient.Text},
                        {Requestor:cbOrdRequestorValue},
                        {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                        {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                        {Summary:txtOrderDescription.Text},
                        {Watchers:cbWatchersValue},
                        //{DMSOrdInvoicesAmount_Approved:},
                        //{DMSOrdInvoicesAmount_Declined:},
                        //{DMSOrdInvoicesAmount_InApproval:},
                        {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                        {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                        {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                        {'Actual Owner':Table(SHPMeClaim)},
                        {'Actual Owner E-mail':SHPMeClaim.Email},
                        {'Actual Owner Name':SHPMeClaim.DisplayName},
                        {'Actual Phase':"10"},
                        //{DMSOrdProcessEyesCount:},
                        //{DMSOrdProcessNextOwner:},
                        //{DMSOrdProcessNextOwnerEMail:},
                        //{DMSOrdProcessNextOwnerName:},
                        {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                        //{DMSOrdProcessPreviousOwner:},
                        //{DMSOrdProcessPreviousOwnerEMail:},
                        //{DMSOrdProcessPreviousOwnerName:},
                        //{DMSOrdProcessPreviousPhase:},
                        {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                        {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                        {'Budget Owner Equals Orderer':First(cbOrdBudgetOwnerValue).Email = First(cbOrdRequestorValue).Email}//,
                        //{DMSOrderOrdered:cbOrderOrdered.Value},
                        //{DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                        //{DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                    );        
                );
                
                Patch(
                    DMSOrder,
                    LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                    {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                    {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                );
                
                
                //GENEROvání položek
                ForAll(
                    Filter(
                        AddColumns(Filter(DMSOrderItem,(DMSOrdItemOrderID = OrderSHPItem.ID)),"TempRozdil",DMSOrdItemAmountActual - DMSOrdItemInvAmount_Approved),
                        (DMSOrdItemAmountActual > 0) && (TempRozdil > 0)
                    ),
                    Patch(
                        DMSOrderItem,
                        Defaults(DMSOrderItem),
                        {Title: NewOrderSHPItem.'Order Number'},
                        {DMSOrdItemDeliverablesDue: DMSOrdItemDeliverablesDue},
                        {DMSOrdItemDescription: DMSOrdItemDescription},
                        {DMSOrdItemDepartmentCode: DMSOrdItemDepartmentCode},
                        {DMSOrdItemLegalEntityCode: DMSOrdItemLegalEntityCode},
                        {DMSOrdItemAmountActual: TempRozdil},
                        {DMSOrdItemAmountDifference:0},
                        {DMSOrdItemAmountOriginal:TempRozdil},
                        {DMSOrdItemOrderID: NewOrderSHPItem.ID},
                        {DMSOrdItemOrderNumber: DMSOrdItemOrderNumber},
                        {DMSOrdItemBudgetCategoryCode: DMSOrdItemBudgetCategoryCode},
                        {DMSOrdItemBudgetCategoryTitle: DMSOrdItemBudgetCategoryTitle},
                        {DMSOrdItemBudgetItemCode: DMSOrdItemBudgetItemCode},
                        {DMSOrdItemBudgetItemTitle: DMSOrdItemBudgetItemTitle},
                        {DMSOrdItemProfitCenterCode: DMSOrdItemProfitCenterCode},
                        {DMSOrdItemProfitCenterTitle: DMSOrdItemProfitCenterTitle}
                    );
                );
                
                /*Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                Set(OrderSHPItemID,NewOrderSHPItem.ID);
                Set(customFormMode, FormMode.Edit);
                Reset(txtOrderNumber); */
                
                //Select(btnAmountsHelper);
                Reset(txtOrderOrdLogEventDescription);
                Refresh(DMSOrderProcessLog);
                Notify(LookUp(StringsProcess,AppKey="NotificationOrderGenerated" && Language=SelectedLanguage,String) & " " & LookUp(DMSOrder,ID = NewOrderSHPItem.ID).'Order Number',NotificationType.Success);
                //Otevřít novou objednávku na nové kartě:
                Launch("https://apps.powerapps.com/play/" & txtAPPID.Text & "?tenantId=" & txtTenantID.Text & "&screen=1&formmode=0&itemid=" & NewOrderSHPItem.ID);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnGenerateOrder" && Language=SelectedLanguage,String)
            Visible: =customFormMode = FormMode.Edit && (OrderSHPItem.'Actual Phase' = "100") //|| "ocko" in User().Email
            Width: =243
            X: =580
            Y: =18
            ZIndex: =9

        btnReopenPopUp As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpReopenVisibility: true});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnReopenPopUp" && Language=SelectedLanguage,String)
            Visible: =(customFormMode = FormMode.Edit && (OrderSHPItem.'Actual Phase' = "99"))
            Width: =247
            X: =1016
            Y: =18
            ZIndex: =10

        btnCloseOrderPopUp As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpCloseOrderVisibility: true});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnCloseOrderPopUp" && Language=SelectedLanguage,String)
            Visible: =(customFormMode = FormMode.Edit && (OrderSHPItem.'Actual Phase' = "100" && !OrderSHPItem.DMSOrderClosed))
            Width: =215
            X: =1016
            Y: =18
            ZIndex: =11

        btnOrdCreateInvoice As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: |-
                =//If(SHPMeClaim.Email in OrderSHPItem.'Actual Owner E-mail' || customFormMode = FormMode.New || AdminMode; DisplayMode.Edit;DisplayMode.Disabled)
                
                If((SHPMeClaim.Email in LookUp(DMSLegalEntity,CurrentLegalEntity = 'Legal Entity Code','Invoice Processor E-mail') || SHPMeClaim.Email in LookUp(DMSLegalEntity,CurrentLegalEntity = 'Legal Entity Code','SysUser E-mail')) || customFormMode = FormMode.New || AdminMode, DisplayMode.Edit,DisplayMode.Disabled)
                
                //If(SHPMeClaim.Email in DMSLegalEntity.'Account E-mail' || customFormMode = FormMode.New || AdminMode; DisplayMode.Edit;DisplayMode.Disabled)
                //If(((SHPMeClaim.Email in DMSLegalEntity.'Account E-mail') && (CurrentLegalEntity in DMSLegalEntity.'Legal Entity Code')) || customFormMode = FormMode.New || AdminMode; DisplayMode.Edit;DisplayMode.Disabled)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |
                =Set(TempInvoiceSHPItem,Defaults(DMSInvoice));
                
                Set(TempInvoiceSHPItem,
                    Patch(
                        TempInvoiceSHPItem,        
                        {'Order Number': txtOrderNumber.Text},
                        {DMSInvNote: Blank()},
                        {DMSInvOrderID:LookUp(DMSOrder, 'Order Number' = txtOrderNumber.Text).ID}
                    );
                );
                
                If(!IsBlankOrError(TempInvoiceSHPItem),
                    Set(InvoiceSHPItem,TempInvoiceSHPItem);
                    Set(generateInvoiceFromOrder,true); // je potřeba na onStart nastavit na false, stejně tak po uložení faktury
                    Set(customFormMode,FormMode.New);
                    Navigate(scrInvoices);
                );
                
                
                //LookUp(DMSOrder; ID = InvoiceSHPItem.'Order ID')
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdCreateInvoice" && Language=SelectedLanguage,String)
            Visible: |-
                =OrderSHPItem.'Actual Phase' = "100"
                 && OrderSHPItem.DMSOrderAmountRemainingCalcByFlow > 0
                
                /*customFormMode = FormMode.Edit && (
                    OrderSHPItem.'Actual Phase' = "100"
                ) && OrderSHPItem.DMSOrderAmountRemainingCalcByFlow > 0
                */
            X: =402
            Y: =18
            ZIndex: =12

    popUpItemOrderRepeated As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpOrderItemRepeatedVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =3

        popUpItemBody_2 As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =627
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

            txtOrderItemAmount_1 As text:
                BorderColor: =If(txtOrderItemAmount_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                Default: =popUporderItem.DMSOrdItemAmountActual
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Format: =TextFormat.Number
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =214
                Y: =60
                ZIndex: =1

            lblOrderItemAmount_2 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblAmount" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =60
                ZIndex: =2

            txtOrderItemDescription_1 As text:
                BorderColor: =If(txtOrderItemDescription_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                Default: =popUporderItem.DMSOrdItemDescription
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =170
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =txtOrderItemAmount_1.X
                Y: =260
                ZIndex: =3

            lblOrderItemDescription_2 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemDescription" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_2.X
                Y: =260
                ZIndex: =4

            lblOrderItemProfitCenter_2 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemProfitCenter" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_2.X
                Y: =110
                ZIndex: =5

            lblOrderItemBudgetCategory_2 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemBudgetCategory" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_2.X
                Y: =160
                ZIndex: =6

            lblOrderItemBudgetItem_2 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemBudgetItem" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount_2.X
                Y: =210
                ZIndex: =7

            cbOrderItemBudgetCategory_1 As combobox:
                BorderColor: =If(cbOrderItemBudgetCategory_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =/*If(popUpOrderItemFormMode = FormMode.Edit,
                        RenameColumns(Filter(DMSBudget,DMSBudgetCategoryCode=popUporderItem.DMSOrdItemBudgetCategoryCode).DMSBudgetCategoryCode,"DMSBudgetCategoryCode","Result")
                    )*/
                    
                    If(popUpOrderItemFormMode = FormMode.Edit && ItemBCNotChanged,
                        Filter(
                            AddColumns(
                                Distinct(
                                    Filter(
                                        DMSBudget,
                                        'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                        'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                        (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                        (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                                    )
                                ,'Budget Category Code'
                                ),
                                "DMSBudgetCategoryTitle",
                                With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Category Code' = nakakat).'Budget Category Title' )
                            ),
                            Result = popUporderItem.DMSOrdItemBudgetCategoryCode
                        )
                    )
                DisplayFields: =["DMSBudgetCategoryTitle"]
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                Items: |-
                    =AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            )
                        ,'Budget Category Code'
                        ),
                        "DMSBudgetCategoryTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Category Code' = nakakat).'Budget Category Title' )
                    )
                OnChange: |
                    =UpdateContext({BudgetItemHelper_BC: First(Self.SelectedItems)});
                OnSelect: |-
                    =UpdateContext({ItemBCNotChanged: false});
                SearchFields: =["DMSBudgetCategoryTitle"]
                SearchItems: |-
                    =Search(AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            )
                        ,'Budget Category Code'
                        ),
                        "DMSBudgetCategoryTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Category Code' = nakakat).'Budget Category Title' )
                    ),cbOrderItemBudgetCategory_1.SearchText,"DMSBudgetCategoryTitle")
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =160
                ZIndex: =10

            cbOrderItemBudgetItem_1 As combobox:
                BorderColor: =If(cbOrderItemBudgetItem_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =/*If(popUpOrderItemFormMode = FormMode.Edit,
                        RenameColumns(Filter(DMSBudget,DMSBudgetItemCode=popUporderItem.DMSOrdItemBudgetItemCode).DMSBudgetItemCode,"DMSBudgetItemCode","Result")
                    )*/
                    If(popUpOrderItemFormMode = FormMode.Edit && ItemBINotChanged,
                        Filter(
                            AddColumns(
                                Distinct(
                                    Filter(
                                        DMSBudget,
                                        'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                        'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                        (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                        (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result)
                                    )
                                    ,'Budget Item Code'
                                ),
                                "DMSBudgetItemTitle",
                                With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Item Code' = nakakat).'Budget Item Title' )
                            ),
                            Result=popUporderItem.DMSOrdItemBudgetItemCode
                        )
                    )
                DisplayFields: =["DMSBudgetItemTitle","Result"]
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                Items: |-
                    =AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result)
                            )
                            ,'Budget Item Code'
                        ),
                        "DMSBudgetItemTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Item Code' = nakakat).'Budget Item Title' )
                    )
                OnChange: |-
                    =UpdateContext({BudgetItemHelper_BI: First(Self.SelectedItems)});
                OnSelect: |-
                    =UpdateContext({ItemBINotChanged: false});
                SearchFields: =["DMSBudgetItemTitle"]
                SearchItems: |-
                    =Search(AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result)
                            )
                            ,'Budget Item Code'
                        ),
                        "DMSBudgetItemTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Item Code' = nakakat).'Budget Item Title' )
                    ),cbOrderItemBudgetItem_1.SearchText,"DMSBudgetItemTitle")
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =210
                ZIndex: =11

            cbOrderItemProfitCenter_1 As combobox:
                BorderColor: =If(cbOrderItemProfitCenter_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =/*If(popUpOrderItemFormMode = FormMode.Edit,
                        RenameColumns(Filter(DMSBudget,DMSBudgetProfitCenterCode=popUporderItem.DMSOrdItemProfitCenterCode).DMSBudgetProfitCenterCode,"DMSBudgetProfitCenterCode","Result")
                    )*/
                    If(popUpOrderItemFormMode = FormMode.Edit && ItemPCNotChanged,
                        Filter(AddColumns(
                            Distinct(
                                Filter(
                                    DMSBudget,
                                    'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                    'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                    (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result) &&
                                    (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                                ),
                                'Profit Center Code'
                            ),
                            "DMSBudgetProfitCenterTitle",
                            With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Profit Center Code' = nakakat).'Profit Center Title' )
                        ),
                        Result = popUporderItem.DMSOrdItemProfitCenterCode)
                    )
                DisplayFields: =["DMSBudgetProfitCenterTitle"]
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                Items: |-
                    =AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            ),
                            'Profit Center Code'
                        ),
                        "DMSBudgetProfitCenterTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Profit Center Code' = nakakat).'Profit Center Title' )
                    )
                OnChange: |+
                    =UpdateContext({BudgetItemHelper_PC: First(Self.SelectedItems)});
                    
                OnSelect: |-
                    =UpdateContext({ItemPCNotChanged: false});
                SearchFields: =["DMSBudgetProfitCenterTitle"]
                SearchItems: |-
                    =Search(AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            ),
                            'Profit Center Code'
                        ),
                        "DMSBudgetProfitCenterTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Profit Center Code' = nakakat).'Profit Center Title' )
                    ),cbOrderItemProfitCenter_1.SearchText,"DMSBudgetProfitCenterTitle")
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =110
                ZIndex: =12

            lblPC_1 As label:
                BorderThickness: =1
                Text: =BudgetItemHelper_PC.Result
                Visible: =false
                X: =30
                Y: =375
                ZIndex: =15

            lblBC_1 As label:
                BorderThickness: =1
                Text: =BudgetItemHelper_BC.Result
                Visible: =false
                X: =30
                Y: =415
                ZIndex: =16

            lblBI_1 As label:
                BorderThickness: =1
                Text: =BudgetItemHelper_BI.Result
                Visible: =false
                X: =30
                Y: =455
                ZIndex: =17

            popUpItemButtons_3 As groupContainer:
                Fill: =patternColor5.Fill
                Height: =95
                Width: =547
                X: =10
                Y: =455
                ZIndex: =28

                txtOrderItemGeneratedPeriod As text:
                    BorderColor: =If(txtOrderItemGeneratedPeriod_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    Default: =If(IsBlankOrError(popUporderItem.DMSOrdItemAmountActual),1,popUporderItem.DMSOrdItemAmountActual)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    Format: =TextFormat.Number
                    HoverBorderColor: =patternColor4.Fill
                    HoverFill: =ColorFade(patternColor3.Fill, 90%)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =100
                    X: =416
                    Y: =41
                    ZIndex: =1

                dpOrdItemGeneratedFrom As datepicker:
                    BorderColor: =If(dpOrdItemGeneratedFrom_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: |-
                        =If(!IsBlank(dpOrdItemGeneratedFrom_Helper.Value) && !IsEmpty(dpOrdItemGeneratedFrom_Helper.Value),
                            DateAdd(dpOrdItemGeneratedFrom_Helper.Value,-Day(dpOrdItemGeneratedFrom_Helper.Value)+1,Days)
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =White
                    IconFill: =patternColor4.Fill
                    OnChange: =
                    StartOfWeek: =StartOfWeek.Monday
                    StartYear: =2019
                    Visible: =false
                    Width: =170
                    X: =40
                    Y: =1
                    ZIndex: =2

                dpOrdItemGeneratedTo As datepicker:
                    BorderColor: =If(dpOrdItemGeneratedTo_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: |-
                        =If(!IsBlank(dpOrdItemGeneratedTo_Helper.Value) && !IsEmpty(dpOrdItemGeneratedTo_Helper.Value),
                            DateAdd(dpOrdItemGeneratedTo_Helper.Value,-Day(dpOrdItemGeneratedTo_Helper.Value)+1,Days)
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =White
                    IconFill: =patternColor4.Fill
                    OnChange: =
                    StartOfWeek: =StartOfWeek.Monday
                    StartYear: =2019
                    Visible: =false
                    Width: =170
                    X: =224
                    Y: =22
                    ZIndex: =3

                tglOrdGeneratedItemLoopHelper As toggleSwitch:
                    Default: =varLoop
                    OnCheck: |-
                        =Patch(
                            DMSOrderItem,
                            Defaults(DMSOrderItem),
                            {Title: DMSOrderItemTemp.Title},
                            {DMSOrdItemDeliverablesDue: OrdGeneratedDate},
                            {DMSOrdItemDescription: DMSOrderItemTemp.DMSOrdItemDescription},
                            {DMSOrdItemDepartmentCode: DMSOrderItemTemp.DMSOrdItemDepartmentCode},
                            {DMSOrdItemLegalEntityCode: DMSOrderItemTemp.DMSOrdItemLegalEntityCode},
                            {DMSOrdItemAmountActual: DMSOrderItemTemp.DMSOrdItemAmountActual},
                            {DMSOrdItemAmountDifference:DMSOrderItemTemp.DMSOrdItemAmountDifference},
                            {DMSOrdItemAmountOriginal:DMSOrderItemTemp.DMSOrdItemAmountOriginal},
                            {DMSOrdItemOrderID: DMSOrderItemTemp.DMSOrdItemOrderID},
                            {DMSOrdItemOrderNumber: DMSOrderItemTemp.DMSOrdItemOrderNumber},
                            {DMSOrdItemBudgetCategoryCode: DMSOrderItemTemp.DMSOrdItemBudgetCategoryCode},
                            {DMSOrdItemBudgetCategoryTitle: DMSOrderItemTemp.DMSOrdItemBudgetCategoryTitle},
                            {DMSOrdItemBudgetItemCode: DMSOrderItemTemp.DMSOrdItemBudgetItemCode},
                            {DMSOrdItemBudgetItemTitle: DMSOrderItemTemp.DMSOrdItemBudgetItemTitle},
                            {DMSOrdItemProfitCenterCode: DMSOrderItemTemp.DMSOrdItemProfitCenterCode},
                            {DMSOrdItemProfitCenterTitle: DMSOrderItemTemp.DMSOrdItemProfitCenterTitle}
                        );
                        UpdateContext({OrdGeneratedDate: DateAdd(OrdGeneratedDate,OrdGeneratedPeriod,Months)});
                        Select(btnOrdItemsGenerateDates);
                    Visible: =false
                    X: =467
                    Y: =1
                    ZIndex: =5

                lblOrderItemGeneratedFrom As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderItemGeneratedFrom" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =170
                    X: =24
                    Y: =1
                    ZIndex: =6

                lblOrderItemGeneratedTo As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderItemGeneratedTo" && Language=SelectedLanguage,String)
                    Tooltip: =labelSettings.Tooltip
                    Width: =170
                    X: =221
                    ZIndex: =7

                lblOrderItemGeneratedPeriod As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =LookUp(StringsOrder,AppKey="lblOrderItemGeneratedPeriod" && Language=SelectedLanguage,String) & " *"
                    Tooltip: =labelSettings.Tooltip
                    Width: =123
                    X: =416
                    ZIndex: =8

                dpOrdItemGeneratedFrom_Helper_background As datepicker:
                    BorderColor: =If(dpOrdItemGeneratedFrom_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: =
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    IconBackground: =RGBA(237, 237, 237, 1)
                    IconFill: =Transparent
                    InputTextPlaceholder: =
                    Tooltip: =
                    Width: =169
                    X: =24
                    Y: =41
                    ZIndex: =9

                "dpOrdItemGeneratedFrom_Helper As 'Date picker'":
                    AcceptsFocus: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =Font.'Open Sans'
                    FontSize: =0
                    FontWeight: ="normal"
                    Height: =39
                    IconSize: =16
                    InitialPickerDate: =
                    PaddingBottom: =0
                    PaddingTop: =0
                    PCFTeamsTheme: =TeamsTheme.Default
                    ShowGoToToday: =false
                    Value: =Today()
                    Visible: =true
                    Width: =168
                    X: =25
                    Y: =42
                    ZIndex: =10

                dpOrdItemGeneratedFrom_Helper2 As label:
                    Color: =Black
                    Text: =Text(dpOrdItemGeneratedFrom_Helper.Value,"[$-en-US]yyyy/mm")
                    Width: =135
                    X: =24
                    Y: =41
                    ZIndex: =11

                dpOrdItemGeneratedTo_Helper_background As datepicker:
                    BorderColor: =If(dpOrdItemGeneratedTo_validation,patternColor3.Fill,patternColor6.Fill)
                    BorderThickness: =1
                    DefaultDate: =
                    Fill: =RGBA(237, 237, 237, 1)
                    FocusedBorderColor: =patternColor4.Fill
                    FocusedBorderThickness: =1
                    Format: =Today()
                    IconBackground: =RGBA(237, 237, 237, 1)
                    IconFill: =Transparent
                    InputTextPlaceholder: =
                    Tooltip: =
                    Width: =169
                    X: =220
                    Y: =42
                    ZIndex: =12

                "dpOrdItemGeneratedTo_Helper As 'Date picker'":
                    AcceptsFocus: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =Font.'Open Sans'
                    FontSize: =0
                    FontWeight: ="normal"
                    Format: =Today()
                    Height: =39
                    IconSize: =16
                    InitialPickerDate: =
                    PaddingBottom: =0
                    PaddingTop: =0
                    PCFTeamsTheme: =TeamsTheme.Default
                    ShowGoToToday: =false
                    Value: =Today()
                    Visible: =true
                    Width: =168
                    X: =221
                    Y: =43
                    ZIndex: =13

                dpOrdItemGeneratedTo_Helper2 As label:
                    Color: =Black
                    Text: =Text(dpOrdItemGeneratedTo.SelectedDate,"[$-en-US]yyyy/mm")
                    Width: =135
                    X: =221
                    Y: =41
                    ZIndex: =14

        popUpItemButtons_2 As groupContainer:
            Fill: =Transparent
            Height: =62
            Width: =573
            X: =404
            Y: =593
            ZIndex: =3

            btnSaveItem2_2 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |
                    =If(IsEmpty(dpOrdItemGeneratedFrom_Helper.Value),
                       UpdateContext({dpOrdItemGeneratedFrom_validation: false}),
                       UpdateContext({dpOrdItemGeneratedFrom_validation: true})
                    );
                    If(IsBlank(dpOrdItemGeneratedTo_Helper.Value) || dpOrdItemGeneratedTo_Helper.Value < dpOrdItemGeneratedFrom_Helper.Value,
                       UpdateContext({dpOrdItemGeneratedTo_validation: false}),
                       UpdateContext({dpOrdItemGeneratedTo_validation: true})
                    );
                    If(IsBlank(txtOrderItemGeneratedPeriod.Text) || Value(txtOrderItemGeneratedPeriod.Text) < 1,
                       UpdateContext({txtOrderItemGeneratedPeriod_validation: false}),
                       UpdateContext({txtOrderItemGeneratedPeriod_validation: true})
                    );
                    If(IsBlank(txtOrderItemAmount_1.Text),
                       UpdateContext({txtOrderItemAmount_validation: false}),
                       UpdateContext({txtOrderItemAmount_validation: true})
                    );
                    If(IsEmpty(cbOrderItemProfitCenter_1.SelectedItems) || IsBlank(cbOrderItemProfitCenter_1.SelectedItems),
                       UpdateContext({cbOrderItemProfitCenter_validation: false}),
                       UpdateContext({cbOrderItemProfitCenter_validation: true})
                    );
                    If(IsEmpty(cbOrderItemBudgetCategory_1.SelectedItems) || IsBlank(cbOrderItemBudgetCategory_1.SelectedItems),
                       UpdateContext({cbOrderItemBudgetCategory_validation: false}),
                       UpdateContext({cbOrderItemBudgetCategory_validation: true})
                    );
                    If(IsEmpty(cbOrderItemBudgetItem_1.SelectedItems) || IsBlank(cbOrderItemBudgetItem_1.SelectedItems),
                       UpdateContext({cbOrderItemBudgetItem_validation: false}),
                       UpdateContext({cbOrderItemBudgetItem_validation: true})
                    );
                    If(IsBlank(txtOrderItemDescription_1.Text),
                       UpdateContext({txtOrderItemDescription_validation: false}),
                       UpdateContext({txtOrderItemDescription_validation: true})
                    );
                    
                    If(dpOrdItemGeneratedFrom_validation && dpOrdItemGeneratedTo_validation && txtOrderItemGeneratedPeriod_validation && txtOrderItemAmount_validation && cbOrderItemProfitCenter_validation && cbOrderItemBudgetCategory_validation && cbOrderItemBudgetItem_validation && txtOrderItemDescription_validation,
                        UpdateContext({OrdGeneratedDate: dpOrdItemGeneratedFrom.SelectedDate});
                        UpdateContext({OrdGeneratedDateTo: dpOrdItemGeneratedTo.SelectedDate});
                        UpdateContext({OrdGeneratedPeriod: Value(txtOrderItemGeneratedPeriod.Text)});
                        UpdateContext({varLoop: false});
                        Set(
                            DMSOrderItemTemp,
                                {
                                    Title: OrderSHPItem.'Order Number',
                                    DMSOrdItemDescription: txtOrderItemDescription_1.Text,
                                    DMSOrdItemDepartmentCode: First(cbOrdDepartment.SelectedItems).'Cost Center Code',
                                    DMSOrdItemLegalEntityCode: First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code',
                                    DMSOrdItemAmountActual: Value(txtOrderItemAmount_1.Text),
                                    DMSOrdItemAmountDifference:0,
                                    DMSOrdItemAmountOriginal:Value(txtOrderItemAmount_1.Text),
                                    DMSOrdItemInvAmount_Approved:0,
                                    DMSOrdItemOrderID: OrderSHPItem.ID,
                                    DMSOrdItemOrderNumber: OrderSHPItem.'Order Number',
                                    DMSOrdItemBudgetCategoryCode: First(cbOrderItemBudgetCategory_1.SelectedItems).Result,
                                    DMSOrdItemBudgetCategoryTitle: First(cbOrderItemBudgetCategory_1.SelectedItems).DMSBudgetCategoryTitle,
                                    DMSOrdItemBudgetItemCode: First(cbOrderItemBudgetItem_1.SelectedItems).Result,
                                    DMSOrdItemBudgetItemTitle: First(cbOrderItemBudgetItem_1.SelectedItems).DMSBudgetItemTitle,
                                    DMSOrdItemProfitCenterCode: First(cbOrderItemProfitCenter_1.SelectedItems).Result,
                                    DMSOrdItemProfitCenterTitle: First(cbOrderItemProfitCenter_1.SelectedItems).DMSBudgetProfitCenterTitle,
                                    DMSOrdItemProcessActualPhase: OrderSHPItem.'Actual Phase'
                                }
                        );
                        Select(btnOrdItemsGenerateDates);
                        Refresh(DMSOrderProcessLog);
                        UpdateContext({popUpOrderItemRepeatedVisibility: false});
                        UpdateContext({popUpOrderItemOrderNumber: Blank()});
                        Reset(dpOrdItemGeneratedFrom_Helper);
                        Reset(dpOrdItemGeneratedTo_Helper);
                        Reset(dpOrdItemGeneratedFrom);
                        Reset(dpOrdItemGeneratedTo);
                        Reset(txtOrderItemGeneratedPeriod);
                        Reset(txtOrderItemAmount_1);
                        Reset(cbOrderItemProfitCenter_1);
                        Reset(cbOrderItemBudgetCategory_1);
                        Reset(cbOrderItemBudgetItem_1);
                        Reset(txtOrderItemDescription_1);
                        Notify(LookUp(StringsProcess,AppKey="NotificationItemSaved" && Language=SelectedLanguage,String),NotificationType.Success);
                        ,
                        Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                    );
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
                X: =112
                Y: =8
                ZIndex: =3

            btnClose2_2 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpOrderItemRepeatedVisibility: false});
                    UpdateContext({popUpOrderItemOrderNumber: Blank()});
                        Reset(dpOrdItemGeneratedFrom_Helper);
                        Reset(dpOrdItemGeneratedTo_Helper);
                        Reset(dpOrdItemGeneratedFrom);
                        Reset(dpOrdItemGeneratedTo);
                        Reset(txtOrderItemGeneratedPeriod);
                    Reset(txtOrderItemAmount_1);
                    Reset(cbOrderItemProfitCenter_1);
                    Reset(cbOrderItemBudgetCategory_1);
                    Reset(cbOrderItemBudgetItem_1);
                    Reset(txtOrderItemDescription_1);
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
                X: =290
                Y: =8
                ZIndex: =4

            btnOrdItemsGenerateDates As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =If(OrdGeneratedDate <= OrdGeneratedDateTo,
                        UpdateContext({varLoop: true});
                        UpdateContext({varLoop: false});
                    );
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: ="GEN"
                Visible: =false
                Width: =65
                X: =22
                Y: =8
                ZIndex: =5

        popUpItemHeader_2 As groupContainer:
            Fill: =White
            Height: =49
            Width: =573
            X: =404
            Y: =28
            ZIndex: =4

            popUpHeader_12 As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Width: =573
                ZIndex: =1

            popUpLabelOrderItem_12 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsOrder,AppKey="HeaderOrderItemGenerated" && Language=SelectedLanguage,String)
                Width: =573
                ZIndex: =2

    popUpItemOrder As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpOrderItemVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =4

        popUpItemBody As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =627
            Visible: =popUpOrderItemVisibility
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

            txtOrderItemAmount As text:
                BorderColor: =If(txtOrderItemAmount_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                Default: =popUporderItem.DMSOrdItemAmountActual
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Format: =TextFormat.Number
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =214
                Y: =lblOrderItemAmount.Y
                ZIndex: =1

            lblOrderItemAmount As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblAmount" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =110
                ZIndex: =2

            txtOrderItemDescription As text:
                BorderColor: =If(txtOrderItemDescription_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                Default: =popUporderItem.DMSOrdItemDescription
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =170
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =343
                X: =txtOrderItemAmount.X
                Y: =lblOrderItemDescription.Y
                ZIndex: =3

            lblOrderItemDescription As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemDescription" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount.X
                Y: =lblOrderItemAmount.Y + 200
                ZIndex: =4

            lblOrderItemProfitCenter As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemProfitCenter" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount.X
                Y: =lblOrderItemAmount.Y + 50
                ZIndex: =5

            lblOrderItemBudgetCategory As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemBudgetCategory" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount.X
                Y: =lblOrderItemAmount.Y +100
                ZIndex: =6

            lblOrderItemBudgetItem As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrderItemBudgetItem" && Language=SelectedLanguage,String) & " *"
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblOrderItemAmount.X
                Y: =lblOrderItemAmount.Y + 150
                ZIndex: =7

            lblOrdItemDeliverablesDueForm As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrdItemDeliverablesDueHeader" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =60
                ZIndex: =8

            dpOrdItemDeliverablesDueForm As datepicker:
                BorderColor: =If(dpOrdItemDeliverablesDueForm_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                DefaultDate: |-
                    =If(!IsBlank(dpOrdItemDeliverablesDueForm_helper.Value) && !IsEmpty(dpOrdItemDeliverablesDueForm_helper.Value),
                        DateAdd(dpOrdItemDeliverablesDueForm_helper.Value,-Day(dpOrdItemDeliverablesDueForm_helper.Value)+1,Days)
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                IconBackground: =White
                IconFill: =patternColor4.Fill
                OnChange: =
                StartOfWeek: =StartOfWeek.Monday
                StartYear: =2019
                Visible: =false
                Width: =343
                X: =214
                Y: =492
                ZIndex: =9

            cbOrderItemBudgetCategory As combobox:
                BorderColor: =If(cbOrderItemBudgetCategory_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =/*If(popUpOrderItemFormMode = FormMode.Edit,
                        RenameColumns(Filter(DMSBudget,DMSBudgetCategoryCode=popUporderItem.DMSOrdItemBudgetCategoryCode).DMSBudgetCategoryCode,"DMSBudgetCategoryCode","Result")
                    )*/
                    
                    If((popUpOrderItemFormMode = FormMode.Edit || FormMode.View) && ItemBCNotChanged,
                        Filter(
                            AddColumns(
                                Distinct(
                                    Filter(
                                        DMSBudget,
                                        'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                        'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                        (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                        (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                                    )
                                ,'Budget Category Code'
                                ),
                                "DMSBudgetCategoryTitle",
                                With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Category Code' = nakakat).'Budget Category Title' )
                            ),
                            Result = popUporderItem.DMSOrdItemBudgetCategoryCode
                        )
                    )
                DisplayFields: =["DMSBudgetCategoryTitle"]
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                Items: |-
                    =AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            )
                        ,'Budget Category Code'
                        ),
                        "DMSBudgetCategoryTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Category Code' = nakakat).'Budget Category Title' )
                    )
                OnChange: |-
                    =UpdateContext({BudgetItemHelper_BC: First(Self.SelectedItems)});
                OnSelect: |-
                    =UpdateContext({ItemBCNotChanged: false});
                SearchFields: =["DMSBudgetCategoryTitle"]
                SearchItems: |-
                    =Search(AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            )
                        ,'Budget Category Code'
                        ),
                        "DMSBudgetCategoryTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Category Code' = nakakat).'Budget Category Title' )
                    ),cbOrderItemBudgetCategory.SearchText,"DMSBudgetCategoryTitle")
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =210
                ZIndex: =10

            cbOrderItemBudgetItem As combobox:
                BorderColor: =If(cbOrderItemBudgetItem_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =/*If(popUpOrderItemFormMode = FormMode.Edit,
                        RenameColumns(Filter(DMSBudget,DMSBudgetItemCode=popUporderItem.DMSOrdItemBudgetItemCode).DMSBudgetItemCode,"DMSBudgetItemCode","Result")
                    )*/
                    If((popUpOrderItemFormMode = FormMode.Edit || FormMode.View) && ItemBINotChanged,
                        Filter(
                            AddColumns(
                                Distinct(
                                    Filter(
                                        DMSBudget,
                                        'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                        'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                        (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                        (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result)
                                    )
                                    ,'Budget Item Code'
                                ),
                                "DMSBudgetItemTitle",
                                With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Item Code' = nakakat).'Budget Item Title' )
                            ),
                            Result=popUporderItem.DMSOrdItemBudgetItemCode
                        )
                    )
                DisplayFields: =["DMSBudgetItemTitle","Result"]
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                Items: |-
                    =AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result)
                            )
                            ,'Budget Item Code'
                        ),
                        "DMSBudgetItemTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Item Code' = nakakat).'Budget Item Title' )
                    )
                OnChange: |-
                    =UpdateContext({BudgetItemHelper_BI: First(Self.SelectedItems)});
                OnSelect: |-
                    =UpdateContext({ItemBINotChanged: false});
                SearchFields: =["DMSBudgetItemTitle"]
                SearchItems: |-
                    =Search(AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_PC) || 'Profit Center Code' = BudgetItemHelper_PC.Result) &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result)
                            )
                            ,'Budget Item Code'
                        ),
                        "DMSBudgetItemTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Budget Item Code' = nakakat).'Budget Item Title' )
                    ),cbOrderItemBudgetItem.SearchText,"DMSBudgetItemTitle")
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =260
                ZIndex: =11

            cbOrderItemProfitCenter As combobox:
                BorderColor: =If(cbOrderItemProfitCenter_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                ChevronBackground: =
                ChevronFill: =patternColor1.Fill
                ChevronHoverBackground: =patternColor4.Fill
                DefaultSelectedItems: |-
                    =/*If(popUpOrderItemFormMode = FormMode.Edit,
                        RenameColumns(Filter(DMSBudget,DMSBudgetProfitCenterCode=popUporderItem.DMSOrdItemProfitCenterCode).DMSBudgetProfitCenterCode,"DMSBudgetProfitCenterCode","Result")
                    )*/
                    
                        If((popUpOrderItemFormMode = FormMode.Edit || FormMode.View)  && ItemPCNotChanged,
                            Filter(AddColumns(
                                Distinct(
                                    Filter(
                                        DMSBudget,
                                        'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                        'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                        (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result) &&
                                        (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                                    ),
                                    'Profit Center Code'
                                ),
                                "DMSBudgetProfitCenterTitle",
                                With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Profit Center Code' = nakakat).'Profit Center Title' )
                            ),
                            Result = popUporderItem.DMSOrdItemProfitCenterCode)
                        )
                DisplayFields: =["DMSBudgetProfitCenterTitle"]
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
                Items: |-
                    =AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            ),
                            'Profit Center Code'
                        ),
                        "DMSBudgetProfitCenterTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Profit Center Code' = nakakat).'Profit Center Title' )
                    )
                OnChange: |-
                    =UpdateContext({BudgetItemHelper_PC: First(Self.SelectedItems)});
                OnSelect: |-
                    =UpdateContext({ItemPCNotChanged: false});
                SearchFields: =["DMSBudgetProfitCenterTitle"]
                SearchItems: |-
                    =Search(AddColumns(
                        Distinct(
                            Filter(
                                DMSBudget,
                                'Legal Entity Code' = First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code' && 
                                'Department Code' = First(cbOrdDepartment.SelectedItems).'Cost Center Code' &&
                                (IsBlank(BudgetItemHelper_BC) || 'Budget Category Code' = BudgetItemHelper_BC.Result) &&
                                (IsBlank(BudgetItemHelper_BI) || 'Budget Item Code' = BudgetItemHelper_BI.Result)
                            ),
                            'Profit Center Code'
                        ),
                        "DMSBudgetProfitCenterTitle",
                        With({nakakat: ThisRecord.Result}, LookUp(DMSBudget,'Profit Center Code' = nakakat).'Profit Center Title' )
                    ),cbOrderItemProfitCenter.SearchText,"DMSBudgetProfitCenterTitle")
                SelectionColor: =White
                SelectionFill: =patternColor4.Fill
                SelectMultiple: =false
                Width: =343
                X: =214
                Y: =160
                ZIndex: =12

            lblPC As label:
                BorderThickness: =1
                Text: =BudgetItemHelper_PC.Result
                Visible: =false
                X: =30
                Y: =375
                ZIndex: =14

            lblBC As label:
                BorderThickness: =1
                Text: =BudgetItemHelper_BC.Result
                Visible: =false
                X: =30
                Y: =415
                ZIndex: =15

            lblBI As label:
                BorderThickness: =1
                Text: =BudgetItemHelper_BI.Result
                Visible: =false
                X: =30
                Y: =455
                ZIndex: =16

            dpOrdItemDeliverablesDueForm_helper_background As datepicker:
                BorderColor: =If(dpOrdItemDeliverablesDueForm_validation,patternColor3.Fill,patternColor6.Fill)
                BorderThickness: =1
                DefaultDate: =
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(237, 237, 237, 1)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                IconBackground: =RGBA(237, 237, 237, 1)
                IconFill: =Transparent
                InputTextPlaceholder: =
                Tooltip: =
                Width: =342
                X: =214
                Y: =60
                ZIndex: =17

            "dpOrdItemDeliverablesDueForm_helper As 'Date picker'":
                AcceptsFocus: =false
                DisplayMode: |-
                    =If(popUpOrderItemFormMode = FormMode.View,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Font: =Font.'Open Sans'
                FontSize: =0
                FontWeight: ="normal"
                Height: =39
                IconSize: =16
                InitialPickerDate: =
                PaddingBottom: =0
                PaddingTop: =0
                PCFTeamsTheme: =TeamsTheme.Default
                ShowGoToToday: =false
                Value: |-
                    =If(popUpOrderItemFormMode = FormMode.New,    
                        Today(),
                        popUporderItem.DMSOrdItemDeliverablesDue
                    )
                Visible: =true
                Width: =341
                X: =215
                Y: =61
                ZIndex: =18

            dpOrdItemDeliverablesDueForm_helper2 As label:
                Height: =39
                Text: =Text(dpOrdItemDeliverablesDueForm.SelectedDate,"[$-en-US]yyyy/mm")
                Width: =300
                X: =221
                Y: =61
                ZIndex: =19

        popUpItemButtons As groupContainer:
            Fill: =Transparent
            Height: =62
            Visible: =popUpOrderItemVisibility
            Width: =573
            X: =404
            Y: =593
            ZIndex: =3

            btnSaveItem2 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |
                    =If(IsBlank(dpOrdItemDeliverablesDueForm.SelectedDate),
                       UpdateContext({dpOrdItemDeliverablesDueForm_validation: false}),
                       UpdateContext({dpOrdItemDeliverablesDueForm_validation: true})
                    );
                    If(IsBlank(txtOrderItemAmount.Text),
                       UpdateContext({txtOrderItemAmount_validation: false}),
                       UpdateContext({txtOrderItemAmount_validation: true})
                    );
                    If(IsEmpty(cbOrderItemProfitCenter.SelectedItems) || IsBlank(cbOrderItemProfitCenter.SelectedItems),
                       UpdateContext({cbOrderItemProfitCenter_validation: false}),
                       UpdateContext({cbOrderItemProfitCenter_validation: true})
                    );
                    If(IsEmpty(cbOrderItemBudgetCategory.SelectedItems) || IsBlank(cbOrderItemBudgetCategory.SelectedItems),
                       UpdateContext({cbOrderItemBudgetCategory_validation: false}),
                       UpdateContext({cbOrderItemBudgetCategory_validation: true})
                    );
                    If(IsEmpty(cbOrderItemBudgetItem.SelectedItems) || IsBlank(cbOrderItemBudgetItem.SelectedItems),
                       UpdateContext({cbOrderItemBudgetItem_validation: false}),
                       UpdateContext({cbOrderItemBudgetItem_validation: true})
                    );
                    If(IsBlank(txtOrderItemDescription.Text),
                       UpdateContext({txtOrderItemDescription_validation: false}),
                       UpdateContext({txtOrderItemDescription_validation: true})
                    );
                    
                    If(dpOrdItemDeliverablesDueForm_validation && txtOrderItemAmount_validation && cbOrderItemProfitCenter_validation && cbOrderItemBudgetCategory_validation && cbOrderItemBudgetItem_validation && txtOrderItemDescription_validation,
                        
                        Set(OrderItemID,Patch(
                            DMSOrderItem,
                            If(popUpOrderItemFormMode = FormMode.New,Defaults(DMSOrderItem),LookUp(DMSOrderItem,ID = popUpOrderItemOrderNumber)),
                            {Title: OrderSHPItem.'Order Number'},
                            {DMSOrdItemDeliverablesDue: dpOrdItemDeliverablesDueForm.SelectedDate},
                            {DMSOrdItemDescription: txtOrderItemDescription.Text},
                            {DMSOrdItemDepartmentCode: First(cbOrdDepartment.SelectedItems).'Cost Center Code'},
                            {DMSOrdItemLegalEntityCode: First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                            {DMSOrdItemAmountActual: Value(txtOrderItemAmount.Text)},
                            {DMSOrdItemAmountDifference:If(popUpOrderItemFormMode = FormMode.New,0,OrderSHPItem.'Order Amount Difference')},
                            {DMSOrdItemAmountOriginal:Value(txtOrderItemAmount.Text)},
                            {DMSOrdItemOrderID: OrderSHPItem.ID},
                            {DMSOrdItemOrderNumber: OrderSHPItem.'Order Number'},
                            {DMSOrdItemBudgetCategoryCode: First(cbOrderItemBudgetCategory.SelectedItems).Result},
                            {DMSOrdItemBudgetCategoryTitle: First(cbOrderItemBudgetCategory.SelectedItems).DMSBudgetCategoryTitle},
                            {DMSOrdItemBudgetItemCode: First(cbOrderItemBudgetItem.SelectedItems).Result},
                            {DMSOrdItemBudgetItemTitle: First(cbOrderItemBudgetItem.SelectedItems).DMSBudgetItemTitle},
                            {DMSOrdItemProfitCenterCode: First(cbOrderItemProfitCenter.SelectedItems).Result},
                            {DMSOrdItemProfitCenterTitle: First(cbOrderItemProfitCenter.SelectedItems).DMSBudgetProfitCenterTitle},
                            {DMSOrdItemProcessActualPhase: OrderSHPItem.'Actual Phase'}
                        )
                        );
                        
                        Refresh(DMSOrderProcessLog);
                        UpdateContext({popUpOrderItemVisibility: false});
                        UpdateContext({popUpOrderItemOrderNumber: Blank()});
                        Reset(dpOrdItemDeliverablesDueForm);
                        Reset(dpOrdItemDeliverablesDueForm_helper);
                        Reset(txtOrderItemAmount);
                        Reset(cbOrderItemProfitCenter);
                        Reset(cbOrderItemBudgetCategory);
                        Reset(cbOrderItemBudgetItem);
                        Reset(txtOrderItemDescription);
                        Notify(LookUp(StringsProcess,AppKey="NotificationItemSaved" && Language=SelectedLanguage,String),NotificationType.Success);
                        ,
                        Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                    );
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
                Visible: =popUpOrderItemVisibility && !(popUpOrderItemFormMode = FormMode.View)
                X: =112
                Y: =8
                ZIndex: =3

            btnClose2 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpOrderItemVisibility: false});
                    UpdateContext({popUpOrderItemOrderNumber: Blank()});
                    Reset(dpOrdItemDeliverablesDueForm);
                    Reset(dpOrdItemDeliverablesDueForm_helper);
                    Reset(txtOrderItemAmount);
                    Reset(cbOrderItemProfitCenter);
                    Reset(cbOrderItemBudgetCategory);
                    Reset(cbOrderItemBudgetItem);
                    Reset(txtOrderItemDescription);
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
                Visible: =popUpOrderItemVisibility
                X: =290
                Y: =8
                ZIndex: =4

        popUpItemHeader As groupContainer:
            Fill: =White
            Height: =49
            Visible: =popUpOrderItemVisibility
            Width: =573
            X: =404
            Y: =28
            ZIndex: =4

            popUpHeader As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Visible: =popUpOrderItemVisibility
                Width: =573
                ZIndex: =1

            popUpLabelOrderItem As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsOrder,AppKey="lblNewOrderItem" && Language=SelectedLanguage,String)
                Visible: =popUpOrderItemVisibility
                Width: =573
                ZIndex: =2

    popUpNewVendor As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpNewVendorVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =5

        popUpFooter_1 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_1 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelOrderItem_1 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="lblNewVendor" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnSendRequest As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsBlank(txtNewVendorName.Text),
                   UpdateContext({txtNewVendorName_validation: false}),
                   UpdateContext({txtNewVendorName_validation: true})
                );
                If(IsBlank(txtNewVendorIC.Text),
                   UpdateContext({txtNewVendorIC_validation: false}),
                   UpdateContext({txtNewVendorIC_validation: true})
                );
                If(IsBlank(txtNewVendorDescription.Text),
                   UpdateContext({txtNewVendorDescription_validation: false}),
                   UpdateContext({txtNewVendorDescription_validation: true})
                );
                
                If(
                    txtNewVendorName_validation &&
                    txtNewVendorIC_validation &&
                    txtNewVendorDescription_validation,
                
                    Set(NewVendorSHPItem,
                        Patch(
                            DMSGlobalMailingQueue,
                            Defaults(DMSGlobalMailingQueue),
                            {Title: "NewVendorRequest"},
                            {Body:"Hello,
                user " & SHPMeClaim.DisplayName & " (" & SHPMeClaim.Email & ") " & "asks you to set up new Vendor in Legal Entity " & First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name' & "<BR><BR>
                
                Name: " & txtNewVendorName.Text &"<BR>
                Registration ID: " & txtNewVendorIC.Text &"<BR>
                Comment: " & txtNewVendorDescription.Text},
                            {From:SHPMeClaim.Email},
                            {'Sent Date':Now()},
                            {Status:"NEW"},
                            {Subject:"DMS: New Vendor Requested"},
                            {'Mail to': LookUp(DMSLegalEntity, 'Legal Entity Code' = CurrentLegalEntity).'Vendor Admin E-mail'}
                        );        
                    );
                
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtNewVendorName);
                    Reset(txtNewVendorIC);
                    Reset(txtNewVendorDescription);
                
                    Notify(LookUp(StringsOrder,AppKey="NotificationRequestSent" && Language=SelectedLanguage,String) /*& " " & First(cbOrdLegalEntity.SelectedItems).DMSLegalEntity_VendorAdminEMail*/,NotificationType.Success);
                    UpdateContext({popUpNewVendorVisibility: false});
                    UpdateContext({txtNewVendorName_validation: true});
                    UpdateContext({txtNewVendorIC_validation: true});
                    UpdateContext({txtNewVendorDescription_validation: true});
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnSendRequest" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({txtNewVendorName_validation: true});
                UpdateContext({txtNewVendorIC_validation: true});
                UpdateContext({txtNewVendorDescription_validation: true});
                UpdateContext({popUpNewVendorVisibility: false});
                Reset(txtNewVendorDescription);
                Reset(txtNewVendorIC);
                Reset(txtNewVendorName);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblNewVendorName As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblOrdVendorName" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =178
            X: =437
            Y: =105
            ZIndex: =6

        txtNewVendorName As text:
            BorderColor: =If(txtNewVendorName_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =105
            ZIndex: =7

        lblNewVendorDIC As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblOrdVendorIC" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =159
            ZIndex: =8

        txtNewVendorIC As text:
            BorderColor: =If(txtNewVendorIC_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =159
            ZIndex: =9

        lblNewVendorDescription As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =212
            ZIndex: =10

        txtNewVendorDescription As text:
            BorderColor: =If(txtNewVendorDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =212
            ZIndex: =11

    popUpDelegateTo As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpDelegateToVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =6

        popUpFooter_2 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_4 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelOrderItem_4 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="btnOrdDelegate" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnDelegate As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtDelagateToDescription.Text),
                   UpdateContext({txtDelagateToDescription_validation: false}),
                   UpdateContext({txtDelagateToDescription_validation: true})
                );
                If(IsEmpty(cbDelegateTo.SelectedItems) || IsBlank(cbDelegateTo.SelectedItems),
                   UpdateContext({cbDelegateTo_validation: false}),
                   UpdateContext({cbDelegateTo_validation: true})
                );
                
                
                If(
                    txtDelagateToDescription_validation && cbDelegateTo_validation,
                
                    If(IsBlank(cbDelegateTo.SelectedItems) || IsEmpty(cbDelegateTo.SelectedItems),
                		Set(cbDelegateToValue,BlankPeople),
                		Set(cbDelegateToValue,
                			Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                			Claims:"i:0#.f|membership|" & Lower(First(cbDelegateTo.SelectedItems).Mail),
                			Department:"",
                			DisplayName:First(cbDelegateTo.SelectedItems).DisplayName,
                			Email:First(cbDelegateTo.SelectedItems).Mail,
                			JobTitle:".",
                			Picture:"."})
                		)
                	);
                    
                    If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                        Set(cbOrderOrdererValue,BlankPeople),
                        Set(cbOrderOrdererValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                            Email:First(cbOrderOrderer.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                        Set(cbOrdRequestorValue,BlankPeople),
                        Set(cbOrdRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                            Department:"",
                            DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                            Email:First(cbOrdRequestor.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Set(cbOrdBudgetOwnerValue,BlankPeople),
                        Set(cbOrdBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Department:"",
                            DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                            Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                    Set(cbWatchersValue,BlankPeople);
                    If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                        Set(cbWatchersValue,BlankPeople),
                        
                        Set(cbWatchersValue,
                            ForAll(cbWatchers.SelectedItems, {
                                '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                Department: "",
                                DisplayName: ThisRecord.DisplayName,
                                Email: ThisRecord.Mail,
                                JobTitle: "",
                                Picture: ""
                                }
                            )
                        )
                
                    );
                
                        Set(NewOrderSHPItem,
                            Patch(
                                DMSOrder,
                                If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                                {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                                {'Budget Owner':cbOrdBudgetOwnerValue},
                                {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                                {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                                {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                                {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                                {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                                {'Order Amount Actual':totalLocal},
                                {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                                {'Order Amount Original':totalLocal},
                                {'Order Date':dpOrderDate.Value},
                                {Description:txtlblOrderDescriptionDetailed.Text},
                                {'In Budget':cbInBudget.Value},
                                {'Order Number':txtOrderNumber.Text},
                                {Orderer:cbOrderOrdererValue},
                                {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                                {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                                {Recipient:txtOrderRecipient.Text},
                                {Requestor:cbOrdRequestorValue},
                                {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                                {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                                {Summary:txtOrderDescription.Text},
                                {Watchers:cbWatchersValue},
                                //{DMSOrdInvoicesAmount_Approved:},
                                //{DMSOrdInvoicesAmount_Declined:},
                                //{DMSOrdInvoicesAmount_InApproval:},
                                {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                                {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                                {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                                {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                                {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                                {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                                {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                                //{DMSOrdProcessEyesCount:},
                                //{DMSOrdProcessNextOwner:},
                                //{DMSOrdProcessNextOwnerEMail:},
                                //{DMSOrdProcessNextOwnerName:},
                                {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                                //{DMSOrdProcessPreviousOwner:},
                                //{DMSOrdProcessPreviousOwnerEMail:},
                                //{DMSOrdProcessPreviousOwnerName:},
                                //{DMSOrdProcessPreviousPhase:},
                                {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                                {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                                {Ordered:cbOrderOrdered.Value},
                                {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                                {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                            );        
                        );	
                        
                        If(customFormMode = FormMode.New,  
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                                {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                            );
                            Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                            Set(OrderSHPItemID,NewOrderSHPItem.ID);
                            Set(customFormMode, FormMode.Edit);
                            Reset(txtOrderNumber);
                        );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                
                
                	// DELEGATE
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                		{'Order Action Date':Now()},
                		{'Order Action Delegate to':cbDelegateToValue},
                		{'Order Action Delegate to E-mail':First(cbDelegateTo.SelectedItems).Mail},
                		{'Order Action Description':txtDelagateToDescription.Text},
                		{'Order Action Required':"START DELEGATE"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email}
                	);
                
                	UpdateContext({popUpDelegateToVisibility: false});
                	Reset(txtDelagateToDescription);
                	Reset(cbDelegateTo);
                    Select(btnAmountsHelper);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationDelegated" && Language=SelectedLanguage,String) & " " & First(cbDelegateToValue).DisplayName,NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnDelegate" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_2 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpDelegateToVisibility: false});
                UpdateContext({txtDelagateToDescription_validation: true});
                UpdateContext({cbDelegateTo_validation: true});
                
                Reset(txtDelagateToDescription);
                Reset(cbDelegateTo);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblDelegateTo As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDelegateTo" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =105
            ZIndex: =6

        lblDelagateToDescription As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =158
            ZIndex: =10

        txtDelagateToDescription As text:
            BorderColor: =If(txtDelagateToDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =158
            ZIndex: =11

        cbDelegateTo As combobox:
            BorderColor: =If(cbDelegateTo_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            ChevronBackground: =
            ChevronFill: =patternColor1.Fill
            ChevronHoverBackground: =patternColor4.Fill
            DefaultSelectedItems: =
            DisplayFields: =["DisplayName","Mail"]
            DisplayMode: |-
                =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                    DisplayMode.Edit,
                    DisplayMode.View
                )
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
            Items: |-
                =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
            PressedColor: =White
            SearchFields: =["DisplayName"]
            SearchItems: |-
                =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbDelegateTo.SearchText,"DisplayName")
            SelectionColor: =White
            SelectionFill: =patternColor4.Fill
            SelectMultiple: =false
            Tooltip: =
            X: =615
            Y: =105
            ZIndex: =12

    popUpNewAttachment As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpNewAttachmentVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =7

        popUpAttachmentBody As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =492
            Width: =573
            X: =404
            Y: =89
            ZIndex: =1

            frmOrderAttachments As form:
                AcceptsFocus: =false
                DataSource: =DMSOrder
                Height: =381
                Item: =LookUp(DMSOrder,ID = OrderSHPItemID)
                NumberOfColumns: =1
                Width: =573
                Y: =48
                ZIndex: =12

                dcAttachments As typedDataCard.attachmentsEditCard:
                    BorderColor: =patternColor1.Fill
                    BorderStyle: =BorderStyle.Solid
                    DataField: ="{Attachments}"
                    Default: =ThisItem.Attachments
                    DisplayMode: =Parent.DisplayMode
                    DisplayName: ="Attachments"
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =50
                    Required: =false
                    Update: =DataCardValue46.Attachments
                    Width: =573
                    X: =0
                    Y: =0
                    ZIndex: =13

                    DataCardKey46 As label:
                        AutoHeight: =true
                        Color: =RGBA(0, 0, 0, 1)
                        Height: =34
                        Text: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        Wrap: =false
                        X: =30
                        Y: =10
                        ZIndex: =1

                    DataCardValue46 As attachments:
                        BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                        DisplayMode: =Parent.DisplayMode
                        IsInDataCard: =true
                        ItemFill: =patternColor1.Fill
                        ItemPressedFill: =patternColor4.Fill
                        Items: =Parent.Default
                        NoAttachmentsText: ="There is no attachment."
                        PaddingBottom: =5
                        PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                        PaddingRight: =5
                        PaddingTop: =5
                        PressedFill: =patternColor4.Fill
                        Tooltip: =Parent.DisplayName
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardKey46.Y + DataCardKey46.Height + 5
                        ZIndex: =2

                    ErrorMessage46 As label:
                        AutoHeight: =true
                        Height: =10
                        Live: =Live.Assertive
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Text: =Parent.Error
                        Visible: =Parent.DisplayMode=DisplayMode.Edit
                        Width: =Parent.Width - 60
                        X: =30
                        Y: =DataCardValue46.Y + DataCardValue46.Height
                        ZIndex: =3

                    StarVisible46 As label:
                        Align: =Align.Center
                        Color: =RGBA(0, 0, 0, 1)
                        Height: =DataCardKey46.Height
                        Text: ="*"
                        Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                        Width: =30
                        Wrap: =false
                        Y: =DataCardKey46.Y
                        ZIndex: =4

        popUpAttachmentButtons As groupContainer:
            Fill: =Transparent
            Height: =62
            Width: =573
            X: =404
            Y: =519
            ZIndex: =3

            btnSaveItem As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |
                    =If(SubmitForm(frmOrderAttachments),
                        Select(btnOrdSave);
                        UpdateContext({popUpNewAttachmentVisibility: false});
                        //DMS_WriteLog.Run(Now(),2,OrderSHPItem.DMSOrdProcessActualPhase,"",User().Email,OrderSHPItem.ID);
                        Refresh(DMSOrderProcessLog);
                        ResetForm(frmOrderAttachments);
                    )
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnOrdSave" && Language=SelectedLanguage,String)
                X: =112
                Y: =8
                ZIndex: =3

            btnClose As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpNewAttachmentVisibility: false});
                    ResetForm(frmOrderAttachments);
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
                X: =290
                Y: =8
                ZIndex: =4

        popUpAttachmentHeader As groupContainer:
            Fill: =White
            Height: =49
            Width: =573
            X: =404
            Y: =89
            ZIndex: =4

            popUpHeader_2 As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Width: =573
                ZIndex: =1

            popUpLabelOrderItem_2 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsOrder,AppKey="lblNewOrderItem" && Language=SelectedLanguage,String)
                Width: =573
                Y: =1
                ZIndex: =2

    popUpComment As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpCommentVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =8

        popUpFooter_5 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_9 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelOrderItem_9 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="btnOrdComment" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnComment As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtCommnentDescription.Text),
                   UpdateContext({txtDelagateToDescription_validation: false}),
                   UpdateContext({txtDelagateToDescription_validation: true})
                );
                If(IsEmpty(cbCommenter.SelectedItems) || IsBlank(cbCommenter.SelectedItems),
                   UpdateContext({cbDelegateTo_validation: false}),
                   UpdateContext({cbDelegateTo_validation: true})
                );
                
                If(
                    txtDelagateToDescription_validation && cbDelegateTo_validation,
                
                    If(IsBlank(cbCommenter.SelectedItems) || IsEmpty(cbCommenter.SelectedItems),
                		Set(cbCommenterValue,BlankPeople),
                		Set(cbCommenterValue,
                			Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                			Claims:"i:0#.f|membership|" & Lower(First(cbCommenter.SelectedItems).Mail),
                			Department:"",
                			DisplayName:First(cbCommenter.SelectedItems).DisplayName,
                			Email:First(cbCommenter.SelectedItems).Mail,
                			JobTitle:".",
                			Picture:"."})
                		)
                	);
                    
                    If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                        Set(cbOrderOrdererValue,BlankPeople),
                        Set(cbOrderOrdererValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                            Email:First(cbOrderOrderer.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                        Set(cbOrdRequestorValue,BlankPeople),
                        Set(cbOrdRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                            Department:"",
                            DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                            Email:First(cbOrdRequestor.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Set(cbOrdBudgetOwnerValue,BlankPeople),
                        Set(cbOrdBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Department:"",
                            DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                            Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                    Set(cbWatchersValue,BlankPeople);
                    If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                        Set(cbWatchersValue,BlankPeople),
                        
                        Set(cbWatchersValue,
                            ForAll(cbWatchers.SelectedItems, {
                                '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                Department: "",
                                DisplayName: ThisRecord.DisplayName,
                                Email: ThisRecord.Mail,
                                JobTitle: "",
                                Picture: ""
                                }
                            )
                        )
                
                    );
                
                    Set(NewOrderSHPItem,
                        Patch(
                            DMSOrder,
                            If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                            {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                            {'Budget Owner':cbOrdBudgetOwnerValue},
                            {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                            {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                            {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                            {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                            {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                            {'Order Amount Actual':totalLocal},
                            {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                            {'Order Amount Original':totalLocal},
                            {'Order Date':dpOrderDate.Value},
                            {Description:txtlblOrderDescriptionDetailed.Text},
                            {'In Budget':cbInBudget.Value},
                            {'Order Number':txtOrderNumber.Text},
                            {Orderer:cbOrderOrdererValue},
                            {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                            {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                            {Recipient:txtOrderRecipient.Text},
                            {Requestor:cbOrdRequestorValue},
                            {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                            {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                            {Summary:txtOrderDescription.Text},
                            {Watchers:cbWatchersValue},
                            //{DMSOrdInvoicesAmount_Approved:},
                            //{DMSOrdInvoicesAmount_Declined:},
                            //{DMSOrdInvoicesAmount_InApproval:},
                            {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                            {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                            {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                            {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                            {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                            {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                            {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                            //{DMSOrdProcessEyesCount:},
                            //{DMSOrdProcessNextOwner:},
                            //{DMSOrdProcessNextOwnerEMail:},
                            //{DMSOrdProcessNextOwnerName:},
                            {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                            //{DMSOrdProcessPreviousOwner:},
                            //{DMSOrdProcessPreviousOwnerEMail:},
                            //{DMSOrdProcessPreviousOwnerName:},
                            //{DMSOrdProcessPreviousPhase:},
                            {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                            {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                            {Ordered:cbOrderOrdered.Value},
                            {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                            {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                        );        
                    );
                
                    If(customFormMode = FormMode.New,  
                        Patch(
                            DMSOrder,
                            LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                            {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                            {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                        );
                        Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                        Set(OrderSHPItemID,NewOrderSHPItem.ID);
                        Set(customFormMode, FormMode.Edit);
                        Reset(txtOrderNumber);
                    );
                
                    //DMS_WriteLog.Run(Now(),1,OrderSHPItem.DMSOrdProcessActualPhase,txtOrderOrdLogEventDescription.Text,User().Email,OrderSHPItem.ID);
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                
                
                	// DELEGATE
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                		{'Order Action Date':Now()},
                		{'Order Action Delegate to':cbCommenterValue},
                		{'Order Action Delegate to E-mail':First(cbCommenter.SelectedItems).Mail},
                		{'Order Action Description':txtCommnentDescription.Text},
                		{'Order Action Required':"START COMMENT"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email}
                	);
                	Notify(LookUp(StringsProcess,AppKey="NotificationCommentedTo" && Language=SelectedLanguage,String) & " " & First(cbCommenterValue).DisplayName,NotificationType.Success);
                	UpdateContext({popUpCommentVisibility: false});
                	Reset(txtCommnentDescription);
                	Reset(cbCommenter);
                    Set(customFormMode, FormMode.View);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnComment" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_7 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpCommentVisibility: false});
                UpdateContext({txtDelagateToDescription_validation: true});
                UpdateContext({cbDelegateTo_validation: true});
                
                Reset(txtCommnentDescription);
                Reset(cbCommenter);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblCommenter As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblCommenter" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =105
            ZIndex: =6

        lblDelagateToDescription_3 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblDescription" && Language=SelectedLanguage,String) & " *"
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =158
            ZIndex: =10

        txtCommnentDescription As text:
            BorderColor: =If(txtDelagateToDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =158
            ZIndex: =11

        cbCommenter As combobox:
            BorderColor: =If(cbDelegateTo_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            ChevronBackground: =
            ChevronFill: =patternColor1.Fill
            ChevronHoverBackground: =patternColor4.Fill
            DefaultSelectedItems: =
            DisplayFields: =["DisplayName","Mail"]
            DisplayMode: |-
                =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                    DisplayMode.Edit,
                    DisplayMode.View
                )
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
            Items: |-
                =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
            PressedColor: =White
            SearchFields: =["DisplayName"]
            SearchItems: |-
                =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbCommenter.SearchText,"DisplayName")
            SelectionColor: =White
            SelectionFill: =patternColor4.Fill
            SelectMultiple: =false
            Tooltip: =
            X: =615
            Y: =105
            ZIndex: =12

    popUpLimitVaidation As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpLimitValidationVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =9

        popUpFooter_8 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =225
            Width: =573
            X: =396
            Y: =187
            ZIndex: =1

        popUpHeader_13 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =396
            Y: =180
            ZIndex: =2

        popUpLabelLimitValidation As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="popUpLabelLimitValidation" && Language=SelectedLanguage,String) & " " & First(cbOrdLegalEntity.SelectedItems).'Contract Order Value Limit' & " €"
            Width: =573
            X: =396
            Y: =180
            ZIndex: =3

        btnYes As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtOrderNumber.Text),
                        UpdateContext({txtOrderNumber_validation: false}),
                        UpdateContext({txtOrderNumber_validation: true})
                        );
                        If(IsEmpty(cbOrdLegalEntity.SelectedItems) || IsBlank(cbOrdLegalEntity.SelectedItems),
                        UpdateContext({cbOrdLegalEntity_validation: false}),
                        UpdateContext({cbOrdLegalEntity_validation: true})
                        );
                        /*If(IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems),
                        UpdateContext({cbOrdContractNumber_validation: false}),
                        UpdateContext({cbOrdContractNumber_validation: true})
                        );*/
                        If(IsBlank(dpOrderDate.Value),
                        UpdateContext({dpOrderDate_validation: false}),
                        UpdateContext({dpOrderDate_validation: true})
                        );
                        If(IsBlank(txtOrderDescription.Text),
                        UpdateContext({txtOrderDescription_validation: false}),
                        UpdateContext({txtOrderDescription_validation: true})
                        );
                        If(IsEmpty(cbOrdVendor.SelectedItems) || IsBlank(cbOrdVendor.SelectedItems),
                        UpdateContext({cbOrdVendor_validation: false}),
                        UpdateContext({cbOrdVendor_validation: true})
                        );
                        If(IsEmpty(cbOrdRequestor.SelectedItems) || IsBlank(cbOrdRequestor.SelectedItems),
                        UpdateContext({cbOrdRequestor_validation: false}),
                        UpdateContext({cbOrdRequestor_validation: true})
                        );
                        If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                        UpdateContext({cbOrdDepartment_validation: false}),
                        UpdateContext({cbOrdDepartment_validation: true})
                        );
                        If(IsBlank(txtOrdBudgetOwner.Text),
                        UpdateContext({txtOrdBudgetOwner_validation: false}),
                        UpdateContext({txtOrdBudgetOwner_validation: true})
                        );
                        If(IsEmpty(cbOrderOrderer.SelectedItems) || IsBlank(cbOrderOrderer.SelectedItems),
                        UpdateContext({cbOrderOrderer_validation: false}),
                        UpdateContext({cbOrderOrderer_validation: true})
                        );
                        If(IsBlank(txtOrderRecipient.Text),
                        UpdateContext({txtOrderRecipient_validation: false}),
                        UpdateContext({txtOrderRecipient_validation: true})
                        );
                        If(IsBlank(txtlblOrderDescriptionDetailed.Text),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: false}),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: true})
                        );
                        /*If(IsEmpty(cbWatchers.SelectedItems) || IsBlank(cbWatchers.SelectedItems),
                        UpdateContext({cbWatchers_validation: false}),
                        UpdateContext({cbWatchers_validation: true})
                        );*/
                        /*If(IsBlank(txtOrderOrdLogEventDescription.Text),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                        );*/
                
                        If(CountRows(glrOrderItems.AllItems) < 1,
                        UpdateContext({OrderItems_validation: false}),
                        UpdateContext({OrderItems_validation: true})
                        );
                
                        If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                            Set(cbOrderOrdererValue,BlankPeople),
                            Set(cbOrderOrdererValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                                Email:First(cbOrderOrderer.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                            Set(cbOrdRequestorValue,BlankPeople),
                            Set(cbOrdRequestorValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                                Department:"",
                                DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                                Email:First(cbOrdRequestor.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Set(cbOrdBudgetOwnerValue,BlankPeople),
                            Set(cbOrdBudgetOwnerValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                                Department:"",
                                DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                                Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                        Set(cbWatchersValue,BlankPeople);
                        If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                            Set(cbWatchersValue,BlankPeople),
                            
                            Set(cbWatchersValue,
                                ForAll(cbWatchers.SelectedItems, {
                                    '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                    Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                    Department: "",
                                    DisplayName: ThisRecord.DisplayName,
                                    Email: ThisRecord.Mail,
                                    JobTitle: "",
                                    Picture: ""
                                    }
                                )
                            )
                
                        );
                
                        If(
                            txtOrderNumber_validation &&
                            cbOrdLegalEntity_validation &&
                            cbOrdContractNumber_validation &&
                            dpOrderDate_validation &&
                            txtOrderDescription_validation &&
                            cbOrdVendor_validation &&
                            cbOrdRequestor_validation &&
                            cbOrdDepartment_validation &&
                            txtOrdBudgetOwner_validation &&
                            cbOrderOrderer_validation &&
                            txtOrderRecipient_validation &&
                            txtlblOrderDescriptionDetailed_validation &&
                            cbWatchers_validation &&
                            txtOrderOrdLogEventDescription_validation,
                            Refresh(DMSOrder);        
                            Set(NewOrderSHPItem,
                                Patch(
                                    DMSOrder,
                                    If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                                    {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                                    {'Budget Owner':cbOrdBudgetOwnerValue},
                                    {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                                    {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                                    {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                                    {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                                    {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                                    {'Order Amount Actual':totalLocal},
                                    {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                                    {'Order Amount Original':totalLocal},
                                    {'Order Date':dpOrderDate.Value},
                                    {Description:txtlblOrderDescriptionDetailed.Text},
                                    {'In Budget':cbInBudget.Value},
                                    {'Order Number':txtOrderNumber.Text},
                                    {Orderer:cbOrderOrdererValue},
                                    {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                                    {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                                    {Recipient:txtOrderRecipient.Text},
                                    {Requestor:cbOrdRequestorValue},
                                    {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                                    {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                                    {Summary:txtOrderDescription.Text},
                                    {Watchers:cbWatchersValue},
                                    //{DMSOrdInvoicesAmount_Approved:},
                                    //{DMSOrdInvoicesAmount_Declined:},
                                    //{DMSOrdInvoicesAmount_InApproval:},
                                    {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                                    {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                                    {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                                    {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                                    {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                                    {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                                    {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                                    //{DMSOrdProcessEyesCount:},
                                    //{DMSOrdProcessNextOwner:},
                                    //{DMSOrdProcessNextOwnerEMail:},
                                    //{DMSOrdProcessNextOwnerName:},
                                    {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                                    //{DMSOrdProcessPreviousOwner:},
                                    //{DMSOrdProcessPreviousOwnerEMail:},
                                    //{DMSOrdProcessPreviousOwnerName:},
                                    //{DMSOrdProcessPreviousPhase:},
                                    {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                                    {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                                    {'Budget Owner Equals Orderer':First(cbOrdBudgetOwnerValue).Email = First(cbOrdRequestorValue).Email},
                                    {Ordered:cbOrderOrdered.Value},
                                    {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                                    {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                                );        
                            );
                
                            If(customFormMode = FormMode.New,  
                                Patch(
                                    DMSOrder,
                                    LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                    {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                                    {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                                );
                                Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                                Set(OrderSHPItemID,NewOrderSHPItem.ID);
                                Set(customFormMode, FormMode.Edit);
                                Reset(txtOrderNumber);
                            );
                            Reset(txtOrderOrdLogEventDescription);
                            Refresh(DMSOrderProcessLog);
                            
                            // APPROVE
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                {'Order Action Date':Now()},
                                {'Order Action Description':txtOrderOrdLogEventDescription.Text},
                                {'Order Action Required':"START APPROVE"},
                                {'Order Action Required by':Table(SHPMeClaim)},
                                {'Order Action Required by E-mail':User().Email},
                                {'Approved By':Collect(NewOrderSHPItem.'Approved By',SHPMeClaim)}
                            );
                            Select(btnAmountsHelper);
                            Set(customFormMode, FormMode.View);
                            Notify(LookUp(StringsProcess,AppKey="NotificationApprovalStarted" && Language=SelectedLanguage,String),NotificationType.Success);
                            ,
                            Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                        );
                UpdateContext({popUpLimitValidationVisibility: false});
                Select(btnAmountsHelper);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnYes" && Language=SelectedLanguage,String)
            X: =513
            Y: =337
            ZIndex: =4

        btnNo As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpLimitValidationVisibility: false});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnNo" && Language=SelectedLanguage,String)
            X: =691
            Y: =337
            ZIndex: =5

        lblLimitValidationText As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Height: =65
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblLimitValidationText" && Language=SelectedLanguage,String)
            Tooltip: =labelSettings.Tooltip
            Width: =507
            X: =429
            Y: =239
            ZIndex: =6

    popUpLogItemDetail As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpLogItemDetailVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =10

        popUpItemBody_3 As groupContainer:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =502
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

            txtLogDetailPhase As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =LookUp(StatesOrder,AppKey = Value(glrProcessHistoryItems_4.Selected.DMSOrdLogItemPhase) && Language = SelectedLanguage,String) & " (" & glrProcessHistoryItems_4.Selected.DMSOrdLogItemPhase & ")"
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =383
                X: =174
                Y: =lblLogDetailPhase.Y
                ZIndex: =1

            lblLogDetailPhase As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailPhase" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =110
                ZIndex: =2

            txtLogDetailDescription As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =glrProcessHistoryItems_4.Selected.DMSOrdLogEventDescription
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =141
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =383
                X: =txtLogDetailPhase.X
                Y: =282
                ZIndex: =3

            lblLogDetailUser As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailUser" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblLogDetailPhase.X
                Y: =lblLogDetailPhase.Y + 50
                ZIndex: =5

            lblLogDetailTitle As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventTitle" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblLogDetailPhase.X
                Y: =lblLogDetailPhase.Y +100
                ZIndex: =6

            lblLogDetailDescription As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblOrdLogEventDescription" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =lblLogDetailPhase.X
                Y: =282
                ZIndex: =7

            lblLogDetailLogDate As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Size: =labelSettings.Size
                Text: =LookUp(StringsProcess,AppKey="lblLogDetailLogDate" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =10
                Y: =60
                ZIndex: =8

            txtLogDetailLogDate As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: |-
                    =Text(glrProcessHistoryItems_4.Selected.DMSOrdLogDate,"[$-en-US]dd.mm.yyyy hh:mm:ss")
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =383
                X: =174
                Y: =60
                ZIndex: =18

            txtLogDetailUser As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =glrProcessHistoryItems_4.Selected.DMSOrdLogUserName
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =383
                X: =174
                Y: =160
                ZIndex: =19

            txtLogDetailTitle As text:
                BorderColor: =patternColor3.Fill
                BorderThickness: =1
                Default: =glrProcessHistoryItems_4.Selected.DMSOrdLogEventTitle
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =1
                Height: =61
                HoverBorderColor: =patternColor4.Fill
                HoverFill: =ColorFade(patternColor3.Fill, 90%)
                Mode: =TextMode.MultiLine
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =383
                X: =174
                Y: =210
                ZIndex: =20

        popUpItemButtons_4 As groupContainer:
            Fill: =Transparent
            Height: =62
            Width: =573
            X: =404
            Y: =468
            ZIndex: =3

            btnClose2_3 As button:
                BorderColor: =patternColor3.DisabledFill
                BorderThickness: =0.5
                Color: =RGBA(0, 0, 0, 1)
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =patternColor4.Fill
                FocusedBorderThickness: =0.5
                HoverBorderColor: =patternColor4.Fill
                HoverColor: =
                HoverFill: =
                OnSelect: |-
                    =UpdateContext({popUpLogItemDetailVisibility: false});
                PressedBorderColor: =patternColor4.Fill
                PressedColor: =
                PressedFill: =ColorFade(patternColor3.Fill, 90%)
                Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
                X: =210
                Y: =10
                ZIndex: =4

        popUpItemHeader_3 As groupContainer:
            Fill: =White
            Height: =49
            Width: =573
            X: =404
            Y: =28
            ZIndex: =4

            popUpHeader_14 As rectangle:
                BorderColor: =patternColor1.Fill
                BorderThickness: =2
                Fill: =patternColor1.Fill
                Height: =48
                Width: =573
                ZIndex: =1

            lblPopUpLogDetailHeader As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Height: =48
                Size: =18
                Text: =LookUp(StringsProcess,AppKey="LogDetailHeader" && Language=SelectedLanguage,String)
                Width: =573
                ZIndex: =2

    popUpReopen As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpReopenVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =11

        popUpFooter_9 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_17 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelReopen As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="popUpLabelReopen" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnReopen As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =/*If(IsBlank(txtReopenDescription.Text),
                   UpdateContext({txtReturnToDescription_validation: false}),
                   UpdateContext({txtReturnToDescription_validation: true})
                );*/
                
                If(IsEmpty(cbReturnTo.SelectedItems) || IsBlank(cbReturnTo.SelectedItems),
                   UpdateContext({cbReturnTo_validation: false}),
                   UpdateContext({cbReturnTo_validation: true})
                );
                
                If(
                    txtReturnToDescription_validation && cbReturnTo_validation,
                
                    If(IsBlank(cbReturnTo.SelectedItems) || IsEmpty(cbReturnTo.SelectedItems),
                		Set(cbReturnToValue,BlankPeople),
                		Set(cbReturnToValue,
                			Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                			Claims:"i:0#.f|membership|" & Lower(First(cbReturnTo.SelectedItems).Mail),
                			Department:"",
                			DisplayName:First(cbReturnTo.SelectedItems).DisplayName,
                			Email:First(cbReturnTo.SelectedItems).Mail,
                			JobTitle:".",
                			Picture:"."})
                		)
                	);
                    
                    If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                        Set(cbOrderOrdererValue,BlankPeople),
                        Set(cbOrderOrdererValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                            Email:First(cbOrderOrderer.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                        Set(cbOrdRequestorValue,BlankPeople),
                        Set(cbOrdRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                            Department:"",
                            DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                            Email:First(cbOrdRequestor.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Set(cbOrdBudgetOwnerValue,BlankPeople),
                        Set(cbOrdBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Department:"",
                            DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                            Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                    Set(cbWatchersValue,BlankPeople);
                    If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                        Set(cbWatchersValue,BlankPeople),
                        
                        Set(cbWatchersValue,
                            ForAll(cbWatchers.SelectedItems, {
                                '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                Department: "",
                                DisplayName: ThisRecord.DisplayName,
                                Email: ThisRecord.Mail,
                                JobTitle: "",
                                Picture: ""
                                }
                            )
                        )
                
                    );
                
                        Set(NewOrderSHPItem,
                            Patch(
                                DMSOrder,
                                If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                                {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                                {'Budget Owner':cbOrdBudgetOwnerValue},
                                {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                                {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                                {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                                {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                                {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                                {'Order Amount Actual':totalLocal},
                                {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                                {'Order Amount Original':totalLocal},
                                {'Order Date':dpOrderDate.Value},
                                {Description:txtlblOrderDescriptionDetailed.Text},
                                {'In Budget':cbInBudget.Value},
                                {'Order Number':txtOrderNumber.Text},
                                {Orderer:cbOrderOrdererValue},
                                {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                                {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                                {Recipient:txtOrderRecipient.Text},
                                {Requestor:cbOrdRequestorValue},
                                {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                                {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                                {Summary:txtOrderDescription.Text},
                                {Watchers:cbWatchersValue},
                                //{DMSOrdInvoicesAmount_Approved:},
                                //{DMSOrdInvoicesAmount_Declined:},
                                //{DMSOrdInvoicesAmount_InApproval:},
                                {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                                {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                                {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                                {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                                {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                                {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                                {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                                //{DMSOrdProcessEyesCount:},
                                //{DMSOrdProcessNextOwner:},
                                //{DMSOrdProcessNextOwnerEMail:},
                                //{DMSOrdProcessNextOwnerName:},
                                {DMSOrdProcessNote:txtReopenDescription.Text},
                                //{DMSOrdProcessPreviousOwner:},
                                //{DMSOrdProcessPreviousOwnerEMail:},
                                //{DMSOrdProcessPreviousOwnerName:},
                                //{DMSOrdProcessPreviousPhase:},
                                {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                                {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                                {Ordered:cbOrderOrdered.Value},
                                {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                                {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                            );        
                        );	
                        
                        If(customFormMode = FormMode.New,  
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                                {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                            );
                            Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                            Set(OrderSHPItemID,NewOrderSHPItem.ID);
                            Set(customFormMode, FormMode.Edit);
                            Reset(txtOrderNumber);
                        );
                
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                
                	// RETURNTO
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                		{'Order Action Date':Now()},
                		{'Order Action Delegate to':cbReturnToValue},
                		{'Order Action Delegate to E-mail':First(cbReturnTo.SelectedItems).Mail},
                		{'Order Action Description':txtReopenDescription.Text},
                		{'Order Action Required':"START REOPEN"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email}
                	);
                
                	UpdateContext({popUpReopenVisibility: false});
                	Reset(txtReopenDescription);
                	Reset(cbReturnTo);
                    Select(btnAmountsHelper);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationReopened" && Language=SelectedLanguage,String) & " " & First(cbDelegateToValue).DisplayName,NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnReopen" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_10 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpReopenVisibility: false});
                UpdateContext({cbReturnTo_validation: true});
                UpdateContext({txtReturnToDescription_validation: true});
                
                Reset(txtReopenDescription);
                Reset(cbReturnTo);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        lblReturnTo As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblReturnTo" && Language=SelectedLanguage,String)
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =105
            ZIndex: =6

        lblReopenDescription As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =LookUp(StringsOrder,AppKey="lblPoznamka" && Language=SelectedLanguage,String)
            Tooltip: =labelSettings.Tooltip
            Width: =162
            X: =437
            Y: =158
            ZIndex: =10

        txtReopenDescription As text:
            BorderColor: =If(txtReturnToDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =122
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Width: =328
            X: =615
            Y: =158
            ZIndex: =11

        cbReturnTo As combobox:
            BorderColor: =If(cbReturnTo_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            ChevronBackground: =
            ChevronFill: =patternColor1.Fill
            ChevronHoverBackground: =patternColor4.Fill
            DefaultSelectedItems: |-
                =Filter(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),Mail = First(OrderSHPItem.Requestor).Email)
            DisplayFields: =["DisplayName","Mail"]
            DisplayMode: |-
                =If(customFormMode = FormMode.Edit || customFormMode = FormMode.New,
                    DisplayMode.Edit,
                    DisplayMode.View
                )
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            InputTextPlaceholder: =LookUp(StringsOrder,AppKey="findItems" && Language=SelectedLanguage,String)
            Items: |-
                =ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail")
            PressedColor: =White
            SearchFields: =["DisplayName"]
            SearchItems: |-
                =Search(ShowColumns(Office365Users.SearchUser({searchTerm:"",top: 999}),"DisplayName","Mail"),cbReturnTo.SearchText,"DisplayName")
            SelectionColor: =White
            SelectionFill: =patternColor4.Fill
            SelectMultiple: =false
            Tooltip: =
            X: =615
            Y: =105
            ZIndex: =12

    popUpCloseOrder As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpCloseOrderVisibility
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =12

        popUpFooter_12 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =405
            Width: =573
            X: =404
            Y: =28
            ZIndex: =1

        popUpHeader_20 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =573
            X: =404
            Y: =28
            ZIndex: =2

        popUpLabelCloseOrder As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="popUpLabelCloseOrder" && Language=SelectedLanguage,String)
            Width: =573
            X: =404
            Y: =28
            ZIndex: =3

        btnCloseOrder As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =If(IsBlank(txtCloseOrderReason.Text),
                   UpdateContext({txtCloseOrderDescription_validation: false}),
                   UpdateContext({txtCloseOrderDescription_validation: true})
                );
                
                
                If(
                    txtCloseOrderDescription_validation,
                 
                    If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                        Set(cbOrderOrdererValue,BlankPeople),
                        Set(cbOrderOrdererValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                            Department:"",
                            DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                            Email:First(cbOrderOrderer.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                        Set(cbOrdRequestorValue,BlankPeople),
                        Set(cbOrdRequestorValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                            Department:"",
                            DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                            Email:First(cbOrdRequestor.SelectedItems).Mail,
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                
                    If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                        Set(cbOrdBudgetOwnerValue,BlankPeople),
                        Set(cbOrdBudgetOwnerValue,
                            Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                            Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Department:"",
                            DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                            Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                            JobTitle:".",
                            Picture:"."})
                        )
                    );
                    Set(cbWatchersValue,BlankPeople);
                    If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                        Set(cbWatchersValue,BlankPeople),
                        
                        Set(cbWatchersValue,
                            ForAll(cbWatchers.SelectedItems, {
                                '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                Department: "",
                                DisplayName: ThisRecord.DisplayName,
                                Email: ThisRecord.Mail,
                                JobTitle: "",
                                Picture: ""
                                }
                            )
                        )
                
                    );
                
                        Set(NewOrderSHPItem,
                            Patch(
                                DMSOrder,
                                If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                                {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                                {'Budget Owner':cbOrdBudgetOwnerValue},
                                {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                                {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                                {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                                {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                                {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                                {'Order Amount Actual':totalLocal},
                                {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                                {'Order Amount Original':totalLocal},
                                {'Order Date':dpOrderDate.Value},
                                {Description:txtlblOrderDescriptionDetailed.Text},
                                {'In Budget':cbInBudget.Value},
                                {'Order Number':txtOrderNumber.Text},
                                {Orderer:cbOrderOrdererValue},
                                {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                                {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                                {Recipient:txtOrderRecipient.Text},
                                {Requestor:cbOrdRequestorValue},
                                {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                                {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                                {Summary:txtOrderDescription.Text},
                                {Watchers:cbWatchersValue},
                                //{DMSOrdInvoicesAmount_Approved:},
                                //{DMSOrdInvoicesAmount_Declined:},
                                //{DMSOrdInvoicesAmount_InApproval:},
                                {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                                {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                                {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                                {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                                {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                                {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                                {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                                //{DMSOrdProcessEyesCount:},
                                //{DMSOrdProcessNextOwner:},
                                //{DMSOrdProcessNextOwnerEMail:},
                                //{DMSOrdProcessNextOwnerName:},
                                {DMSOrdProcessNote:txtCloseOrderReason.Text},
                                //{DMSOrdProcessPreviousOwner:},
                                //{DMSOrdProcessPreviousOwnerEMail:},
                                //{DMSOrdProcessPreviousOwnerName:},
                                //{DMSOrdProcessPreviousPhase:},
                                {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                                {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                                {Ordered:cbOrderOrdered.Value},
                                {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                                {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                            );        
                        );	
                        
                        If(customFormMode = FormMode.New,  
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                                {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                            );
                            Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                            Set(OrderSHPItemID,NewOrderSHPItem.ID);
                            Set(customFormMode, FormMode.Edit);
                            Reset(txtOrderNumber);
                        );
                
                    Reset(txtOrderOrdLogEventDescription);
                    Refresh(DMSOrderProcessLog);
                
                	// RETURNTO
                	Patch(
                		DMSOrder,
                		LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                		{'Order Action Date':Now()},
                		//{DMSOrderActionDelegateTo:cbReturnToValue},
                		//{DMSOrderActionDelegateToEMail:First(cbReturnTo_3.SelectedItems).Mail},
                		{'Order Action Description':txtCloseOrderReason.Text},
                		{'Order Action Required':"START CLOSE"},
                		{'Order Action Required by':Table(SHPMeClaim)},
                		{'Order Action Required by E-mail':SHPMeClaim.Email}
                	);
                
                	UpdateContext({popUpCloseOrderVisibility: false});
                	Reset(txtCloseOrderReason);
                    Select(btnAmountsHelper);
                    Set(customFormMode, FormMode.View);
                    Notify(LookUp(StringsProcess,AppKey="NotificationCloseOrder" && Language=SelectedLanguage,String) & " " & First(cbDelegateToValue).DisplayName,NotificationType.Success);
                    ,
                    Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                );
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnReopen" && Language=SelectedLanguage,String)
            X: =521
            Y: =364
            ZIndex: =4

        btnClose_13 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |
                =UpdateContext({popUpCloseOrderVisibility: false});
                UpdateContext({txtCloseOrderDescription_validation: true});
                
                Reset(txtCloseOrderReason);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =699
            Y: =364
            ZIndex: =5

        txtCloseOrderReason As text:
            BorderColor: =If(txtCloseOrderDescription_validation,patternColor3.Fill,patternColor6.Fill)
            BorderThickness: =1
            Default: =""
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =1
            Height: =117
            HintText: =LookUp(StringsOrder,AppKey="lblCloseOrderReason" && Language=SelectedLanguage,String)
            HoverBorderColor: =patternColor4.Fill
            HoverFill: =ColorFade(patternColor3.Fill, 90%)
            Mode: =TextMode.MultiLine
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Tooltip: =LookUp(StringsOrder,AppKey="lblCloseOrderReason" && Language=SelectedLanguage,String)
            Width: =506
            X: =437
            Y: =225
            ZIndex: =11

        lblCloseOrderText As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Height: =125
            Italic: =true
            Size: =15
            Text: =LookUp(StringsOrder,AppKey="lblCloseOrderText" && Language=SelectedLanguage,String)
            Tooltip: =labelSettings.Tooltip
            Width: =539
            X: =420
            Y: =88
            ZIndex: =12

    popUpBudgetValidation_v2 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpBudgetValidationV2Visibility || popUpBudgetValidationV2Visibility_StartApprove
        Width: =Parent.Width
        X: =0*0
        Y: =40
        ZIndex: =13

        popUpFooter_22 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =474
            Width: =1171
            X: =98
            Y: =81
            ZIndex: =1

        popUpHeader_34 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =1171
            X: =98
            Y: =33
            ZIndex: =2

        LabelpopUpBudgetValidation_2 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="LabelpopUpBudgetValidation" && Language=SelectedLanguage,String)
            Width: =573
            X: =396
            Y: =33
            ZIndex: =3

        btnNo_4 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: |-
                =//If(IsBlank(DMS_SystemAction_35_CanvasApp_Response),DisplayMode.Disabled,DisplayMode.Edit)
                DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpBudgetValidationV2Visibility: false});
                UpdateContext({popUpBudgetValidationV2Visibility_StartApprove: false});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =706
            Y: =500
            ZIndex: =5

        OrderItems_4 As groupContainer:
            BorderColor: =If(OrderItems_validation,patternColor1.Fill,patternColor6.Fill)
            BorderThickness: =1
            Fill: =Transparent
            Height: =321
            Width: =1171
            X: =97
            Y: =160
            ZIndex: =6

            lblPopUpBudgetValidation_AllOrderItems_2 As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_AllOrderItems" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =177
                X: =687
                Y: =7
                ZIndex: =4

            lblOrdItemBudgetCategoryHeader_4 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblBudgetCategory" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =270
                Y: =7
                ZIndex: =7

            lblOrdItemDeliverablesDueHeader_4 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrdItemDeliverablesDueHeader" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =132
                X: =12
                Y: =7
                ZIndex: =8

            "glrOrderItems_4 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                Height: =259
                Items: |-
                    =    Filter(
                            AddColumns(
                                GroupBy(
                                    Filter(DMSOrderItem, DMSOrdItemOrderID= OrderSHPItem.ID),
                                    "DMSOrdItemDeliverablesDue",
                                    "DMSOrdItemLegalEntityCode",
                                    "DMSOrdItemDepartmentCode",
                                    "DMSOrdItemProfitCenterCode",
                                    "DMSOrdItemBudgetCategoryCode",
                                    "OrderItemsGroupData"
                                ),
                                "OrderItemTotal",
                                Sum(OrderItemsGroupData, DMSOrdItemAmountActual),
                                "AllOrderItemTotal",
                                Sum(Filter(DMSBudgetOrderEval, 
                                    DMSBOE_Period = DMSOrdItemDeliverablesDue &&
                                    DMSBOE_LegalEntityCode = DMSOrdItemLegalEntityCode &&
                                    DMSBOE_DepartmentCode = DMSOrdItemDepartmentCode &&
                                    DMSBOE_ProfitCenterCode = DMSOrdItemProfitCenterCode &&
                                    DMSBOE_BudgetCategoryCode = DMSOrdItemBudgetCategoryCode
                                ),DMSBOE_OrdersAmount),
                                "BudgetItemTotal",
                                Sum(Filter(DMSBudgetOrderEval, 
                                    DMSBOE_Period = DMSOrdItemDeliverablesDue &&
                                    DMSBOE_LegalEntityCode = DMSOrdItemLegalEntityCode &&
                                    DMSBOE_DepartmentCode = DMSOrdItemDepartmentCode &&
                                    DMSBOE_ProfitCenterCode = DMSOrdItemProfitCenterCode &&
                                    DMSBOE_BudgetCategoryCode = DMSOrdItemBudgetCategoryCode
                                ),DMSBOE_BudgetAmount),
                                "DifferenceAmount",
                                Sum(Filter(DMSBudgetOrderEval, 
                                    DMSBOE_Period = DMSOrdItemDeliverablesDue &&
                                    DMSBOE_LegalEntityCode = DMSOrdItemLegalEntityCode &&
                                    DMSBOE_DepartmentCode = DMSOrdItemDepartmentCode &&
                                    DMSBOE_ProfitCenterCode = DMSOrdItemProfitCenterCode &&
                                    DMSBOE_BudgetCategoryCode = DMSOrdItemBudgetCategoryCode
                                ),DMSBOE_DifferenceAmount)
                                ),
                            !IsBlank(OrderItemTotal)
                        )
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =45
                Visible: =!popUpBudgetValidationIsRunning
                Width: =1159
                X: =12
                Y: =62
                ZIndex: =9

                Separator1_17 As rectangle:
                    Fill: =patternColor1.Fill
                    Height: =1
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth
                    Y: =Parent.TemplateHeight - 1
                    ZIndex: =5

                lblOrdItemDeliverablesDue_4 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =Text(ThisItem.DMSOrdItemDeliverablesDue,"[$-en-US]yyyy/mm")
                    Tooltip: =labelSettings.Tooltip
                    Width: =93
                    X: =20
                    Y: =2
                    ZIndex: =6

                lblOrdItemProfitCenter_4 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =First(ThisItem.OrderItemsGroupData).DMSOrdItemProfitCenterTitle
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =128
                    Y: =2
                    ZIndex: =7

                lblOrdItemBudgetCategory_4 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =First(ThisItem.OrderItemsGroupData).DMSOrdItemBudgetCategoryTitle
                    Tooltip: =labelSettings.Tooltip
                    Width: =303
                    X: =258
                    Y: =2
                    ZIndex: =8

                lblOrdItemAmountActual_13 As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.OrderItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =490
                    Y: =2
                    ZIndex: =10

                lblOrdItemAmountActual_10 As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.AllOrderItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =668
                    ZIndex: =11

                lblOrdItemAmountActual_11 As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.BudgetItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =808
                    ZIndex: =12

                lblInBudgetWarning_4 As label:
                    Color: =patternColor6.Fill
                    FontWeight: =FontWeight.Semibold
                    Size: =20
                    Text: ="!"
                    Tooltip: =LookUp(StringsOrder,AppKey="tooltipItemNotInBuget" && Language=SelectedLanguage,String) 
                    Visible: |-
                        =If(OrderSHPItem.'Actual Phase' = "10" || OrderSHPItem.'Actual Phase' = "99",
                            ThisItem.AllOrderItemTotal + ThisItem.OrderItemTotal > ThisItem.BudgetItemTotal,
                            ThisItem.AllOrderItemTotal > ThisItem.BudgetItemTotal
                        )
                    Width: =13
                    ZIndex: =13

                lblOrdItemAmountActual_12 As label:
                    Align: =Align.Right
                    Color: |-
                        =//labelSettings.Color
                        If(Value(Self.Text) = 0,
                            labelSettings.Color,
                            If(Value(Self.Text) < 0,
                                Red,
                                Green
                            )
                        )
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |
                        =If(OrderSHPItem.'Actual Phase' = "10" || OrderSHPItem.'Actual Phase' = "99",
                            Text(ThisItem.BudgetItemTotal - (ThisItem.AllOrderItemTotal + ThisItem.OrderItemTotal),"[$-en-US]0#,#"),
                            Text(ThisItem.BudgetItemTotal - ThisItem.AllOrderItemTotal,"[$-en-US]0#,#")
                        )
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =952
                    ZIndex: =14

            lblOrdItemProfitCenterHeader_4 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblProfitCentrum" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =129
                X: =139
                Y: =7
                ZIndex: =11

            btnOrdItemNewItem_4 As icon.Edit:
                Color: =patternColor1.Fill
                DisplayMode: |-
                    =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail') || customFormMode = FormMode.New,
                        DisplayMode.Edit,
                        If(customFormMode = FormMode.Edit,
                            DisplayMode.Disabled,
                            DisplayMode.View
                        )
                    )
                FocusedBorderThickness: =0
                Height: =25
                Icon: =Icon.Add
                OnSelect: |
                    =UpdateContext({dpOrdItemDeliverablesDueForm_validation: true});
                    UpdateContext({txtOrderItemAmount_validation: true});
                    UpdateContext({cbOrderItemProfitCenter_validation: true});
                    UpdateContext({cbOrderItemBudgetCategory_validation: true});
                    UpdateContext({cbOrderItemBudgetItem_validation: true});
                    UpdateContext({txtOrderItemDescription_validation: true});
                    
                    UpdateContext({BudgetItemHelper_PC: Blank()});
                    UpdateContext({BudgetItemHelper_BC: Blank()});
                    UpdateContext({BudgetItemHelper_BI: Blank()});
                    
                    UpdateContext({ItemPCNotChanged: true});
                    UpdateContext({ItemBCNotChanged: true});
                    UpdateContext({ItemBINotChanged: true});
                    
                    UpdateContext({popUpOrderItemVisibility: true});
                    UpdateContext({popUpOrderItemFormMode: FormMode.New});
                    UpdateContext({popUporderItem: Blank()});
                       
                PaddingTop: =-1
                Visible: =false
                Width: =25
                X: =202
                Y: =7
                ZIndex: =12

            lblPopUpBudgetValidation_CurrentOrderItems_2 As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_CurrentOrderItems" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =174
                X: =514
                Y: =7
                ZIndex: =19

            lblPopUpBudgetValidation_BudgetItems_2 As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_BudgetItems" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =116
                X: =889
                Y: =7
                ZIndex: =20

            lblPopUpBudgetValidation_Diff_2 As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_Diff" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =116
                X: =1033
                Y: =7
                ZIndex: =21

        lblOrdLegalEntity_6 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: |-
                =LookUp(StringsOrder,AppKey="lblOrdLegalEntity" && Language=SelectedLanguage,String) & ":"
            Tooltip: =
            Width: =190
            X: =111
            Y: =81
            ZIndex: =8

        lblOrdDepartment_6 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: |-
                =LookUp(StringsOrder,AppKey="lblOrdDepartment" && Language=SelectedLanguage,String) & ":"
            Tooltip: =
            Width: =190
            X: =111
            Y: =112
            ZIndex: =10

        lblOrdLegalEntity_7 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =OrderSHPItem.'Legal Entity Name'
            Tooltip: =
            Width: =473
            X: =350
            Y: =81
            ZIndex: =11

        lblOrdDepartment_7 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =OrderSHPItem.'Cost Center'
            Tooltip: =
            Width: =516
            X: =350
            Y: =112
            ZIndex: =12

        btnStartApprove_2 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(popUpBudgetValidationIsRunning,DisplayMode.Disabled,DisplayMode.Edit)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtOrderNumber.Text),
                        UpdateContext({txtOrderNumber_validation: false}),
                        UpdateContext({txtOrderNumber_validation: true})
                        );
                        If(IsEmpty(cbOrdLegalEntity.SelectedItems) || IsBlank(cbOrdLegalEntity.SelectedItems),
                        UpdateContext({cbOrdLegalEntity_validation: false}),
                        UpdateContext({cbOrdLegalEntity_validation: true})
                        );
                        /*If(IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems),
                        UpdateContext({cbOrdContractNumber_validation: false}),
                        UpdateContext({cbOrdContractNumber_validation: true})
                        );*/
                        If(IsBlank(dpOrderDate.Value),
                        UpdateContext({dpOrderDate_validation: false}),
                        UpdateContext({dpOrderDate_validation: true})
                        );
                        If(IsBlank(txtOrderDescription.Text),
                        UpdateContext({txtOrderDescription_validation: false}),
                        UpdateContext({txtOrderDescription_validation: true})
                        );
                        If(IsEmpty(cbOrdVendor.SelectedItems) || IsBlank(cbOrdVendor.SelectedItems),
                        UpdateContext({cbOrdVendor_validation: false}),
                        UpdateContext({cbOrdVendor_validation: true})
                        );
                        If(IsEmpty(cbOrdRequestor.SelectedItems) || IsBlank(cbOrdRequestor.SelectedItems),
                        UpdateContext({cbOrdRequestor_validation: false}),
                        UpdateContext({cbOrdRequestor_validation: true})
                        );
                        If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                        UpdateContext({cbOrdDepartment_validation: false}),
                        UpdateContext({cbOrdDepartment_validation: true})
                        );
                        If(IsBlank(txtOrdBudgetOwner.Text),
                        UpdateContext({txtOrdBudgetOwner_validation: false}),
                        UpdateContext({txtOrdBudgetOwner_validation: true})
                        );
                        If(IsEmpty(cbOrderOrderer.SelectedItems) || IsBlank(cbOrderOrderer.SelectedItems),
                        UpdateContext({cbOrderOrderer_validation: false}),
                        UpdateContext({cbOrderOrderer_validation: true})
                        );
                        If(IsBlank(txtOrderRecipient.Text),
                        UpdateContext({txtOrderRecipient_validation: false}),
                        UpdateContext({txtOrderRecipient_validation: true})
                        );
                        If(IsBlank(txtlblOrderDescriptionDetailed.Text),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: false}),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: true})
                        );
                        /*If(IsEmpty(cbWatchers.SelectedItems) || IsBlank(cbWatchers.SelectedItems),
                        UpdateContext({cbWatchers_validation: false}),
                        UpdateContext({cbWatchers_validation: true})
                        );*/
                        /*If(IsBlank(txtOrderOrdLogEventDescription.Text),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                        );*/
                
                        If(CountRows(glrOrderItems.AllItems) < 1,
                        UpdateContext({OrderItems_validation: false}),
                        UpdateContext({OrderItems_validation: true})
                        );
                
                        If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                            Set(cbOrderOrdererValue,BlankPeople),
                            Set(cbOrderOrdererValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                                Email:First(cbOrderOrderer.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                            Set(cbOrdRequestorValue,BlankPeople),
                            Set(cbOrdRequestorValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                                Department:"",
                                DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                                Email:First(cbOrdRequestor.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Set(cbOrdBudgetOwnerValue,BlankPeople),
                            Set(cbOrdBudgetOwnerValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                                Department:"",
                                DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                                Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                        Set(cbWatchersValue,BlankPeople);
                        If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                            Set(cbWatchersValue,BlankPeople),
                            
                            Set(cbWatchersValue,
                                ForAll(cbWatchers.SelectedItems, {
                                    '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                    Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                    Department: "",
                                    DisplayName: ThisRecord.DisplayName,
                                    Email: ThisRecord.Mail,
                                    JobTitle: "",
                                    Picture: ""
                                    }
                                )
                            )
                
                        );
                
                        If(
                            txtOrderNumber_validation &&
                            cbOrdLegalEntity_validation &&
                            cbOrdContractNumber_validation &&
                            dpOrderDate_validation &&
                            txtOrderDescription_validation &&
                            cbOrdVendor_validation &&
                            cbOrdRequestor_validation &&
                            cbOrdDepartment_validation &&
                            txtOrdBudgetOwner_validation &&
                            cbOrderOrderer_validation &&
                            txtOrderRecipient_validation &&
                            txtlblOrderDescriptionDetailed_validation &&
                            cbWatchers_validation &&
                            txtOrderOrdLogEventDescription_validation,
                            Refresh(DMSOrder);        
                            Set(NewOrderSHPItem,
                                Patch(
                                    DMSOrder,
                                    If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                                    {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                                    {'Budget Owner':cbOrdBudgetOwnerValue},
                                    {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                                    {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                                    {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                                    {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                                    {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                                    {'Order Amount Actual':totalLocal},
                                    {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                                    {'Order Amount Original':totalLocal},
                                    {'Order Date':dpOrderDate.Value},
                                    {Description:txtlblOrderDescriptionDetailed.Text},
                                    {'In Budget':cbInBudget.Value},
                                    {'Order Number':txtOrderNumber.Text},
                                    {Orderer:cbOrderOrdererValue},
                                    {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                                    {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                                    {Recipient:txtOrderRecipient.Text},
                                    {Requestor:cbOrdRequestorValue},
                                    {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                                    {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                                    {Summary:txtOrderDescription.Text},
                                    {Watchers:cbWatchersValue},
                                    //{DMSOrdInvoicesAmount_Approved:},
                                    //{DMSOrdInvoicesAmount_Declined:},
                                    //{DMSOrdInvoicesAmount_InApproval:},
                                    {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                                    {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                                    {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                                    {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                                    {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                                    {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                                    {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                                    //{DMSOrdProcessEyesCount:},
                                    //{DMSOrdProcessNextOwner:},
                                    //{DMSOrdProcessNextOwnerEMail:},
                                    //{DMSOrdProcessNextOwnerName:},
                                    {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                                    //{DMSOrdProcessPreviousOwner:},
                                    //{DMSOrdProcessPreviousOwnerEMail:},
                                    //{DMSOrdProcessPreviousOwnerName:},
                                    //{DMSOrdProcessPreviousPhase:},
                                    {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                                    {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                                    {'Budget Owner Equals Orderer':First(cbOrdBudgetOwnerValue).Email = First(cbOrdRequestorValue).Email},
                                    {Ordered:cbOrderOrdered.Value},
                                    {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                                    {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                                );        
                            );
                
                            If(customFormMode = FormMode.New,  
                                Patch(
                                    DMSOrder,
                                    LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                    {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                                    {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                                );
                                Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                                Set(OrderSHPItemID,NewOrderSHPItem.ID);
                                Set(customFormMode, FormMode.Edit);
                                Reset(txtOrderNumber);
                            );
                            Reset(txtOrderOrdLogEventDescription);
                            Refresh(DMSOrderProcessLog);
                            
                            // APPROVE
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                {'Order Action Date':Now()},
                                {'Order Action Description':txtOrderOrdLogEventDescription.Text},
                                {'Order Action Required':"START APPROVE"},
                                {'Order Action Required by':Table(SHPMeClaim)},
                                {'Order Action Required by E-mail':User().Email},
                                {'Approved By':Collect(NewOrderSHPItem.'Approved By',SHPMeClaim)}
                            );
                            Select(btnAmountsHelper);
                            Set(customFormMode, FormMode.View);
                            Notify(LookUp(StringsProcess,AppKey="NotificationApprovalStarted" && Language=SelectedLanguage,String),NotificationType.Success);
                            ,
                            Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                        );
                UpdateContext({popUpBudgetValidationV2Visibility: false});
                UpdateContext({popUpBudgetValidationV2Visibility_StartApprove: false});
                Select(btnAmountsHelper);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdStartApproval" && Language=SelectedLanguage,String)
            Visible: =popUpBudgetValidationV2Visibility_StartApprove
            Width: =202
            X: =471
            Y: =500
            ZIndex: =14

    popUpBudgetValidation As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.1)
        Height: =695
        Visible: =popUpBudgetValidationVisibility || popUpBudgetValidationVisibility_StartApprove
        Width: =Parent.Width
        X: =0*0
        Y: =73
        ZIndex: =14

        popUpFooter_14 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =White
            Height: =474
            Width: =1171
            X: =98
            Y: =81
            ZIndex: =1

        popUpHeader_22 As rectangle:
            BorderColor: =patternColor1.Fill
            BorderThickness: =2
            Fill: =patternColor1.Fill
            Height: =48
            Width: =1171
            X: =98
            Y: =33
            ZIndex: =2

        LabelpopUpBudgetValidation As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Height: =48
            Size: =18
            Text: =LookUp(StringsOrder,AppKey="LabelpopUpBudgetValidation" && Language=SelectedLanguage,String)
            Width: =573
            X: =396
            Y: =33
            ZIndex: =3

        btnNo_1 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: |-
                =//If(IsBlank(DMS_SystemAction_35_CanvasApp_Response),DisplayMode.Disabled,DisplayMode.Edit)
                DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpBudgetValidationVisibility: false});
                UpdateContext({popUpBudgetValidationVisibility_StartApprove: false});
                UpdateContext({DMS_SystemAction_35_CanvasApp_Response: Blank()});
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnClose" && Language=SelectedLanguage,String)
            X: =706
            Y: =500
            ZIndex: =5

        OrderItems_1 As groupContainer:
            BorderColor: =If(OrderItems_validation,patternColor1.Fill,patternColor6.Fill)
            BorderThickness: =1
            Fill: =Transparent
            Height: =321
            Width: =1171
            X: =97
            Y: =160
            ZIndex: =6

            lblPopUpBudgetValidation_AllOrderItems As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_AllOrderItems" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =177
                X: =687
                Y: =7
                ZIndex: =4

            lblOrdItemBudgetCategoryHeader_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblBudgetCategory" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =190
                X: =270
                Y: =7
                ZIndex: =7

            lblOrdItemDeliverablesDueHeader_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblOrdItemDeliverablesDueHeader" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =132
                X: =12
                Y: =7
                ZIndex: =8

            "glrOrderItems_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                Height: =259
                Items: |-
                    =If(popUpBudgetValidationVisibility || popUpBudgetValidationVisibility_StartApprove,
                        Filter(
                            AddColumns(
                                GroupBy(
                                    DMSOrderItem,
                                    "DMSOrdItemDeliverablesDue",
                                    "DMSOrdItemProfitCenterCode",
                                    "DMSOrdItemBudgetCategoryCode",
                                    "OrderItemsGroupData"
                                ),
                                "OrderItemTotal",
                                Sum(Filter(OrderItemsGroupData,DMSOrdItemOrderID = OrderSHPItem.ID), DMSOrdItemAmountActual),
                                "AllOrderItemTotal",
                                Sum(Filter(OrderItemsGroupData,(DMSOrdItemDepartmentCode = OrderSHPItem.'Cost Center Code' && DMSOrdItemLegalEntityCode = OrderSHPItem.'Legal Entity Code' && !(DMSOrdItemProcessActualPhase = "10") && !(DMSOrdItemProcessActualPhase = "99")) || DMSOrdItemOrderID = OrderSHPItem.ID), DMSOrdItemAmountActual),
                                "BudgetItemTotal",
                                Sum( //delegace je OK, výsledek nebude nikdy víc, než 2k záznamů
                                    Filter(
                                        DMSBudget,
                                        'Budget Date' = DMSOrdItemDeliverablesDue &&
                                        'Profit Center Code' = DMSOrdItemProfitCenterCode &&
                                        'Budget Category Code' = DMSOrdItemBudgetCategoryCode &&
                                        'Department Code' = OrderSHPItem.'Cost Center Code' &&
                                        'Legal Entity Code' = OrderSHPItem.'Legal Entity Code'
                                    ),
                                    'Budget Amount')
                                ),
                            !IsBlank(OrderItemTotal)
                        )
                    )
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =45
                Visible: =!popUpBudgetValidationIsRunning
                Width: =1159
                X: =12
                Y: =62
                ZIndex: =9

                Separator1_3 As rectangle:
                    Fill: =patternColor1.Fill
                    Height: =1
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth
                    Y: =Parent.TemplateHeight - 1
                    ZIndex: =5

                lblOrdItemDeliverablesDue_1 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =Text(ThisItem.DMSOrdItemDeliverablesDue,"[$-en-US]yyyy/mm")
                    Tooltip: =labelSettings.Tooltip
                    Width: =93
                    X: =20
                    Y: =2
                    ZIndex: =6

                lblOrdItemProfitCenter_1 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =First(ThisItem.OrderItemsGroupData).DMSOrdItemProfitCenterTitle
                    Tooltip: =labelSettings.Tooltip
                    Width: =190
                    X: =128
                    Y: =2
                    ZIndex: =7

                lblOrdItemBudgetCategory_1 As label:
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: =First(ThisItem.OrderItemsGroupData).DMSOrdItemBudgetCategoryTitle
                    Tooltip: =labelSettings.Tooltip
                    Width: =303
                    X: =258
                    Y: =2
                    ZIndex: =8

                lblOrdItemAmountActual_1 As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.OrderItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =490
                    Y: =2
                    ZIndex: =10

                lblOrdItemAmountActual_2 As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.AllOrderItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =668
                    ZIndex: =11

                lblOrdItemAmountActual_3 As label:
                    Align: =Align.Right
                    Color: =labelSettings.Color
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.BudgetItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =808
                    ZIndex: =12

                lblInBudgetWarning_1 As label:
                    Color: =patternColor6.Fill
                    FontWeight: =FontWeight.Semibold
                    Size: =20
                    Text: ="!"
                    Tooltip: =LookUp(StringsOrder,AppKey="tooltipItemNotInBuget" && Language=SelectedLanguage,String) 
                    Visible: =/*ThisItem.OrderItemTotal +*/ (ThisItem.AllOrderItemTotal > ThisItem.BudgetItemTotal) && (ThisItem.DMSOrdItemProfitCenterCode in LookUp(DMSLegalEntity, 'Legal Entity Code' = OrderSHPItem.'Legal Entity Code').'Profit Center - In Budget')
                    Width: =13
                    ZIndex: =13

                lblOrdItemAmountActual_4 As label:
                    Align: =Align.Right
                    Color: |-
                        =//labelSettings.Color
                        If(Value(Self.Text) = 0,
                            labelSettings.Color,
                            If(Value(Self.Text) < 0,
                                Red,
                                Green
                            )
                        )
                    Font: =labelSettings.Font
                    Size: =labelSettings.Size
                    Text: |-
                        =Text(ThisItem.BudgetItemTotal - ThisItem.AllOrderItemTotal,"[$-en-US]#,#")
                    Tooltip: =labelSettings.Tooltip
                    Width: =184
                    X: =952
                    ZIndex: =14

            lblOrdItemProfitCenterHeader_1 As label:
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblProfitCentrum" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =129
                X: =139
                Y: =7
                ZIndex: =11

            btnOrdItemNewItem_1 As icon.Edit:
                Color: =patternColor1.Fill
                DisplayMode: |-
                    =If((customFormMode = FormMode.Edit && OrderSHPItem.'Actual Phase' = "10" && SHPMeClaim.Email = OrderSHPItem.'Actual Owner E-mail') || customFormMode = FormMode.New,
                        DisplayMode.Edit,
                        If(customFormMode = FormMode.Edit,
                            DisplayMode.Disabled,
                            DisplayMode.View
                        )
                    )
                FocusedBorderThickness: =0
                Height: =25
                Icon: =Icon.Add
                OnSelect: |
                    =UpdateContext({dpOrdItemDeliverablesDueForm_validation: true});
                    UpdateContext({txtOrderItemAmount_validation: true});
                    UpdateContext({cbOrderItemProfitCenter_validation: true});
                    UpdateContext({cbOrderItemBudgetCategory_validation: true});
                    UpdateContext({cbOrderItemBudgetItem_validation: true});
                    UpdateContext({txtOrderItemDescription_validation: true});
                    
                    UpdateContext({BudgetItemHelper_PC: Blank()});
                    UpdateContext({BudgetItemHelper_BC: Blank()});
                    UpdateContext({BudgetItemHelper_BI: Blank()});
                    
                    UpdateContext({ItemPCNotChanged: true});
                    UpdateContext({ItemBCNotChanged: true});
                    UpdateContext({ItemBINotChanged: true});
                    
                    UpdateContext({popUpOrderItemVisibility: true});
                    UpdateContext({popUpOrderItemFormMode: FormMode.New});
                    UpdateContext({popUporderItem: Blank()});
                       
                PaddingTop: =-1
                Visible: =false
                Width: =25
                X: =202
                Y: =7
                ZIndex: =12

            lblNonActive_6 As label:
                Align: =Align.Center
                Color: =RGBA(255, 255, 255, 1)
                Fill: =RGBA(0, 0, 0, 0.4)
                Height: =Parent.Height
                Size: =30
                Text: =LookUp(StringsOrder,AppKey="lblNonActive" && Language=SelectedLanguage,String)
                Visible: =customFormMode = FormMode.New
                Width: =Parent.Width
                ZIndex: =18

            lblPopUpBudgetValidation_CurrentOrderItems As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_CurrentOrderItems" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =174
                X: =514
                Y: =7
                ZIndex: =19

            lblPopUpBudgetValidation_BudgetItems As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_BudgetItems" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =116
                X: =889
                Y: =7
                ZIndex: =20

            lblPopUpBudgetValidation_Diff As label:
                Align: =Align.Right
                Color: =labelSettings.Color
                Font: =labelSettings.Font
                Height: =50
                Size: =labelSettings.Size
                Text: =LookUp(StringsOrder,AppKey="lblPopUpBudgetValidation_Diff" && Language=SelectedLanguage,String)
                Tooltip: =labelSettings.Tooltip
                Width: =116
                X: =1033
                Y: =7
                ZIndex: =21

        lblOrdLegalEntity_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: |-
                =LookUp(StringsOrder,AppKey="lblOrdLegalEntity" && Language=SelectedLanguage,String) & ":"
            Tooltip: =
            Width: =190
            X: =111
            Y: =81
            ZIndex: =8

        lblOrdDepartment_1 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: |-
                =LookUp(StringsOrder,AppKey="lblOrdDepartment" && Language=SelectedLanguage,String) & ":"
            Tooltip: =
            Width: =190
            X: =111
            Y: =112
            ZIndex: =10

        lblOrdLegalEntity_2 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =OrderSHPItem.'Legal Entity Name'
            Tooltip: =
            Width: =473
            X: =350
            Y: =81
            ZIndex: =11

        lblOrdDepartment_2 As label:
            Color: =labelSettings.Color
            Font: =labelSettings.Font
            Size: =labelSettings.Size
            Text: =OrderSHPItem.'Cost Center'
            Tooltip: =
            Width: =516
            X: =350
            Y: =112
            ZIndex: =12

        Image3 As image:
            Image: =Loading
            Visible: =popUpBudgetValidationIsRunning
            X: =633
            Y: =268
            ZIndex: =13

        btnStartApprove As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            DisplayMode: =If(popUpBudgetValidationIsRunning,DisplayMode.Disabled,DisplayMode.Edit)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =Set(totalLocal,Value(lblTotal.Text));
                
                If(IsBlank(txtOrderNumber.Text),
                        UpdateContext({txtOrderNumber_validation: false}),
                        UpdateContext({txtOrderNumber_validation: true})
                        );
                        If(IsEmpty(cbOrdLegalEntity.SelectedItems) || IsBlank(cbOrdLegalEntity.SelectedItems),
                        UpdateContext({cbOrdLegalEntity_validation: false}),
                        UpdateContext({cbOrdLegalEntity_validation: true})
                        );
                        /*If(IsEmpty(cbOrdContractNumber.SelectedItems) || IsBlank(cbOrdContractNumber.SelectedItems),
                        UpdateContext({cbOrdContractNumber_validation: false}),
                        UpdateContext({cbOrdContractNumber_validation: true})
                        );*/
                        If(IsBlank(dpOrderDate.Value),
                        UpdateContext({dpOrderDate_validation: false}),
                        UpdateContext({dpOrderDate_validation: true})
                        );
                        If(IsBlank(txtOrderDescription.Text),
                        UpdateContext({txtOrderDescription_validation: false}),
                        UpdateContext({txtOrderDescription_validation: true})
                        );
                        If(IsEmpty(cbOrdVendor.SelectedItems) || IsBlank(cbOrdVendor.SelectedItems),
                        UpdateContext({cbOrdVendor_validation: false}),
                        UpdateContext({cbOrdVendor_validation: true})
                        );
                        If(IsEmpty(cbOrdRequestor.SelectedItems) || IsBlank(cbOrdRequestor.SelectedItems),
                        UpdateContext({cbOrdRequestor_validation: false}),
                        UpdateContext({cbOrdRequestor_validation: true})
                        );
                        If(IsEmpty(cbOrdDepartment.SelectedItems) || IsBlank(cbOrdDepartment.SelectedItems),
                        UpdateContext({cbOrdDepartment_validation: false}),
                        UpdateContext({cbOrdDepartment_validation: true})
                        );
                        If(IsBlank(txtOrdBudgetOwner.Text),
                        UpdateContext({txtOrdBudgetOwner_validation: false}),
                        UpdateContext({txtOrdBudgetOwner_validation: true})
                        );
                        If(IsEmpty(cbOrderOrderer.SelectedItems) || IsBlank(cbOrderOrderer.SelectedItems),
                        UpdateContext({cbOrderOrderer_validation: false}),
                        UpdateContext({cbOrderOrderer_validation: true})
                        );
                        If(IsBlank(txtOrderRecipient.Text),
                        UpdateContext({txtOrderRecipient_validation: false}),
                        UpdateContext({txtOrderRecipient_validation: true})
                        );
                        If(IsBlank(txtlblOrderDescriptionDetailed.Text),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: false}),
                        UpdateContext({txtlblOrderDescriptionDetailed_validation: true})
                        );
                        /*If(IsEmpty(cbWatchers.SelectedItems) || IsBlank(cbWatchers.SelectedItems),
                        UpdateContext({cbWatchers_validation: false}),
                        UpdateContext({cbWatchers_validation: true})
                        );*/
                        /*If(IsBlank(txtOrderOrdLogEventDescription.Text),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: false}),
                        UpdateContext({txtOrderOrdLogEventDescription_validation: true})
                        );*/
                
                        If(CountRows(glrOrderItems.AllItems) < 1,
                        UpdateContext({OrderItems_validation: false}),
                        UpdateContext({OrderItems_validation: true})
                        );
                
                        If(IsBlank(cbOrderOrderer.SelectedItems) || IsEmpty(cbOrderOrderer.SelectedItems),
                            Set(cbOrderOrdererValue,BlankPeople),
                            Set(cbOrderOrdererValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrderOrderer.SelectedItems).Mail),
                                Department:"",
                                DisplayName:First(cbOrderOrderer.SelectedItems).DisplayName,
                                Email:First(cbOrderOrderer.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(cbOrdRequestor.SelectedItems) || IsEmpty(cbOrdRequestor.SelectedItems),
                            Set(cbOrdRequestorValue,BlankPeople),
                            Set(cbOrdRequestorValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & First(cbOrdRequestor.SelectedItems).Mail,
                                Department:"",
                                DisplayName:First(cbOrdRequestor.SelectedItems).DisplayName,
                                Email:First(cbOrdRequestor.SelectedItems).Mail,
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                
                        If(IsBlank(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                            Set(cbOrdBudgetOwnerValue,BlankPeople),
                            Set(cbOrdBudgetOwnerValue,
                                Table({'@odata.type':"#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                Claims:"i:0#.f|membership|" & Lower(First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail'),
                                Department:"",
                                DisplayName:First(cbOrdDepartment.SelectedItems).'Budget Owner Name',
                                Email:First(cbOrdDepartment.SelectedItems).'Budget Owner E-mail',
                                JobTitle:".",
                                Picture:"."})
                            )
                        );
                        Set(cbWatchersValue,BlankPeople);
                        If(IsBlank(cbWatchers.SelectedItems) || IsEmpty(cbWatchers.SelectedItems),
                            Set(cbWatchersValue,BlankPeople),
                            
                            Set(cbWatchersValue,
                                ForAll(cbWatchers.SelectedItems, {
                                    '@odata.type': "#Microsoft.Azure.Connectors.SharePoint.SPListExpandedUser",
                                    Claims: "i:0#.f|membership|" & ThisRecord.Mail,
                                    Department: "",
                                    DisplayName: ThisRecord.DisplayName,
                                    Email: ThisRecord.Mail,
                                    JobTitle: "",
                                    Picture: ""
                                    }
                                )
                            )
                
                        );
                
                        If(
                            txtOrderNumber_validation &&
                            cbOrdLegalEntity_validation &&
                            cbOrdContractNumber_validation &&
                            dpOrderDate_validation &&
                            txtOrderDescription_validation &&
                            cbOrdVendor_validation &&
                            cbOrdRequestor_validation &&
                            cbOrdDepartment_validation &&
                            txtOrdBudgetOwner_validation &&
                            cbOrderOrderer_validation &&
                            txtOrderRecipient_validation &&
                            txtlblOrderDescriptionDetailed_validation &&
                            cbWatchers_validation &&
                            txtOrderOrdLogEventDescription_validation,
                            Refresh(DMSOrder);        
                            Set(NewOrderSHPItem,
                                Patch(
                                    DMSOrder,
                                    If(customFormMode = FormMode.New,Defaults(DMSOrder),LookUp(DMSOrder,ID = OrderSHPItemID)),
                                    {Title: If(customFormMode = FormMode.New,"ORD" & Text(First(Sort(DMSOrder,ID,Descending)).ID + 1,"[$-en-US]000000"),OrderSHPItem.Title)},
                                    {'Budget Owner':cbOrdBudgetOwnerValue},
                                    {'Budget Owner E-mail':First(cbOrdBudgetOwnerValue).Email},
                                    {'Budget Owner Name':First(cbOrdBudgetOwnerValue).DisplayName},
                                    {'Contract Number':First(cbOrdContractNumber.SelectedItems).Contract},//doplnit konkretni field
                                    {'Cost Center Code':First(cbOrdDepartment.SelectedItems).'Cost Center Code'},//doplnit konkretni field
                                    {'Cost Center':First(cbOrdDepartment.SelectedItems).'Name (DMSDepartmentName)'},//doplnit konkretni field
                                    {'Order Amount Actual':totalLocal},
                                    {'Order Amount Difference':If(customFormMode = FormMode.New,0,LookUp(DMSOrder,ID = OrderSHPItemID).'Order Amount Difference')},
                                    {'Order Amount Original':totalLocal},
                                    {'Order Date':dpOrderDate.Value},
                                    {Description:txtlblOrderDescriptionDetailed.Text},
                                    {'In Budget':cbInBudget.Value},
                                    {'Order Number':txtOrderNumber.Text},
                                    {Orderer:cbOrderOrdererValue},
                                    {DMSOrderOrdererEMail:First(cbOrderOrderer.SelectedItems).Mail},
                                    {DMSOrderOrdererName:First(cbOrderOrderer.SelectedItems).DisplayName},
                                    {Recipient:txtOrderRecipient.Text},
                                    {Requestor:cbOrdRequestorValue},
                                    {'Requestor E-mail':First(cbOrdRequestor.SelectedItems).Mail},
                                    {DMSOrderRequestorName:First(cbOrdRequestor.SelectedItems).DisplayName},
                                    {Summary:txtOrderDescription.Text},
                                    {Watchers:cbWatchersValue},
                                    //{DMSOrdInvoicesAmount_Approved:},
                                    //{DMSOrdInvoicesAmount_Declined:},
                                    //{DMSOrdInvoicesAmount_InApproval:},
                                    {'Legal Entity Code':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Code'},
                                    {'Legal Entity Name':First(cbOrdLegalEntity.SelectedItems).'Legal Entity Name'},
                                    {DMSOrdLegalEntityType:{Value:First(cbOrdLegalEntity.SelectedItems).'Legal Entity Type'}},
                                    {'Actual Owner':If(customFormMode = FormMode.New,Table(SHPMeClaim),OrderSHPItem.'Actual Owner')},
                                    {'Actual Owner E-mail':If(customFormMode = FormMode.New,SHPMeClaim.Email,OrderSHPItem.'Actual Owner E-mail')},
                                    {'Actual Owner Name':If(customFormMode = FormMode.New,SHPMeClaim.DisplayName,OrderSHPItem.'Actual Owner Name')},
                                    {'Actual Phase':If(customFormMode = FormMode.New,"10",OrderSHPItem.'Actual Phase')},
                                    //{DMSOrdProcessEyesCount:},
                                    //{DMSOrdProcessNextOwner:},
                                    //{DMSOrdProcessNextOwnerEMail:},
                                    //{DMSOrdProcessNextOwnerName:},
                                    {DMSOrdProcessNote:txtOrderOrdLogEventDescription.Text},
                                    //{DMSOrdProcessPreviousOwner:},
                                    //{DMSOrdProcessPreviousOwnerEMail:},
                                    //{DMSOrdProcessPreviousOwnerName:},
                                    //{DMSOrdProcessPreviousPhase:},
                                    {'Vendor Code':First(cbOrdVendor.SelectedItems).'ERP Code'},
                                    {Vendor:First(cbOrdVendor.SelectedItems).'Name (DMSVendorName)'},
                                    {'Budget Owner Equals Orderer':First(cbOrdBudgetOwnerValue).Email = First(cbOrdRequestorValue).Email},
                                    {Ordered:cbOrderOrdered.Value},
                                    {DMSOrderOrderedDate:If(cbOrderOrdered.Value,Now())},
                                    {DMSOrderOrderedNote:If(cbOrderOrdered.Value,cbOrderOrderedNote.Text)}
                                );        
                            );
                
                            If(customFormMode = FormMode.New,  
                                Patch(
                                    DMSOrder,
                                    LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                    {Title:"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")},
                                    {'Order Number':"ORD" &  Text(NewOrderSHPItem.ID,"[$-en-US]000000")}
                                );
                                Set(OrderSHPItem,LookUp(DMSOrder,ID = NewOrderSHPItem.ID));
                                Set(OrderSHPItemID,NewOrderSHPItem.ID);
                                Set(customFormMode, FormMode.Edit);
                                Reset(txtOrderNumber);
                            );
                            Reset(txtOrderOrdLogEventDescription);
                            Refresh(DMSOrderProcessLog);
                            
                            // APPROVE
                            Patch(
                                DMSOrder,
                                LookUp(DMSOrder,ID = NewOrderSHPItem.ID),
                                {'Order Action Date':Now()},
                                {'Order Action Description':txtOrderOrdLogEventDescription.Text},
                                {'Order Action Required':"START APPROVE"},
                                {'Order Action Required by':Table(SHPMeClaim)},
                                {'Order Action Required by E-mail':User().Email},
                                {'Approved By':Collect(NewOrderSHPItem.'Approved By',SHPMeClaim)}
                            );
                            Select(btnAmountsHelper);
                            Set(customFormMode, FormMode.View);
                            Notify(LookUp(StringsProcess,AppKey="NotificationApprovalStarted" && Language=SelectedLanguage,String),NotificationType.Success);
                            ,
                            Notify(LookUp(StringsProcess,AppKey="errEmptyField" && Language=SelectedLanguage,String),NotificationType.Error);
                        );
                UpdateContext({popUpLimitValidationVisibility: false});
                Select(btnAmountsHelper);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnOrdStartApproval" && Language=SelectedLanguage,String)
            Visible: =popUpBudgetValidationVisibility_StartApprove
            Width: =202
            X: =471
            Y: =500
            ZIndex: =14

        loadingTimer_1 As timer:
            Duration: =2000
            OnSelect: |-
                =Refresh(DMSContractDocuments);
                If(!IsBlankOrError(LookUp(DMSContractDocuments, DMSContractID = ContractSHPItem.'Legal Entity Code' & "_" & ContractSHPItem.DMSContractDepartmentCode & "_" & ContractSHPItem.ID)),
                    UpdateContext({showLoading: false})
                );
            OnTimerEnd: |-
                =Refresh(DMSOrder);
                UpdateContext({popUpBudgetValidationIsRunning: !LookUp(DMSOrder,ID = OrderSHPItemID).DMSOrderBudgetCheckTmp});
            Repeat: =true
            Start: =popUpBudgetValidationIsRunning
            Visible: =false
            X: =40
            Y: =40
            ZIndex: =15

    headerOrders As groupContainer:
        Fill: =Transparent
        Height: =73
        Width: =Parent.Width
        X: =0*0
        ZIndex: =15

        lblOrdTitle As label:
            Align: =Align.Center
            BorderColor: =RGBA(166, 166, 166, 1)
            Color: =patternColor1.Fill
            Height: =73
            Text: =LookUp(StringsOrder,AppKey="scrOrders" && Language=SelectedLanguage,String)
            Width: =1366
            ZIndex: =2

        OrdHeurekaLogo As image:
            Height: =72
            Image: =heureka_group_logo
            Width: =240
            X: =30
            ZIndex: =3

        OrdHeaderBorder As rectangle:
            BorderColor: =patternColor3.Fill
            BorderThickness: =0.5
            Fill: =RGBA(0, 0, 0, 0)
            Height: =1
            Width: =Parent.Width
            Y: =72
            ZIndex: =4

        btnBack As icon.ChevronLeft:
            Color: =patternColor1.Fill
            Height: =40
            Icon: =Icon.ChevronLeft
            OnSelect: =Navigate(scrOrdersTestMenu)
            Visible: =DebugMode
            Width: =40
            X: =1184
            Y: =16
            ZIndex: =5

        btnCloseApp As icon.ChevronLeft:
            Color: =patternColor1.Fill
            Height: =40
            Icon: =Icon.Cancel
            OnSelect: =
            Visible: =DebugMode
            Width: =40
            X: =1244
            Y: =17
            ZIndex: =6

        btnBackToMobile As arrow.backArrow:
            Fill: =patternColor1.Fill
            Height: =35
            OnSelect: =Launch(txtWebAppURL)
            Visible: |-
                =!IsBlank(Acceleration.X)
                //true
            Width: =35
            X: =1249
            Y: =18
            ZIndex: =7

    scrDebugMode_1 As groupContainer:
        Fill: =RGBA(0, 0, 0, 0.8)
        Height: =768
        Visible: =dbgWindow
        Width: =678
        X: =688
        ZIndex: =16

        Label5_2 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(0, 0, 0, 0.6)
            FontWeight: =FontWeight.Semibold
            Height: =71
            Text: ="DEBUG MODE"
            Width: =678
            ZIndex: =1

        Label6_14 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="User email:"
            X: =16
            Y: =117
            ZIndex: =2

        Label6_15 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =User().Email
            Width: =439
            X: =222
            Y: =117
            ZIndex: =3

        Label6_16 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="ParamScreen:"
            X: =16
            Y: =233
            ZIndex: =4

        Label6_17 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =ParamScreen
            Width: =439
            X: =221
            Y: =233
            ZIndex: =5

        Label6_18 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="ParamFormMode:"
            Width: =162
            X: =16
            Y: =273
            ZIndex: =6

        Label6_19 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =ParamFormMode
            Width: =439
            X: =222
            Y: =273
            ZIndex: =7

        Label6_20 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="OrderSHPItemID:"
            Width: =176
            X: =16
            Y: =313
            ZIndex: =8

        Label6_21 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =OrderSHPItemID
            Width: =439
            X: =222
            Y: =313
            ZIndex: =9

        Label6_22 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="customFormMode:"
            Width: =176
            X: =16
            Y: =353
            ZIndex: =10

        Label6_23 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =customFormMode
            Width: =439
            X: =222
            Y: =353
            ZIndex: =11

        Label6_12 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="User name:"
            X: =16
            Y: =77
            ZIndex: =12

        Label6_13 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =User().FullName
            Width: =439
            X: =222
            Y: =77
            ZIndex: =13

        Label5_3 As label:
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(0, 0, 0, 0.6)
            FontWeight: =FontWeight.Semibold
            Height: =71
            Text: |-
                ="version: " & appVersion
            Width: =678
            Y: =697
            ZIndex: =14

        Label6_26 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="User claim:"
            X: =16
            Y: =152
            ZIndex: =15

        Label6_27 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =SHPMeClaim.Email
            Width: =439
            X: =222
            Y: =152
            ZIndex: =16

        Label6_28 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: |-
                ="Item owner:"
            X: =16
            Y: =192
            ZIndex: =17

        Label6_29 As label:
            Color: =RGBA(255, 255, 255, 1)
            Text: =OrderSHPItem.'Actual Owner E-mail'
            Width: =439
            X: =222
            Y: =192
            ZIndex: =18

        btnCheck_4 As button:
            BorderColor: =patternColor3.DisabledFill
            BorderThickness: =0.5
            Color: =RGBA(0, 0, 0, 1)
            Fill: =White
            FocusedBorderColor: =patternColor4.Fill
            FocusedBorderThickness: =0.5
            HoverBorderColor: =patternColor4.Fill
            HoverColor: =
            HoverFill: =
            OnSelect: |-
                =UpdateContext({popUpBudgetValidationV2Visibility: true});
                Refresh(DMSOrderItem);
                Set(OrderSHPItem,LookUp(DMSOrder,ID = OrderSHPItemID));
                
                //odstranit do produkce
                Set(dbgWindow, !dbgWindow);
            PressedBorderColor: =patternColor4.Fill
            PressedColor: =
            PressedFill: =ColorFade(patternColor3.Fill, 90%)
            Text: =LookUp(StringsOrder,AppKey="btnCheck" && Language=SelectedLanguage,String) & " v2"
            Width: =380
            X: =149
            Y: =633
            ZIndex: =19

    icoDebugMode_1 As icon.Information:
        Color: =If(dbgWindow,RGBA(255, 255, 255, 1),patternColor1.Fill)
        Height: =33
        Icon: =Icon.Information
        OnSelect: =Set(dbgWindow, !dbgWindow);
        Width: =37
        X: =1303
        Y: =20
        ZIndex: =17

